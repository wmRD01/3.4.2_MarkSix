{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Plug/jscrypto-1.0.3/bin/cli.js"],"names":["hashCommands","hmacCommands","cipherCommands","exeCommand","manJsCrypto","join","manJsCryptoHash","manJsCryptoHmac","manJsCryptoCipher","man","path","require","resolve","file","args","process","argv","slice","length","console","error","log","exit","command","includes","doHash","doHmac","doCipher","messageArg","optionArgs","options","msg","out","i","o1","o2","Hasher","toLowerCase","MD5","SHA1","SHA3","SHA224","SHA256","SHA384","SHA512","RIPEMD160","message","test","Hex","parse","Base64","outputEncoding","result","hash","output","toString","e","keyArg","key","replace","HmacMD5","HmacSHA1","HmacSHA224","HmacSHA256","HmacSHA384","HmacSHA512","encTypeArg","mode","pad","kdf","iter","hasher","isNaN","isFinite","Cipher","AES","DES","DES3","Rabbit","RC4","encType","nSigBytes","Utf8","CBC","ECB","OFB","CFB","CTR","padding","AnsiX923","ISO10126","ISO97971","NoPadding","Pkcs7","Zero","kdfModule","PBKDF2","EvpKDF","kdfIterations","kdfHasher","encrypt","decrypt","word"],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n\nconst hashCommands = [\n  \"md5\", \"sha1\", \"sha3\", \"sha224\", \"sha256\", \"sha384\", \"sha512\", \"ripemd160\"\n];\n\nconst hmacCommands = [\n  \"hmac-md5\", \"hmac-sha1\", \"hmac-sha224\", \"hmac-sha256\", \"hmac-sha384\", \"hmac-sha512\"\n];\n\nconst cipherCommands = [\n  \"aes\", \"des\", \"des3\", \"rc4\"\n];\n\nconst exeCommand = \"npx jscrypto\"// process.argv.slice(0, 2).join(\" \");\n\nconst manJsCrypto = [\n  `Usage: ${exeCommand} <hash|hmac|cipher> [command options]\\n`,\n  \"\\n\",\n  \"  hash: \" + hashCommands.join(\", \") + \"\\n\",\n  \"  hmac: \" + hmacCommands.join(\", \") + \"\\n\",\n  \"  cipher: \" + cipherCommands.join(\", \") + \"\\n\",\n].join(\"\");\n\nconst manJsCryptoHash = [\n  `${exeCommand} <hash> message [-msg hex|base64|utf8] [-out hex|base64]\\n`,\n  \"\\n\",\n  `  <hash>: ${hashCommands.join(\", \")}\\n`,\n  \"  default:\\n\",\n  \"    -msg: utf8 ... recognize message as utf-8 string\\n\",\n  \"    -out: hex ... output hashed binary as hex string\\n\",\n  \"  example: \\n\",\n  \"    #Output of below 3 examples are the same\\n\",\n  \"    npx jscrypto sha1 test\\n\",\n  \"    npx jscrypto sha1 74657374 -in hex\\n\",\n  \"    npx jscrypto sha1 dGVzdA== -in base64\\n\",\n].join(\"\");\n\nconst manJsCryptoHmac = [\n  `${exeCommand} <hmac> message key [-msg hex|base64|utf8] [-key hex|base64|utf8] [-out hex|base64]\\n`,\n  \"\\n\",\n  `  <hmac>: ${hmacCommands.join(\", \")}\\n`,\n  \"  default:\\n\",\n  \"    -msg: utf8 ... recognize message as utf-8 string\\n\",\n  \"    -key: utf8 ... recognize key as utf-8 string\\n\",\n  \"    -out: hex ... output hashed binary as hex string\\n\",\n  \"  example: \\n\",\n  \"    #Output of below 3 examples are the same\\n\",\n  \"    npx jscrypto hmac-sha1 test key\\n\",\n  \"    npx jscrypto hmac-sha1 74657374 6b6579 -msg hex -key hex\\n\",\n  \"    npx jscrypto hmac-sha1 dGVzdA== a2V5 -msg base64 -key base64\\n\",\n].join(\"\");\n\nconst manJsCryptoCipher = [\n  `${exeCommand} <cipher> <enc|dec> <message> key [-msg hex|base64|utf8] [-key hex|base64|utf8] [-out hex|base64|utf8] [-mode cbc|ecb|ofb|cfb|ctr] [-pad pkcs7|iso10126|iso97971|ansix923|nopadding] [-kdf pbkdf2|evpkdf] [-kdfIter n] [-kdfHasher hash]\\n`,\n  \"\\n\",\n  `  <cipher>: ${cipherCommands.join(\", \")}\\n`,\n  \"  <message>: If encrypting, utf8/hex/base64 value. If decrypting, base64 encoded encrypted string\\n\",\n  \"  default:\\n\",\n  \"    -msg: utf8 ... recognize message as utf-8 string\\n\",\n  \"    -key: utf8 ... recognize key as utf-8 string\\n\",\n  \"    -out: hex ... for decryption only. output hashed binary as hex string\\n\",\n  \"    -mode: cbc ... Cipher block chaining as block cipher mode\\n\",\n  \"    -pad: pkcs7 ... Pkcs7 padding as block padding\\n\",\n  \"    -kdf: pbkdf2 ... PBKDF2 as key derivation function\\n\",\n  \"    -kdfIter: 10000 ... kdf iteration count\\n\",\n  \"    -kdfHasher: sha256 ... kdf hasher\\n\",\n  \"  example: \\n\",\n  \"    #Encrypt (Output would not be the same because of a random salt, but can be decrypted with the same key)\\n\",\n  \"    npx jscrypto aes enc test password\\n\",\n  \"    npx jscrypto aes enc 74657374 70617373776f7264 -msg hex -key hex\\n\",\n  \"    npx jscrypto aes enc dGVzdA== cGFzc3dvcmQ= -msg base64 -key base64\\n\",\n  \"    #Decrypt\\n\",\n  \"    npx jscrypto aes dec U2FsdGVkX19Kf/wItWMuaTrQYV3OljA3Cr9WPMhC6Tk= password -out utf8\\n\",\n  \"    npx jscrypto aes dec A2pYDd/3oeENsRFGA1Y0Mg== 70617373776f7264 -key hex -out utf8\\n\",\n  \"    npx jscrypto aes dec A2pYDd/3oeENsRFGA1Y0Mg== cGFzc3dvcmQ= -key base64 -out utf8\\n\",\n].join(\"\");\n\nconst man = [\n  manJsCrypto,\n  manJsCryptoHash,\n  manJsCryptoHmac,\n  manJsCryptoCipher,\n].join(\"\\n\\n\");\n\n// const resolve = (file) => `../dist/${file}`; // Use if you git clone this project and want to debug cli.js\nconst path = require(\"path\");\nconst resolve = (file) => path.join(\"..\", file);\n\nconst args = process.argv.slice(2);\n\nif(args.length < 1){\n  console.error(\"ERROR: command is not specified\");\n  console.error(\"\");\n  console.log(man);\n  process.exit(1);\n}\n\nconst command = args[0];\nif(hashCommands.includes(command)){\n  doHash();\n}\nelse if(hmacCommands.includes(command)){\n  doHmac();\n}\nelse if(cipherCommands.includes(command)){\n  doCipher();\n}\nelse{\n  console.error(\"ERROR: Unknown command\");\n  console.error(\"\");\n  console.log(man);\n  process.exit(1);\n}\n\nfunction doHash(){\n  const messageArg = args[1];\n  const optionArgs = args.slice(2);\n  const options = {\n    msg: \"utf8\",\n    out: \"hex\",\n  };\n  \n  if(optionArgs){\n    for(let i=0;i<optionArgs.length;i++){\n      const o1 = optionArgs[i];\n      const o2 = optionArgs[i+1];\n      if(o1 === \"-msg\"){\n        if(![\"hex\", \"base64\", \"utf8\"].includes(o2)){\n          console.error(\"ERROR: Unknown -in value\");\n          console.error(\"\");\n          console.log(manJsCryptoHash);\n          process.exit(1);\n        }\n        options.msg = o2;\n        i += 1;\n      }\n      else if(o1 === \"-out\"){\n        if(![\"hex\", \"base64\", \"utf8\"].includes(o2)){\n          console.error(\"ERROR: Unknown -out value\");\n          console.error(\"\");\n          console.log(manJsCryptoHash);\n          process.exit(1);\n        }\n        options.out = o2;\n        i += 1;\n      }\n      else{\n        console.error(\"ERROR: Unknown option\");\n        console.error(\"\");\n        console.log(manJsCryptoHash);\n        process.exit(1);\n      }\n    }\n  }\n  \n  let Hasher;\n  switch (command.toLowerCase()){\n    case \"md5\": Hasher = require(resolve(\"MD5\")).MD5; break;\n    case \"sha1\": Hasher = require(resolve(\"SHA1\")).SHA1; break;\n    case \"sha3\": Hasher = require(resolve(\"SHA3\")).SHA3; break;\n    case \"sha224\": Hasher = require(resolve(\"SHA224\")).SHA224; break;\n    case \"sha256\": Hasher = require(resolve(\"SHA256\")).SHA256; break;\n    case \"sha384\": Hasher = require(resolve(\"SHA384\")).SHA384; break;\n    case \"sha512\": Hasher = require(resolve(\"SHA512\")).SHA512; break;\n    case \"ripemd160\": Hasher = require(resolve(\"RIPEMD160\")).RIPEMD160; break;\n    default:\n      console.error(\"ERROR: Unknown hash\");\n      console.error(\"\");\n      console.log(manJsCryptoHash);\n      process.exit(1);\n  }\n  \n  let message;\n  if(options.msg.toLowerCase() === \"utf8\"){\n    message = messageArg;\n  }\n  else if(options.msg.toLowerCase() === \"hex\"){\n    if(!/^[0-9a-fA-F]+$/.test(messageArg)){\n      console.error(\"ERROR: Invalid Hex input\");\n      process.exit(1);\n    }\n    else if(messageArg.length % 2 !== 0){\n      console.error(\"ERROR: Hex character count must be even\");\n      process.exit(1);\n    }\n    \n    const {Hex} = require(resolve(\"Hex\")); \n    message = Hex.parse(messageArg);\n  }\n  else if(options.msg.toLowerCase() === \"base64\"){\n    const {Base64} = require(resolve(\"Base64\"));\n    message = Base64.parse(messageArg);\n  }\n  else{\n    console.error(\"ERROR: unknown -msg value\");\n    process.exit(1);\n  }\n  \n  let outputEncoding;\n  if(options.out.toLowerCase() === \"hex\"){\n    outputEncoding = require(resolve(\"Hex\")).Hex;\n  }\n  else if(options.out.toLowerCase() === \"base64\"){\n    outputEncoding = require(resolve(\"Base64\")).Base64;\n  }\n  else{\n    console.error(\"ERROR: unknown -out value\");\n    process.exit(1);\n  }\n  \n  const result = Hasher.hash(message);\n  let output;\n  try{\n    output = result.toString(outputEncoding);\n  }\n  catch(e){\n    if(options.out === \"utf8\"){\n      console.error(\"ERROR: Byte array could not be recognized as UTF-8\");\n    }\n    else{\n      console.error(\"ERROR: Failed to hash message\");\n    }\n    process.exit(1);\n  }\n  \n  console.log(output);\n  process.exit(0);\n}\n\nfunction doHmac(){\n  const messageArg = args[1] || \"\";\n  const keyArg = args[2] || \"\";\n  const optionArgs = args.slice(3);\n  const options = {\n    msg: \"utf8\",\n    key: \"utf8\",\n    out: \"hex\",\n  };\n  \n  if(optionArgs){\n    for(let i=0;i<optionArgs.length;i++){\n      const o1 = optionArgs[i];\n      const o2 = optionArgs[i+1];\n      if(o1 === \"-msg\"){\n        if(![\"hex\", \"base64\", \"utf8\"].includes(o2)){\n          console.error(\"ERROR: Unknown -msg value\");\n          console.error(\"\");\n          console.log(manJsCryptoHmac);\n          process.exit(1);\n        }\n        options.msg = o2;\n        i += 1;\n      }\n      else if(o1 === \"-key\"){\n        if(![\"hex\", \"base64\", \"utf8\"].includes(o2)){\n          console.error(\"ERROR: Unknown -key value\");\n          console.error(\"\");\n          console.log(manJsCryptoHmac);\n          process.exit(1);\n        }\n        options.key = o2;\n        i += 1;\n      }\n      else if(o1 === \"-out\"){\n        if(![\"hex\", \"base64\", \"utf8\"].includes(o2)){\n          console.error(\"ERROR: Unknown -out value\");\n          console.error(\"\");\n          console.log(manJsCryptoHmac);\n          process.exit(1);\n        }\n        options.out = o2;\n        i += 1;\n      }\n      else{\n        console.error(\"ERROR: Unknown option\");\n        console.error(\"\");\n        console.log(manJsCryptoHmac);\n        process.exit(1);\n      }\n    }\n  }\n  \n  let Hasher;\n  switch (command.replace(/-/g, \"\").toLowerCase()){\n    case \"hmacmd5\": Hasher = require(resolve(\"HmacMD5\")).HmacMD5; break;\n    case \"hmacsha1\": Hasher = require(resolve(\"HmacSHA1\")).HmacSHA1; break;\n    case \"hmacsha224\": Hasher = require(resolve(\"HmacSHA224\")).HmacSHA224; break;\n    case \"hmacsha256\": Hasher = require(resolve(\"HmacSHA256\")).HmacSHA256; break;\n    case \"hmacsha384\": Hasher = require(resolve(\"HmacSHA384\")).HmacSHA384; break;\n    case \"hmacsha512\": Hasher = require(resolve(\"HmacSHA512\")).HmacSHA512; break;\n    default:\n      console.error(\"ERROR: Unknown hmac hasher\");\n      console.error(\"\");\n      console.log(manJsCryptoHmac);\n      process.exit(1);\n  }\n  \n  let message;\n  if(options.msg.toLowerCase() === \"utf8\"){\n    message = messageArg;\n  }\n  else if(options.msg.toLowerCase() === \"hex\"){\n    if(!/^[0-9a-fA-F]+$/.test(messageArg)){\n      console.error(\"ERROR: Invalid Hex input\");\n      process.exit(1);\n    }\n    else if(messageArg.length % 2 !== 0){\n      console.error(\"ERROR: Hex character count must be even\");\n      process.exit(1);\n    }\n    \n    const {Hex} = require(resolve(\"Hex\"));\n    message = Hex.parse(messageArg);\n  }\n  else if(options.msg.toLowerCase() === \"base64\"){\n    const {Base64} = require(resolve(\"Base64\"));\n    message = Base64.parse(messageArg);\n  }\n  else{\n    console.error(\"ERROR: unknown -msg value\");\n    process.exit(1);\n  }\n  \n  let key;\n  if(options.key.toLowerCase() === \"utf8\"){\n    key = keyArg;\n  }\n  else if(options.key.toLowerCase() === \"hex\"){\n    if(!/^[0-9a-zA-Z]+$/.test(keyArg)){\n      console.error(\"ERROR: Invalid Hex input\");\n      process.exit(1);\n    }\n    else if(keyArg.length % 2 !== 0){\n      console.error(\"ERROR: Hex character count must be even\");\n      process.exit(1);\n    }\n    \n    const {Hex} = require(resolve(\"Hex\"));\n    key = Hex.parse(keyArg);\n  }\n  else if(options.key.toLowerCase() === \"base64\"){\n    const {Base64} = require(resolve(\"Base64\"));\n    key = Base64.parse(keyArg);\n  }\n  else{\n    console.error(\"ERROR: unknown -key value\");\n    process.exit(1);\n  }\n  \n  let outputEncoding;\n  if(options.out.toLowerCase() === \"hex\"){\n    outputEncoding = require(resolve(\"Hex\")).Hex;\n  }\n  else if(options.out.toLowerCase() === \"base64\"){\n    outputEncoding = require(resolve(\"Base64\")).Base64;\n  }\n  else{\n    console.error(\"ERROR: unknown -out value\");\n    process.exit(1);\n  }\n  \n  const result = Hasher(message, key);\n  let output;\n  try{\n    output = result.toString(outputEncoding);\n  }\n  catch(e){\n    if(options.out === \"utf8\"){\n      console.error(\"ERROR: Byte array could not be recognized as UTF-8\");\n    }\n    else{\n      console.error(\"ERROR: Failed to hash message\");\n    }\n    process.exit(1);\n  }\n  \n  console.log(output);\n  process.exit(0);\n}\n\nfunction doCipher(){\n  const encTypeArg = args[1];\n  const messageArg = args[2] || \"\";\n  const keyArg = args[3] || \"\";\n  const optionArgs = args.slice(4);\n  const options = {\n    msg: \"utf8\",\n    key: \"utf8\",\n    out: \"\", // default value will be set later\n    mode: \"cbc\",\n    pad: \"pkcs7\",\n    kdf: \"pbkdf2\",\n    iter: 10000,\n    hasher: \"sha256\"\n  };\n  \n  if(optionArgs){\n    for(let i=0;i<optionArgs.length;i++){\n      const o1 = optionArgs[i];\n      const o2 = optionArgs[i+1];\n      if(o1 === \"-msg\"){\n        if(![\"hex\", \"base64\", \"utf8\"].includes(o2)){\n          console.error(\"ERROR: Unknown -msg value\");\n          console.error(\"\");\n          console.log(manJsCryptoCipher);\n          process.exit(1);\n        }\n        options.msg = o2;\n        i += 1;\n      }\n      else if(o1 === \"-key\"){\n        if(![\"hex\", \"base64\", \"utf8\"].includes(o2)){\n          console.error(\"ERROR: Unknown -key value\");\n          console.error(\"\");\n          console.log(manJsCryptoCipher);\n          process.exit(1);\n        }\n        options.key = o2;\n        i += 1;\n      }\n      else if(o1 === \"-out\"){\n        if(![\"hex\", \"base64\", \"utf8\"].includes(o2)){\n          console.error(\"ERROR: Unknown -out value\");\n          console.error(\"\");\n          console.log(manJsCryptoCipher);\n          process.exit(1);\n        }\n        options.out = o2;\n        i += 1;\n      }\n      else if(o1 === \"-mode\"){\n        if(![\"cbc\", \"ecb\", \"cfb\", \"ofb\", \"ctr\"].includes(o2)){\n          console.error(\"ERROR: Unknown -mode value\");\n          console.error(\"\");\n          console.log(manJsCryptoCipher);\n          process.exit(1);\n        }\n        options.mode = o2;\n        i += 1;\n      }\n      else if(o1 === \"-pad\"){\n        if(![\"ansix923\", \"iso10126\", \"iso97971\", \"nopadding\", \"pkcs7\"].includes(o2)){\n          console.error(\"ERROR: Unknown -pad value\");\n          console.error(\"\");\n          console.log(manJsCryptoCipher);\n          process.exit(1);\n        }\n        options.pad = o2;\n        i += 1;\n      }\n      else if(o1 === \"-kdf\"){\n        if(![\"pbkdf2\", \"evpkdf\"].includes(o2)){\n          console.error(\"ERROR: Unknown -kdf value\");\n          console.error(\"\");\n          console.log(manJsCryptoCipher);\n          process.exit(1);\n        }\n        options.kdf = o2;\n        i += 1;\n      }\n      else if(o1 === \"-kdfIter\"){\n        if(isNaN(+o2) || !isFinite(+o2)){\n          console.error(\"ERROR: -iter value must be number\");\n          console.error(\"\");\n          console.log(manJsCryptoCipher);\n          process.exit(1);\n        }\n        options.iter = +o2;\n        i += 1;\n      }\n      else if(o1 === \"-kdfHasher\"){\n        if(!hashCommands.includes(o2.toLowerCase())){\n          console.error(\"ERROR: Unknown -kdf value\");\n          console.error(\"\");\n          console.log(manJsCryptoCipher);\n          process.exit(1);\n        }\n        options.hasher = o2.toLowerCase();\n        i += 1;\n      }\n      else{\n        console.error(\"ERROR: Unknown option\");\n        console.error(\"\");\n        console.log(manJsCryptoCipher);\n        process.exit(1);\n      }\n    }\n  }\n  \n  let Cipher;\n  switch (command.toLowerCase()){\n    case \"aes\": Cipher = require(resolve(\"AES\")).AES; break;\n    case \"des\": Cipher = require(resolve(\"DES\")).DES; break;\n    case \"des3\": Cipher = require(resolve(\"DES3\")).DES3; break;\n    case \"rabbit\": Cipher = require(resolve(\"Rabbit \")).Rabbit; break;\n    case \"rc4\": Cipher = require(resolve(\"RC4\")).RC4; break;\n    default:\n      console.error(\"ERROR: Unknown cipher\");\n      console.error(\"\");\n      console.log(manJsCryptoCipher);\n      process.exit(1);\n  }\n  \n  let encType;\n  if([\"enc\", \"dec\"].includes(encTypeArg)){\n    encType = encTypeArg;\n  }\n  else{\n    console.error(\"ERROR: Must specify enc/dec\");\n    console.error(\"\");\n    console.log(manJsCryptoCipher);\n    process.exit(1);\n  }\n  \n  let message;\n  if(encType === \"enc\"){\n    if(options.msg.toLowerCase() === \"utf8\"){\n      message = messageArg;\n    }\n    else if(options.msg.toLowerCase() === \"hex\"){\n      if(!/^[0-9a-fA-F]+$/.test(messageArg)){\n        console.error(\"ERROR: Invalid Hex input\");\n        process.exit(1);\n      }\n      else if(messageArg.length % 2 !== 0){\n        console.error(\"ERROR: Hex character count must be even\");\n        process.exit(1);\n      }\n    \n      const {Hex} = require(resolve(\"Hex\"));\n      message = Hex.parse(messageArg);\n    }\n    else if(options.msg.toLowerCase() === \"base64\"){\n      const {Base64} = require(resolve(\"Base64\"));\n      message = Base64.parse(messageArg);\n    }\n    else{\n      console.error(\"ERROR: unknown -msg value\");\n      process.exit(1);\n    }\n  }\n  else{ // encType === \"dec\"\n    message = messageArg;\n  }\n  \n  let key;\n  if(options.key.toLowerCase() === \"utf8\"){\n    key = keyArg;\n  }\n  else if(options.key.toLowerCase() === \"hex\"){\n    if(!/^[0-9a-zA-Z]+$/.test(keyArg)){\n      console.error(\"ERROR: Invalid Hex input\");\n      process.exit(1);\n    }\n    else if(keyArg.length % 2 !== 0){\n      console.error(\"ERROR: Hex character count must be even\");\n      process.exit(1);\n    }\n    \n    const {Hex} = require(resolve(\"Hex\"));\n    key = Hex.parse(keyArg);\n    \n    if(command === \"aes\" && key.nSigBytes % 4 !== 0){\n      console.error(\"ERROR: Key size for AES must be multiple of 32bit/4byte/1word\");\n      process.exit(1);\n    }\n    else if(command === \"des3\" && ![8,16].includes(key.nSigBytes) && key.nSigBytes < 24){\n      console.error(\"ERROR: 3DES requires the key length to be 64, 128, 192 or >192 bits.\");\n      process.exit(1);\n    }\n  }\n  else if(options.key.toLowerCase() === \"base64\"){\n    const {Base64} = require(resolve(\"Base64\"));\n    key = Base64.parse(keyArg);\n  \n    if(command === \"aes\" && key.nSigBytes % 4 !== 0){\n      console.error(\"ERROR: Key size for AES must be multiple of 32bit/4byte/1word\");\n      process.exit(1);\n    }\n    else if(command === \"des3\" && ![8,16].includes(key.nSigBytes) && key.nSigBytes < 24){\n      console.error(\"ERROR: 3DES requires the key length to be 64, 128, 192 or >192 bits.\");\n      process.exit(1);\n    }\n  }\n  else{\n    console.error(\"ERROR: unknown -key value\");\n    process.exit(1);\n  }\n  \n  // Decide -out default value\n  if(!options.out){\n    if(encType === \"enc\"){\n      options.out = \"base64\";\n    }\n    else{\n      options.out = \"hex\";\n    }\n  }\n  else if(encType === \"enc\" && options.out.toLowerCase() === \"utf8\"){\n    console.error(\"ERROR: '-out utf8' cannot be used on encryption\");\n    process.exit(1);\n  }\n  \n  let outputEncoding;\n  if(options.out.toLowerCase() === \"hex\"){\n    outputEncoding = require(resolve(\"Hex\")).Hex;\n  }\n  else if(options.out.toLowerCase() === \"base64\"){\n    outputEncoding = require(resolve(\"Base64\")).Base64;\n  }\n  else if(options.out.toLowerCase() === \"utf8\"){\n    outputEncoding = require(resolve(\"Utf8\")).Utf8;\n  }\n  else{\n    console.error(\"ERROR: unknown -out value\");\n    process.exit(1);\n  }\n  \n  let mode;\n  if(options.mode.toLowerCase() === \"cbc\"){\n    mode = require(resolve(\"mode/CBC\")).CBC;\n  }\n  else if(options.mode.toLowerCase() === \"ecb\"){\n    mode = require(resolve(\"mode/ECB\")).ECB;\n  }\n  else if(options.mode.toLowerCase() === \"ofb\"){\n    mode = require(resolve(\"mode/OFB\")).OFB;\n  }\n  else if(options.mode.toLowerCase() === \"cfb\"){\n    mode = require(resolve(\"mode/CFB\")).CFB;\n  }\n  else if(options.mode.toLowerCase() === \"ctr\"){\n    mode = require(resolve(\"mode/CTR\")).CTR;\n  }\n  else{\n    console.error(\"ERROR: unknown -mode value\");\n    process.exit(1);\n  }\n  \n  let padding;\n  if(options.pad.toLowerCase() === \"ansix923\"){\n    padding = require(resolve(\"pad/AnsiX923\")).AnsiX923;\n  }\n  else if(options.pad.toLowerCase() === \"iso10126\"){\n    padding = require(resolve(\"pad/ISO10126\")).ISO10126;\n  }\n  else if(options.pad.toLowerCase() === \"iso97971\"){\n    padding = require(resolve(\"pad/ISO97971\")).ISO97971;\n  }\n  else if(options.pad.toLowerCase() === \"nopadding\"){\n    padding = require(resolve(\"pad/NoPadding\")).NoPadding;\n  }\n  else if(options.pad.toLowerCase() === \"pkcs7\"){\n    padding = require(resolve(\"pad/Pkcs7\")).Pkcs7;\n  }\n  else if(options.pad.toLowerCase() === \"zero\"){\n    padding = require(resolve(\"pad/Zero\")).Zero;\n  }\n  else{\n    console.error(\"ERROR: unknown -pad value\");\n    process.exit(1);\n  }\n  \n  let kdfModule;\n  if(options.kdf.toLowerCase() === \"pbkdf2\"){\n    kdfModule = require(resolve(\"PBKDF2\")).PBKDF2;\n  }\n  else if(options.kdf.toLowerCase() === \"evpkdf\"){\n    kdfModule = require(resolve(\"EvpKDF\")).EvpKDF;\n  }\n  else{\n    console.error(\"ERROR: unknown -kdf value\");\n    process.exit(1);\n  }\n  \n  let kdfIterations = options.iter;\n  \n  let kdfHasher;\n  switch (options.hasher.toLowerCase()){\n    case \"md5\": kdfHasher = require(resolve(\"MD5\")).MD5; break;\n    case \"sha1\": kdfHasher = require(resolve(\"SHA1\")).SHA1; break;\n    case \"sha3\": kdfHasher = require(resolve(\"SHA3\")).SHA3; break;\n    case \"sha224\": kdfHasher = require(resolve(\"SHA224\")).SHA224; break;\n    case \"sha256\": kdfHasher = require(resolve(\"SHA256\")).SHA256; break;\n    case \"sha384\": kdfHasher = require(resolve(\"SHA384\")).SHA384; break;\n    case \"sha512\": kdfHasher = require(resolve(\"SHA512\")).SHA512; break;\n    case \"ripemd160\": kdfHasher = require(resolve(\"RIPEMD160\")).RIPEMD160; break;\n    default:\n      console.error(\"ERROR: Unknown hash\");\n      process.exit(1);\n  }\n  \n  let result;\n  \n  if(encType === \"enc\"){\n    result = Cipher.encrypt(message, key, {mode, padding, kdfModule, kdfIterations, kdfHasher});\n  }\n  else{\n    result = Cipher.decrypt(message, key, {mode, padding, kdfModule, kdfIterations, kdfHasher});\n  }\n  \n  let output;\n  try{\n    if(encType === \"enc\"){\n      if(options.out.toLowerCase() === \"base64\"){\n        output = result.toString();\n      }\n      else{\n        const {Base64} = require(resolve(\"Base64\"));\n        const word = Base64.parse(result.toString());\n        output = word.toString(require(resolve(\"Hex\")).Hex);\n      }\n    }\n    else{\n      output = result.toString(outputEncoding);\n    }\n  }\n  catch(e){\n    if(options.out === \"utf8\"){\n      console.error(\"ERROR: Byte array could not be recognized as UTF-8\");\n    }\n    else{\n      console.error(\"ERROR: Failed to decrypt message\");\n    }\n    process.exit(1);\n  }\n  \n  console.log(output);\n  process.exit(0);\n}"]}
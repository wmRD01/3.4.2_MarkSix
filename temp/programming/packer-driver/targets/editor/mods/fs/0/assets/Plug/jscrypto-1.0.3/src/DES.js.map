{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Plug/jscrypto-1.0.3/src/DES.ts"],"names":["DES","BlockCipher","Cipher","PasswordBasedCipher","SerializableCipher","PC1","PC2","BIT_SHIFTS","SBOX_P","SBOX_MASK","constructor","props","_props","_doReset","key","_key","keyWords","words","keyBits","i","keyBitPos","subKeys","_subKeys","nSubKey","subKey","bitShift","_invSubKeys","encryptBlock","offset","_doCryptoBlock","decryptBlock","_lBlock","_rBlock","_exchangeLR","_exchangeRL","round","lBlock","rBlock","f","s","t","mask","createEncryptor","transformMode","ENC_TRANSFORM_MODE","createDecryptor","DEC_TRANSFORM_MODE","encrypt","message","decrypt","cipherText"],"mappings":"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","sourcesContent":["// Permuted Choice 1 constants\nimport {BlockCipher, BlockCipherProps} from \"./lib/algorithm/cipher/BlockCipher\";\nimport {Cipher, CipherProps, PropsWithKey} from \"./lib/algorithm/cipher/Cipher\";\nimport {Word32Array} from \"./lib/Word32Array\";\nimport {PasswordBasedCipher} from \"./lib/algorithm/cipher/PasswordBasedCipher\";\nimport {SerializableCipher} from \"./lib/algorithm/cipher/SerializableCipher\";\nimport {CipherParams} from \"./lib/algorithm/cipher/CipherParams\";\n\nconst PC1 = [\n  57, 49, 41, 33, 25, 17, 9,  1,\n  58, 50, 42, 34, 26, 18, 10, 2,\n  59, 51, 43, 35, 27, 19, 11, 3,\n  60, 52, 44, 36, 63, 55, 47, 39,\n  31, 23, 15, 7,  62, 54, 46, 38,\n  30, 22, 14, 6,  61, 53, 45, 37,\n  29, 21, 13, 5,  28, 20, 12, 4\n];\n\n// Permuted Choice 2 constants\nconst PC2 = [\n  14, 17, 11, 24, 1,  5,\n  3,  28, 15, 6,  21, 10,\n  23, 19, 12, 4,  26, 8,\n  16, 7,  27, 20, 13, 2,\n  41, 52, 31, 37, 47, 55,\n  30, 40, 51, 45, 33, 48,\n  44, 49, 39, 56, 34, 53,\n  46, 42, 50, 36, 29, 32\n];\n\n// Cumulative bit shift constants\nconst BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n// SBOXes and round permutation constants\nconst SBOX_P: Array<{[key: number]: number}> = [\n  {\n    0x0: 0x808200,\n    0x10000000: 0x8000,\n    0x20000000: 0x808002,\n    0x30000000: 0x2,\n    0x40000000: 0x200,\n    0x50000000: 0x808202,\n    0x60000000: 0x800202,\n    0x70000000: 0x800000,\n    0x80000000: 0x202,\n    0x90000000: 0x800200,\n    0xa0000000: 0x8200,\n    0xb0000000: 0x808000,\n    0xc0000000: 0x8002,\n    0xd0000000: 0x800002,\n    0xe0000000: 0x0,\n    0xf0000000: 0x8202,\n    0x8000000: 0x0,\n    0x18000000: 0x808202,\n    0x28000000: 0x8202,\n    0x38000000: 0x8000,\n    0x48000000: 0x808200,\n    0x58000000: 0x200,\n    0x68000000: 0x808002,\n    0x78000000: 0x2,\n    0x88000000: 0x800200,\n    0x98000000: 0x8200,\n    0xa8000000: 0x808000,\n    0xb8000000: 0x800202,\n    0xc8000000: 0x800002,\n    0xd8000000: 0x8002,\n    0xe8000000: 0x202,\n    0xf8000000: 0x800000,\n    0x1: 0x8000,\n    0x10000001: 0x2,\n    0x20000001: 0x808200,\n    0x30000001: 0x800000,\n    0x40000001: 0x808002,\n    0x50000001: 0x8200,\n    0x60000001: 0x200,\n    0x70000001: 0x800202,\n    0x80000001: 0x808202,\n    0x90000001: 0x808000,\n    0xa0000001: 0x800002,\n    0xb0000001: 0x8202,\n    0xc0000001: 0x202,\n    0xd0000001: 0x800200,\n    0xe0000001: 0x8002,\n    0xf0000001: 0x0,\n    0x8000001: 0x808202,\n    0x18000001: 0x808000,\n    0x28000001: 0x800000,\n    0x38000001: 0x200,\n    0x48000001: 0x8000,\n    0x58000001: 0x800002,\n    0x68000001: 0x2,\n    0x78000001: 0x8202,\n    0x88000001: 0x8002,\n    0x98000001: 0x800202,\n    0xa8000001: 0x202,\n    0xb8000001: 0x808200,\n    0xc8000001: 0x800200,\n    0xd8000001: 0x0,\n    0xe8000001: 0x8200,\n    0xf8000001: 0x808002\n  },\n  {\n    0x0: 0x40084010,\n    0x1000000: 0x4000,\n    0x2000000: 0x80000,\n    0x3000000: 0x40080010,\n    0x4000000: 0x40000010,\n    0x5000000: 0x40084000,\n    0x6000000: 0x40004000,\n    0x7000000: 0x10,\n    0x8000000: 0x84000,\n    0x9000000: 0x40004010,\n    0xa000000: 0x40000000,\n    0xb000000: 0x84010,\n    0xc000000: 0x80010,\n    0xd000000: 0x0,\n    0xe000000: 0x4010,\n    0xf000000: 0x40080000,\n    0x800000: 0x40004000,\n    0x1800000: 0x84010,\n    0x2800000: 0x10,\n    0x3800000: 0x40004010,\n    0x4800000: 0x40084010,\n    0x5800000: 0x40000000,\n    0x6800000: 0x80000,\n    0x7800000: 0x40080010,\n    0x8800000: 0x80010,\n    0x9800000: 0x0,\n    0xa800000: 0x4000,\n    0xb800000: 0x40080000,\n    0xc800000: 0x40000010,\n    0xd800000: 0x84000,\n    0xe800000: 0x40084000,\n    0xf800000: 0x4010,\n    0x10000000: 0x0,\n    0x11000000: 0x40080010,\n    0x12000000: 0x40004010,\n    0x13000000: 0x40084000,\n    0x14000000: 0x40080000,\n    0x15000000: 0x10,\n    0x16000000: 0x84010,\n    0x17000000: 0x4000,\n    0x18000000: 0x4010,\n    0x19000000: 0x80000,\n    0x1a000000: 0x80010,\n    0x1b000000: 0x40000010,\n    0x1c000000: 0x84000,\n    0x1d000000: 0x40004000,\n    0x1e000000: 0x40000000,\n    0x1f000000: 0x40084010,\n    0x10800000: 0x84010,\n    0x11800000: 0x80000,\n    0x12800000: 0x40080000,\n    0x13800000: 0x4000,\n    0x14800000: 0x40004000,\n    0x15800000: 0x40084010,\n    0x16800000: 0x10,\n    0x17800000: 0x40000000,\n    0x18800000: 0x40084000,\n    0x19800000: 0x40000010,\n    0x1a800000: 0x40004010,\n    0x1b800000: 0x80010,\n    0x1c800000: 0x0,\n    0x1d800000: 0x4010,\n    0x1e800000: 0x40080010,\n    0x1f800000: 0x84000\n  },\n  {\n    0x0: 0x104,\n    0x100000: 0x0,\n    0x200000: 0x4000100,\n    0x300000: 0x10104,\n    0x400000: 0x10004,\n    0x500000: 0x4000004,\n    0x600000: 0x4010104,\n    0x700000: 0x4010000,\n    0x800000: 0x4000000,\n    0x900000: 0x4010100,\n    0xa00000: 0x10100,\n    0xb00000: 0x4010004,\n    0xc00000: 0x4000104,\n    0xd00000: 0x10000,\n    0xe00000: 0x4,\n    0xf00000: 0x100,\n    0x80000: 0x4010100,\n    0x180000: 0x4010004,\n    0x280000: 0x0,\n    0x380000: 0x4000100,\n    0x480000: 0x4000004,\n    0x580000: 0x10000,\n    0x680000: 0x10004,\n    0x780000: 0x104,\n    0x880000: 0x4,\n    0x980000: 0x100,\n    0xa80000: 0x4010000,\n    0xb80000: 0x10104,\n    0xc80000: 0x10100,\n    0xd80000: 0x4000104,\n    0xe80000: 0x4010104,\n    0xf80000: 0x4000000,\n    0x1000000: 0x4010100,\n    0x1100000: 0x10004,\n    0x1200000: 0x10000,\n    0x1300000: 0x4000100,\n    0x1400000: 0x100,\n    0x1500000: 0x4010104,\n    0x1600000: 0x4000004,\n    0x1700000: 0x0,\n    0x1800000: 0x4000104,\n    0x1900000: 0x4000000,\n    0x1a00000: 0x4,\n    0x1b00000: 0x10100,\n    0x1c00000: 0x4010000,\n    0x1d00000: 0x104,\n    0x1e00000: 0x10104,\n    0x1f00000: 0x4010004,\n    0x1080000: 0x4000000,\n    0x1180000: 0x104,\n    0x1280000: 0x4010100,\n    0x1380000: 0x0,\n    0x1480000: 0x10004,\n    0x1580000: 0x4000100,\n    0x1680000: 0x100,\n    0x1780000: 0x4010004,\n    0x1880000: 0x10000,\n    0x1980000: 0x4010104,\n    0x1a80000: 0x10104,\n    0x1b80000: 0x4000004,\n    0x1c80000: 0x4000104,\n    0x1d80000: 0x4010000,\n    0x1e80000: 0x4,\n    0x1f80000: 0x10100\n  },\n  {\n    0x0: 0x80401000,\n    0x10000: 0x80001040,\n    0x20000: 0x401040,\n    0x30000: 0x80400000,\n    0x40000: 0x0,\n    0x50000: 0x401000,\n    0x60000: 0x80000040,\n    0x70000: 0x400040,\n    0x80000: 0x80000000,\n    0x90000: 0x400000,\n    0xa0000: 0x40,\n    0xb0000: 0x80001000,\n    0xc0000: 0x80400040,\n    0xd0000: 0x1040,\n    0xe0000: 0x1000,\n    0xf0000: 0x80401040,\n    0x8000: 0x80001040,\n    0x18000: 0x40,\n    0x28000: 0x80400040,\n    0x38000: 0x80001000,\n    0x48000: 0x401000,\n    0x58000: 0x80401040,\n    0x68000: 0x0,\n    0x78000: 0x80400000,\n    0x88000: 0x1000,\n    0x98000: 0x80401000,\n    0xa8000: 0x400000,\n    0xb8000: 0x1040,\n    0xc8000: 0x80000000,\n    0xd8000: 0x400040,\n    0xe8000: 0x401040,\n    0xf8000: 0x80000040,\n    0x100000: 0x400040,\n    0x110000: 0x401000,\n    0x120000: 0x80000040,\n    0x130000: 0x0,\n    0x140000: 0x1040,\n    0x150000: 0x80400040,\n    0x160000: 0x80401000,\n    0x170000: 0x80001040,\n    0x180000: 0x80401040,\n    0x190000: 0x80000000,\n    0x1a0000: 0x80400000,\n    0x1b0000: 0x401040,\n    0x1c0000: 0x80001000,\n    0x1d0000: 0x400000,\n    0x1e0000: 0x40,\n    0x1f0000: 0x1000,\n    0x108000: 0x80400000,\n    0x118000: 0x80401040,\n    0x128000: 0x0,\n    0x138000: 0x401000,\n    0x148000: 0x400040,\n    0x158000: 0x80000000,\n    0x168000: 0x80001040,\n    0x178000: 0x40,\n    0x188000: 0x80000040,\n    0x198000: 0x1000,\n    0x1a8000: 0x80001000,\n    0x1b8000: 0x80400040,\n    0x1c8000: 0x1040,\n    0x1d8000: 0x80401000,\n    0x1e8000: 0x400000,\n    0x1f8000: 0x401040\n  },\n  {\n    0x0: 0x80,\n    0x1000: 0x1040000,\n    0x2000: 0x40000,\n    0x3000: 0x20000000,\n    0x4000: 0x20040080,\n    0x5000: 0x1000080,\n    0x6000: 0x21000080,\n    0x7000: 0x40080,\n    0x8000: 0x1000000,\n    0x9000: 0x20040000,\n    0xa000: 0x20000080,\n    0xb000: 0x21040080,\n    0xc000: 0x21040000,\n    0xd000: 0x0,\n    0xe000: 0x1040080,\n    0xf000: 0x21000000,\n    0x800: 0x1040080,\n    0x1800: 0x21000080,\n    0x2800: 0x80,\n    0x3800: 0x1040000,\n    0x4800: 0x40000,\n    0x5800: 0x20040080,\n    0x6800: 0x21040000,\n    0x7800: 0x20000000,\n    0x8800: 0x20040000,\n    0x9800: 0x0,\n    0xa800: 0x21040080,\n    0xb800: 0x1000080,\n    0xc800: 0x20000080,\n    0xd800: 0x21000000,\n    0xe800: 0x1000000,\n    0xf800: 0x40080,\n    0x10000: 0x40000,\n    0x11000: 0x80,\n    0x12000: 0x20000000,\n    0x13000: 0x21000080,\n    0x14000: 0x1000080,\n    0x15000: 0x21040000,\n    0x16000: 0x20040080,\n    0x17000: 0x1000000,\n    0x18000: 0x21040080,\n    0x19000: 0x21000000,\n    0x1a000: 0x1040000,\n    0x1b000: 0x20040000,\n    0x1c000: 0x40080,\n    0x1d000: 0x20000080,\n    0x1e000: 0x0,\n    0x1f000: 0x1040080,\n    0x10800: 0x21000080,\n    0x11800: 0x1000000,\n    0x12800: 0x1040000,\n    0x13800: 0x20040080,\n    0x14800: 0x20000000,\n    0x15800: 0x1040080,\n    0x16800: 0x80,\n    0x17800: 0x21040000,\n    0x18800: 0x40080,\n    0x19800: 0x21040080,\n    0x1a800: 0x0,\n    0x1b800: 0x21000000,\n    0x1c800: 0x1000080,\n    0x1d800: 0x40000,\n    0x1e800: 0x20040000,\n    0x1f800: 0x20000080\n  },\n  {\n    0x0: 0x10000008,\n    0x100: 0x2000,\n    0x200: 0x10200000,\n    0x300: 0x10202008,\n    0x400: 0x10002000,\n    0x500: 0x200000,\n    0x600: 0x200008,\n    0x700: 0x10000000,\n    0x800: 0x0,\n    0x900: 0x10002008,\n    0xa00: 0x202000,\n    0xb00: 0x8,\n    0xc00: 0x10200008,\n    0xd00: 0x202008,\n    0xe00: 0x2008,\n    0xf00: 0x10202000,\n    0x80: 0x10200000,\n    0x180: 0x10202008,\n    0x280: 0x8,\n    0x380: 0x200000,\n    0x480: 0x202008,\n    0x580: 0x10000008,\n    0x680: 0x10002000,\n    0x780: 0x2008,\n    0x880: 0x200008,\n    0x980: 0x2000,\n    0xa80: 0x10002008,\n    0xb80: 0x10200008,\n    0xc80: 0x0,\n    0xd80: 0x10202000,\n    0xe80: 0x202000,\n    0xf80: 0x10000000,\n    0x1000: 0x10002000,\n    0x1100: 0x10200008,\n    0x1200: 0x10202008,\n    0x1300: 0x2008,\n    0x1400: 0x200000,\n    0x1500: 0x10000000,\n    0x1600: 0x10000008,\n    0x1700: 0x202000,\n    0x1800: 0x202008,\n    0x1900: 0x0,\n    0x1a00: 0x8,\n    0x1b00: 0x10200000,\n    0x1c00: 0x2000,\n    0x1d00: 0x10002008,\n    0x1e00: 0x10202000,\n    0x1f00: 0x200008,\n    0x1080: 0x8,\n    0x1180: 0x202000,\n    0x1280: 0x200000,\n    0x1380: 0x10000008,\n    0x1480: 0x10002000,\n    0x1580: 0x2008,\n    0x1680: 0x10202008,\n    0x1780: 0x10200000,\n    0x1880: 0x10202000,\n    0x1980: 0x10200008,\n    0x1a80: 0x2000,\n    0x1b80: 0x202008,\n    0x1c80: 0x200008,\n    0x1d80: 0x0,\n    0x1e80: 0x10000000,\n    0x1f80: 0x10002008\n  },\n  {\n    0x0: 0x100000,\n    0x10: 0x2000401,\n    0x20: 0x400,\n    0x30: 0x100401,\n    0x40: 0x2100401,\n    0x50: 0x0,\n    0x60: 0x1,\n    0x70: 0x2100001,\n    0x80: 0x2000400,\n    0x90: 0x100001,\n    0xa0: 0x2000001,\n    0xb0: 0x2100400,\n    0xc0: 0x2100000,\n    0xd0: 0x401,\n    0xe0: 0x100400,\n    0xf0: 0x2000000,\n    0x8: 0x2100001,\n    0x18: 0x0,\n    0x28: 0x2000401,\n    0x38: 0x2100400,\n    0x48: 0x100000,\n    0x58: 0x2000001,\n    0x68: 0x2000000,\n    0x78: 0x401,\n    0x88: 0x100401,\n    0x98: 0x2000400,\n    0xa8: 0x2100000,\n    0xb8: 0x100001,\n    0xc8: 0x400,\n    0xd8: 0x2100401,\n    0xe8: 0x1,\n    0xf8: 0x100400,\n    0x100: 0x2000000,\n    0x110: 0x100000,\n    0x120: 0x2000401,\n    0x130: 0x2100001,\n    0x140: 0x100001,\n    0x150: 0x2000400,\n    0x160: 0x2100400,\n    0x170: 0x100401,\n    0x180: 0x401,\n    0x190: 0x2100401,\n    0x1a0: 0x100400,\n    0x1b0: 0x1,\n    0x1c0: 0x0,\n    0x1d0: 0x2100000,\n    0x1e0: 0x2000001,\n    0x1f0: 0x400,\n    0x108: 0x100400,\n    0x118: 0x2000401,\n    0x128: 0x2100001,\n    0x138: 0x1,\n    0x148: 0x2000000,\n    0x158: 0x100000,\n    0x168: 0x401,\n    0x178: 0x2100400,\n    0x188: 0x2000001,\n    0x198: 0x2100000,\n    0x1a8: 0x0,\n    0x1b8: 0x2100401,\n    0x1c8: 0x100401,\n    0x1d8: 0x400,\n    0x1e8: 0x2000400,\n    0x1f8: 0x100001\n  },\n  {\n    0x0: 0x8000820,\n    0x1: 0x20000,\n    0x2: 0x8000000,\n    0x3: 0x20,\n    0x4: 0x20020,\n    0x5: 0x8020820,\n    0x6: 0x8020800,\n    0x7: 0x800,\n    0x8: 0x8020000,\n    0x9: 0x8000800,\n    0xa: 0x20800,\n    0xb: 0x8020020,\n    0xc: 0x820,\n    0xd: 0x0,\n    0xe: 0x8000020,\n    0xf: 0x20820,\n    0x80000000: 0x800,\n    0x80000001: 0x8020820,\n    0x80000002: 0x8000820,\n    0x80000003: 0x8000000,\n    0x80000004: 0x8020000,\n    0x80000005: 0x20800,\n    0x80000006: 0x20820,\n    0x80000007: 0x20,\n    0x80000008: 0x8000020,\n    0x80000009: 0x820,\n    0x8000000a: 0x20020,\n    0x8000000b: 0x8020800,\n    0x8000000c: 0x0,\n    0x8000000d: 0x8020020,\n    0x8000000e: 0x8000800,\n    0x8000000f: 0x20000,\n    0x10: 0x20820,\n    0x11: 0x8020800,\n    0x12: 0x20,\n    0x13: 0x800,\n    0x14: 0x8000800,\n    0x15: 0x8000020,\n    0x16: 0x8020020,\n    0x17: 0x20000,\n    0x18: 0x0,\n    0x19: 0x20020,\n    0x1a: 0x8020000,\n    0x1b: 0x8000820,\n    0x1c: 0x8020820,\n    0x1d: 0x20800,\n    0x1e: 0x820,\n    0x1f: 0x8000000,\n    0x80000010: 0x20000,\n    0x80000011: 0x800,\n    0x80000012: 0x8020020,\n    0x80000013: 0x20820,\n    0x80000014: 0x20,\n    0x80000015: 0x8020000,\n    0x80000016: 0x8000000,\n    0x80000017: 0x8000820,\n    0x80000018: 0x8020820,\n    0x80000019: 0x8000020,\n    0x8000001a: 0x8000800,\n    0x8000001b: 0x0,\n    0x8000001c: 0x20800,\n    0x8000001d: 0x820,\n    0x8000001e: 0x20020,\n    0x8000001f: 0x8020800\n  }\n];\n\n// Masks that select the SBOX input\nconst SBOX_MASK = [\n  0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n  0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n];\n\nexport interface DESProps extends BlockCipherProps {}\n\nexport class DES extends BlockCipher {\n  public static readonly keySize = 64/32;\n  public static readonly ivSize = 64/32;\n  protected _blockSize = 64/32;\n  \n  public _props: PropsWithKey<DESProps>;\n  protected _subKeys: number[][] = [];\n  protected _invSubKeys: number[][] = [];\n  protected _lBlock: number = 0;\n  protected _rBlock: number = 0;\n  \n  public constructor(props: PropsWithKey<DESProps>) {\n    super(props);\n    this._props = props;\n    \n    this._doReset();\n  }\n  \n  protected _doReset() {\n    // Shortcuts\n    const key = this._key;\n    const keyWords = key.words;\n  \n    // Select 56 bits according to PC1\n    const keyBits = [];\n    for(let i=0;i<56;i++){\n      const keyBitPos = PC1[i] - 1;\n      keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n    }\n  \n    // Assemble 16 subkeys\n    const subKeys: number[][] = this._subKeys = [];\n    for(let nSubKey=0;nSubKey<16;nSubKey++){\n      // Create subkey\n      const subKey: number[] = subKeys[nSubKey] = [];\n    \n      // Shortcut\n      const bitShift = BIT_SHIFTS[nSubKey];\n    \n      // Select 48 bits according to PC2\n      for (let i = 0; i < 24; i++) {\n        // Select from the left 28 key bits\n        subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n      \n        // Select from the right 28 key bits\n        subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n      }\n    \n      // Since each subkey is applied to an expanded 32-bit input,\n      // the subkey can be broken into 8 values scaled to 32-bits,\n      // which allows the key to be used without expansion\n      subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n      for(let i=1;i<7;i++){\n        subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n      }\n      subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n    }\n  \n    // Compute inverse subkeys\n    this._invSubKeys = [];\n    for (let i = 0; i < 16; i++) {\n      this._invSubKeys[i] = subKeys[15 - i];\n    }\n  }\n  \n  public encryptBlock(words: number[], offset: number){\n    this._doCryptoBlock(words, offset, this._subKeys);\n  }\n  \n  public decryptBlock(words: number[], offset: number) {\n    this._doCryptoBlock(words, offset, this._invSubKeys);\n  }\n  \n  protected _doCryptoBlock(words: number[], offset: number, subKeys: number[][]){\n    // Get input\n    this._lBlock = words[offset];\n    this._rBlock = words[offset + 1];\n  \n    // Initial permutation\n    this._exchangeLR(4,  0x0f0f0f0f);\n    this._exchangeLR(16, 0x0000ffff);\n    this._exchangeRL(2,  0x33333333);\n    this._exchangeRL(8,  0x00ff00ff);\n    this._exchangeLR(1,  0x55555555);\n  \n    // Rounds\n    for(let round=0;round<16;round++){\n      // Shortcuts\n      const subKey = subKeys[round];\n      const lBlock = this._lBlock;\n      const rBlock = this._rBlock;\n    \n      // Feistel function\n      let f = 0;\n      for(let i=0;i<8;i++) {\n        const s = ((rBlock ^ subKey[i]) & SBOX_MASK[i]);\n        f |= SBOX_P[i][s >>> 0];\n      }\n      this._lBlock = rBlock;\n      this._rBlock = lBlock ^ f;\n    }\n  \n    // Undo swap from last round\n    const t = this._lBlock;\n    this._lBlock = this._rBlock;\n    this._rBlock = t;\n  \n    // Final permutation\n    this._exchangeLR(1,  0x55555555);\n    this._exchangeRL(8,  0x00ff00ff);\n    this._exchangeRL(2,  0x33333333);\n    this._exchangeLR(16, 0x0000ffff);\n    this._exchangeLR(4,  0x0f0f0f0f);\n  \n    // Set output\n    words[offset] = this._lBlock;\n    words[offset + 1] = this._rBlock;\n  }\n  \n  protected _exchangeLR(offset: number, mask: number){\n    const t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n    this._rBlock ^= t;\n    this._lBlock ^= t << offset;\n  }\n  \n  protected _exchangeRL(offset: number, mask: number){\n    const t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n    this._lBlock ^= t;\n    this._rBlock ^= t << offset;\n  }\n  \n  /**\n   * Creates this cipher in encryption mode.\n   *\n   * @param {Word32Array} key The key.\n   * @param {Partial<CipherProps>?} props (Optional) The configuration options to use for this operation.\n   * @return {Cipher} A cipher instance.\n   * @example\n   *   var cipher = DES.createEncryptor(keyWordArray, { iv: ivWordArray });\n   */\n  public static createEncryptor(key: Word32Array, props?: Partial<CipherProps>){\n    props = typeof props === \"undefined\" ? {} : props;\n    return new DES({...props, key, transformMode: Cipher.ENC_TRANSFORM_MODE});\n  }\n  \n  /**\n   * Creates this cipher in decryption mode.\n   *\n   * @param {Word32Array} key The key.\n   * @param {Partial<CipherProps>?} props (Optional) The configuration options to use for this operation.\n   * @return {Cipher} A cipher instance.\n   * @example\n   *   var cipher = DES.createDecryptor(keyWordArray, { iv: ivWordArray });\n   */\n  public static createDecryptor(key: Word32Array, props?: Partial<CipherProps>){\n    props = typeof props === \"undefined\" ? {} : props;\n    return new DES({...props, key, transformMode: Cipher.DEC_TRANSFORM_MODE});\n  }\n  \n  /**\n   * Encrypt a message with key\n   *\n   * @param {Word32Array|string} message\n   * @param {Word32Array|string} key\n   * @param {Partial<AESProps>?} props\n   * @example\n   *   var encryptedMessage = DES.encrypt(\"test\", \"pass\");\n   */\n  public static encrypt(message: Word32Array|string, key: Word32Array|string, props?: Partial<DESProps>){\n    if(typeof key === \"string\"){\n      return PasswordBasedCipher.encrypt(DES, message, key, props);\n    }\n    return SerializableCipher.encrypt(DES, message, key, props);\n  }\n  \n  /**\n   * Encrypt a encrypted message with key\n   *\n   * @param {CipherParams} cipherText\n   * @param {Word32Array|string} key\n   * @param {Partial<AESProps>?} props\n   * @example\n   *   var encryptedMessage = DES.decrypt(cipherProps, \"pass\");\n   */\n  public static decrypt(cipherText: CipherParams, key: Word32Array|string, props?: Partial<DESProps>){\n    if(typeof key === \"string\"){\n      return PasswordBasedCipher.decrypt(DES, cipherText, key, props);\n    }\n    return SerializableCipher.decrypt(DES, cipherText, key, props);\n  }\n}\n"]}
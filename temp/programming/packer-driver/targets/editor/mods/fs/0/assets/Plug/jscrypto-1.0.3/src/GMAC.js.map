{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Plug/jscrypto-1.0.3/src/GMAC.ts"],"names":["GMAC","message","key","iv","tagLength","props","aad","parse","initializingVector","Cipher","wKey","t","mac","undefined","Utf8","Word32Array","AES","GCM"],"mappings":";;;;;AAUO,WAASA,IAAT,CACLC,OADK,EAELC,GAFK,EAGLC,EAHK,EAILC,SAJK,EAKLC,KALK,EAMN;AACC,UAAMC,GAAG,GAAG,OAAOL,OAAP,KAAmB,QAAnB,GAA8B;AAAA;AAAA,sBAAKM,KAAL,CAAWN,OAAX,CAA9B,GAAoDA,OAAhE;AACA,UAAMO,kBAAkB,GAAGL,EAAE,GAAGA,EAAH,GAAQ;AAAA;AAAA,oCAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAhB,CAArC;AACA,UAAMM,MAAM,GAAIJ,KAAK,IAAIA,KAAK,CAACI,MAAhB,GAA0BJ,KAAK,CAACI,MAAhC;AAAA;AAAA,kBAAf;AACA,UAAMC,IAAI,GAAG,OAAOR,GAAP,KAAe,QAAf,GAA0B;AAAA;AAAA,sBAAKK,KAAL,CAAWL,GAAX,CAA1B,GAA4CA,GAAzD;AACA,UAAMS,CAAC,GAAGP,SAAS,IAAI,EAAvB;AAEA,WAAO;AAAA;AAAA,oBAAIQ,GAAJ,CAAQH,MAAR,EAAgBC,IAAhB,EAAsBF,kBAAtB,EAA0CF,GAA1C,EAA+CO,SAA/C,EAA0DF,CAA1D,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;;kBAdeX,I;;;;;;;;AAVRc,MAAAA,I,iBAAAA,I;;AACAC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,G,iBAAAA,G;;AACAC,MAAAA,G,iBAAAA,G","sourcesContent":["import {Utf8} from \"./lib/encoder/Utf8\";\nimport {Word32Array} from \"./lib/Word32Array\";\nimport {AES} from \"./AES\";\nimport {GCM} from \"./mode/GCM\";\nimport {BlockCipher} from \"./lib/algorithm/cipher/BlockCipher\";\n\nexport type GMACProps = {\n  Cipher: typeof BlockCipher;\n};\n\nexport function GMAC(\n  message: Word32Array|string,\n  key: Word32Array|string,\n  iv?: Word32Array,\n  tagLength?: number,\n  props?: Partial<GMACProps>,\n){\n  const aad = typeof message === \"string\" ? Utf8.parse(message) : message;\n  const initializingVector = iv ? iv : new Word32Array([0, 0, 0, 0]);\n  const Cipher = (props && props.Cipher) ? props.Cipher : AES;\n  const wKey = typeof key === \"string\" ? Utf8.parse(key) : key;\n  const t = tagLength || 16;\n  \n  return GCM.mac(Cipher, wKey, initializingVector, aad, undefined, t);\n}"]}
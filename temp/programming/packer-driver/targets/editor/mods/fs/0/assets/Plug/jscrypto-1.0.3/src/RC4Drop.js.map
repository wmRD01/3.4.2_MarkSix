{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Plug/jscrypto-1.0.3/src/RC4Drop.ts"],"names":["RC4Drop","PasswordBasedCipher","SerializableCipher","RC4","constructor","props","_props","drop","_doReset","i","generateKeyStreamWord","createEncryptor","key","createDecryptor","encrypt","message","decrypt","cipherText"],"mappings":";;;4EAWaA,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AATLC,MAAAA,mB,iBAAAA,mB;;AACAC,MAAAA,kB,iBAAAA,kB;;AAEAC,MAAAA,G,iBAAAA,G;;;;;;;yBAMKH,O,GAAN,MAAMA,OAAN;AAAA;AAAA,sBAA0B;AAGxBI,QAAAA,WAAW,CAACC,KAAD,EAAoC;AACpD,gBAAMA,KAAN;;AADoD,wCAF7B,GAE6B;;AAEpD,eAAKC,MAAL,GAAcD,KAAd;;AAEA,cAAGA,KAAK,IAAI,OAAOA,KAAK,CAACE,IAAb,KAAsB,QAAlC,EAA2C;AACzC,iBAAKA,IAAL,GAAYF,KAAK,CAACE,IAAlB;AACD;;AAED,eAAKC,QAAL;AACD;;AAESA,QAAAA,QAAQ,GAAG;AACnB,gBAAMA,QAAN,GADmB,CAGnB;;;AACA,eAAI,IAAIC,CAAC,GAAC,KAAKF,IAAf,EAAoBE,CAAC,GAAC,CAAtB,EAAwBA,CAAC,EAAzB,EAA4B;AAC1B,iBAAKC,qBAAL;AACD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAC+B,eAAfC,eAAe,CAACC,GAAD,EAAmBP,KAAnB,EAAgD;AAC3EA,UAAAA,KAAK,GAAG,OAAOA,KAAP,KAAiB,WAAjB,GAA+B,EAA/B,GAAoCA,KAA5C;AACA,iBAAO,IAAIL,OAAJ,CAAY,EAAC,GAAGK,KAAJ;AAAWO,YAAAA;AAAX,WAAZ,CAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAC+B,eAAfC,eAAe,CAACD,GAAD,EAAmBP,KAAnB,EAAgD;AAC3EA,UAAAA,KAAK,GAAG,OAAOA,KAAP,KAAiB,WAAjB,GAA+B,EAA/B,GAAoCA,KAA5C;AACA,iBAAO,IAAIL,OAAJ,CAAY,EAAC,GAAGK,KAAJ;AAAWO,YAAAA;AAAX,WAAZ,CAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACuB,eAAPE,OAAO,CAACC,OAAD,EAA8BH,GAA9B,EAAuDP,KAAvD,EAAqF;AACxG,cAAG,OAAOO,GAAP,KAAe,QAAlB,EAA2B;AACzB,mBAAO;AAAA;AAAA,4DAAoBE,OAApB,CAA4Bd,OAA5B,EAAqCe,OAArC,EAA8CH,GAA9C,EAAmDP,KAAnD,CAAP;AACD;;AACD,iBAAO;AAAA;AAAA,wDAAmBS,OAAnB,CAA2Bd,OAA3B,EAAoCe,OAApC,EAA6CH,GAA7C,EAAkDP,KAAlD,CAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACuB,eAAPW,OAAO,CAACC,UAAD,EAA2BL,GAA3B,EAAoDP,KAApD,EAAkF;AACrG,cAAG,OAAOO,GAAP,KAAe,QAAlB,EAA2B;AACzB,mBAAO;AAAA;AAAA,4DAAoBI,OAApB,CAA4BhB,OAA5B,EAAqCiB,UAArC,EAAiDL,GAAjD,EAAsDP,KAAtD,CAAP;AACD;;AACD,iBAAO;AAAA;AAAA,wDAAmBW,OAAnB,CAA2BhB,OAA3B,EAAoCiB,UAApC,EAAgDL,GAAhD,EAAqDP,KAArD,CAAP;AACD;;AAjF8B,O","sourcesContent":["import {CipherProps, PropsWithKey} from \"./lib/algorithm/cipher/Cipher\";\nimport type {Word32Array} from \"./lib/Word32Array\";\nimport {PasswordBasedCipher} from \"./lib/algorithm/cipher/PasswordBasedCipher\";\nimport {SerializableCipher} from \"./lib/algorithm/cipher/SerializableCipher\";\nimport {CipherParams} from \"./lib/algorithm/cipher/CipherParams\";\nimport {RC4} from \"./RC4\";\n\nexport interface RC4DropProps extends CipherProps {\n  drop?: number;\n}\n\nexport class RC4Drop extends RC4 {\n  protected drop: number = 192;\n  \n  public constructor(props: PropsWithKey<RC4DropProps>) {\n    super(props);\n    this._props = props;\n    \n    if(props && typeof props.drop === \"number\"){\n      this.drop = props.drop;\n    }\n    \n    this._doReset();\n  }\n  \n  protected _doReset() {\n    super._doReset();\n    \n    // Drop\n    for(let i=this.drop;i>0;i--){\n      this.generateKeyStreamWord();\n    }\n  }\n  \n  /**\n   * Creates this cipher in encryption mode.\n   *\n   * @param {Word32Array} key The key.\n   * @param {Partial<CipherProps>?} props (Optional) The configuration options to use for this operation.\n   * @return {Cipher} A cipher instance.\n   * @example\n   *   var cipher = RC4Drop.createEncryptor(keyWordArray);\n   */\n  public static createEncryptor(key: Word32Array, props?: Partial<CipherProps>){\n    props = typeof props === \"undefined\" ? {} : props;\n    return new RC4Drop({...props, key});\n  }\n  \n  /**\n   * Creates this cipher in decryption mode.\n   *\n   * @param {Word32Array} key The key.\n   * @param {Partial<CipherProps>?} props (Optional) The configuration options to use for this operation.\n   * @return {Cipher} A cipher instance.\n   * @example\n   *   var cipher = RC4Drop.createDecryptor(keyWordArray, { iv: ivWordArray });\n   */\n  public static createDecryptor(key: Word32Array, props?: Partial<CipherProps>){\n    props = typeof props === \"undefined\" ? {} : props;\n    return new RC4Drop({...props, key});\n  }\n  \n  /**\n   * Encrypt a message with key\n   * \n   * @param {Word32Array|string} message\n   * @param {Word32Array|string} key\n   * @param {Partial<AESProps>?} props\n   * @example\n   *   var encryptedMessage = RC4Drop.encrypt(\"test\", \"pass\");\n   */\n  public static encrypt(message: Word32Array|string, key: Word32Array|string, props?: Partial<RC4DropProps>){\n    if(typeof key === \"string\"){\n      return PasswordBasedCipher.encrypt(RC4Drop, message, key, props);\n    }\n    return SerializableCipher.encrypt(RC4Drop, message, key, props);\n  }\n  \n  /**\n   * Encrypt a encrypted message with key\n   *\n   * @param {CipherParams} cipherText\n   * @param {Word32Array|string} key\n   * @param {Partial<AESProps>?} props\n   * @example\n   *   var encryptedMessage = RC4Drop.decrypt(cipherProps, \"pass\");\n   */\n  public static decrypt(cipherText: CipherParams, key: Word32Array|string, props?: Partial<RC4DropProps>){\n    if(typeof key === \"string\"){\n      return PasswordBasedCipher.decrypt(RC4Drop, cipherText, key, props);\n    }\n    return SerializableCipher.decrypt(RC4Drop, cipherText, key, props);\n  }\n}\n"]}
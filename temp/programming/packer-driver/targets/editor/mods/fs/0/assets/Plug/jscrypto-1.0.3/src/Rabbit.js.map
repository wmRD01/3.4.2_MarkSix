{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Plug/jscrypto-1.0.3/src/Rabbit.ts"],"names":["Rabbit","StreamCipher","PasswordBasedCipher","SerializableCipher","constructor","props","_props","_doReset","K","_key","words","iv","_iv","i","X","_X","C","_C","_b","nextState","IV","IV_0","IV_1","i0","i2","i1","i3","_doProcessBlock","offset","S","gx","ga","gb","gh","gl","G","createEncryptor","key","createDecryptor","encrypt","message","decrypt","cipherText"],"mappings":"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","sourcesContent":["import {CipherProps, PropsWithKey} from \"./lib/algorithm/cipher/Cipher\";\nimport type {Word32Array} from \"./lib/Word32Array\";\nimport {StreamCipher} from \"./lib/algorithm/cipher/StreamCipher\";\nimport {PasswordBasedCipher} from \"./lib/algorithm/cipher/PasswordBasedCipher\";\nimport {SerializableCipher} from \"./lib/algorithm/cipher/SerializableCipher\";\nimport {CipherParams} from \"./lib/algorithm/cipher/CipherParams\";\n\nexport interface RabbitProps extends CipherProps {\n}\n\nexport class Rabbit extends StreamCipher {\n  protected _blockSize = 128/32;\n  public static readonly ivSize = 128/32;\n  \n  protected _props: PropsWithKey<RabbitProps>;\n  protected S: number[] = [];\n  protected C: number[] = [];\n  protected G: number[] = [];\n  protected _X: number[] = [];\n  protected _C: number[] = [];\n  protected _b: number = 0;\n  \n  public constructor(props: PropsWithKey<RabbitProps>) {\n    super(props);\n    this._props = props;\n    \n    this._doReset();\n  }\n  \n  protected _doReset() {\n    // Shortcuts\n    const K = this._key.words;\n    const iv = this._iv;\n  \n    // Swap endian\n    for(let i = 0; i < 4; i++){\n      K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff)\n        | (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n    }\n  \n    // Generate initial state values\n    const X = this._X = [\n      K[0], (K[3] << 16) | (K[2] >>> 16),\n      K[1], (K[0] << 16) | (K[3] >>> 16),\n      K[2], (K[1] << 16) | (K[0] >>> 16),\n      K[3], (K[2] << 16) | (K[1] >>> 16)\n    ];\n  \n    // Generate initial counter values\n    const C = this._C = [\n      (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n      (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n      (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n      (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n    ];\n  \n    // Carry bit\n    this._b = 0;\n  \n    // Iterate the system four times\n    for(let i = 0; i < 4; i++){\n      this.nextState();\n    }\n  \n    // Modify the counters\n    for(let i = 0; i < 8; i++){\n      C[i] ^= X[(i + 4) & 7];\n    }\n  \n    // IV setup\n    if(!iv){\n      return;\n    }\n    // Shortcuts\n    const IV = iv.words;\n    const IV_0 = IV[0];\n    const IV_1 = IV[1];\n  \n    // Generate four sub vectors\n    const i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n    const i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n    const i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n    const i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n  \n    // Modify counter values\n    C[0] ^= i0;\n    C[1] ^= i1;\n    C[2] ^= i2;\n    C[3] ^= i3;\n    C[4] ^= i0;\n    C[5] ^= i1;\n    C[6] ^= i2;\n    C[7] ^= i3;\n  \n    // Iterate the system four times\n    for (let i = 0; i < 4; i++) {\n      this.nextState();\n    }\n  }\n  \n  protected _doProcessBlock(words: number[], offset: number) {\n    // Shortcut\n    const X = this._X;\n  \n    // Iterate the system\n    this.nextState();\n  \n    // Generate four key stream words\n    this.S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n    this.S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n    this.S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n    this.S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n  \n    for (let i = 0; i < 4; i++) {\n      // Swap endian\n      this.S[i] = (((this.S[i] << 8)  | (this.S[i] >>> 24)) & 0x00ff00ff) |\n        (((this.S[i] << 24) | (this.S[i] >>> 8))  & 0xff00ff00);\n    \n      // Encrypt\n      words[offset + i] ^= this.S[i];\n    }\n  }\n  \n  protected nextState(){\n    // Shortcuts\n    const X = this._X;\n    const C = this._C;\n    \n    // Save old counter values\n    for (let i = 0; i < 8; i++) {\n      this.C[i] = C[i];\n    }\n    \n    // Calculate new counter values\n    C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n    C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (this.C[0] >>> 0) ? 1 : 0)) | 0;\n    C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (this.C[1] >>> 0) ? 1 : 0)) | 0;\n    C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (this.C[2] >>> 0) ? 1 : 0)) | 0;\n    C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (this.C[3] >>> 0) ? 1 : 0)) | 0;\n    C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (this.C[4] >>> 0) ? 1 : 0)) | 0;\n    C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (this.C[5] >>> 0) ? 1 : 0)) | 0;\n    C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (this.C[6] >>> 0) ? 1 : 0)) | 0;\n    this._b = (C[7] >>> 0) < (this.C[7] >>> 0) ? 1 : 0;\n    \n    // Calculate the g-values\n    for(let i = 0; i < 8; i++){\n      const gx = X[i] + C[i];\n      \n      // Construct high and low argument for squaring\n      const ga = gx & 0xffff;\n      const gb = gx >>> 16;\n      \n      // Calculate high and low result of squaring\n      const gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n      const gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n      \n      // High XOR low\n      this.G[i] = gh ^ gl;\n    }\n    \n    const G = this.G;\n    // Calculate new state values\n    X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n    X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n    X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n    X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n    X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n    X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n    X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n    X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n  }\n  \n  /**\n   * Creates this cipher in encryption mode.\n   *\n   * @param {Word32Array} key The key.\n   * @param {Partial<CipherProps>?} props (Optional) The configuration options to use for this operation.\n   * @return {Cipher} A cipher instance.\n   * @example\n   *   var cipher = Rabbit.createEncryptor(keyWordArray);\n   */\n  public static createEncryptor(key: Word32Array, props?: Partial<CipherProps>){\n    props = typeof props === \"undefined\" ? {} : props;\n    return new Rabbit({...props, key});\n  }\n  \n  /**\n   * Creates this cipher in decryption mode.\n   *\n   * @param {Word32Array} key The key.\n   * @param {Partial<CipherProps>?} props (Optional) The configuration options to use for this operation.\n   * @return {Cipher} A cipher instance.\n   * @example\n   *   var cipher = Rabbit.createDecryptor(keyWordArray, { iv: ivWordArray });\n   */\n  public static createDecryptor(key: Word32Array, props?: Partial<CipherProps>){\n    props = typeof props === \"undefined\" ? {} : props;\n    return new Rabbit({...props, key});\n  }\n  \n  /**\n   * Encrypt a message with key\n   * \n   * @param {Word32Array|string} message\n   * @param {Word32Array|string} key\n   * @param {Partial<AESProps>?} props\n   * @example\n   *   var encryptedMessage = Rabbit.encrypt(\"test\", \"pass\");\n   */\n  public static encrypt(message: Word32Array|string, key: Word32Array|string, props?: Partial<RabbitProps>){\n    if(typeof key === \"string\"){\n      return PasswordBasedCipher.encrypt(Rabbit, message, key, props);\n    }\n    return SerializableCipher.encrypt(Rabbit, message, key, props);\n  }\n  \n  /**\n   * Encrypt a encrypted message with key\n   *\n   * @param {CipherParams} cipherText\n   * @param {Word32Array|string} key\n   * @param {Partial<AESProps>?} props\n   * @example\n   *   var encryptedMessage = Rabbit.decrypt(cipherProps, \"pass\");\n   */\n  public static decrypt(cipherText: CipherParams, key: Word32Array|string, props?: Partial<RabbitProps>){\n    if(typeof key === \"string\"){\n      return PasswordBasedCipher.decrypt(Rabbit, cipherText, key, props);\n    }\n    return SerializableCipher.decrypt(Rabbit, cipherText, key, props);\n  }\n}\n"]}
{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Plug/jscrypto-1.0.3/src/lib/algorithm/cipher/mode/BlockCipherMode.ts"],"names":["BlockCipherMode","constructor","props","_props","_cipher","cipher","_iv","iv","processBlock","words","offset","createEncryptor","Error","createDecryptor"],"mappings":";;;8BAYaA,e;;;;;;;;;;;;;;;;;;;;;;;;;AAJb;AACA;AACA;AACA;iCACaA,e,GAAN,MAAMA,eAAN,CAAsB;AAKpBC,QAAAA,WAAW,CAACC,KAAD,EAA8B;AAAA;;AAAA;;AAAA;;AAC9C,eAAKC,MAAL,GAAcD,KAAd;AACA,eAAKE,OAAL,GAAeF,KAAK,CAACG,MAArB;AACA,eAAKC,GAAL,GAAWJ,KAAK,CAACK,EAAjB;AACD;AAED;AACF;AACA;;;AACSC,QAAAA,YAAY,CAACC,KAAD,EAAkBC,MAAlB,EAAkC;AACnD;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;AAC+B,eAAfC,eAAe,CAACT,KAAD,EAA+C;AAC1E,gBAAM,IAAIU,KAAJ,CAAU,qBAAV,CAAN;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;AAC+B,eAAfC,eAAe,CAACX,KAAD,EAA+C;AAC1E,gBAAM,IAAIU,KAAJ,CAAU,qBAAV,CAAN;AACD;;AAtC0B,O","sourcesContent":["import type {BlockCipher} from \"../BlockCipher\";\nimport type {Word32Array} from \"../../../Word32Array\";\n\nexport interface BlockCipherModeProps {\n  cipher: BlockCipher;\n  iv: Word32Array|undefined;\n}\n\n/**\n * Abstract base block cipher mode template.\n * @abstract\n */\nexport class BlockCipherMode {\n  protected _props: BlockCipherModeProps;\n  protected _cipher: BlockCipher;\n  protected _iv?: Word32Array;\n  \n  public constructor(props: BlockCipherModeProps) {\n    this._props = props;\n    this._cipher = props.cipher;\n    this._iv = props.iv;\n  }\n  \n  /**\n   * @abstract\n   */\n  public processBlock(words: number[], offset: number) {\n    return;\n  }\n  \n  /**\n   * Creates this mode for encryption.\n   * @param {BlockCipherModeProps} props\n   * @abstract\n   * @example\n   *   var mode = CBC.createEncryptor(cipher, iv.words);\n   */\n  public static createEncryptor(props: BlockCipherModeProps): BlockCipherMode {\n    throw new Error(\"Not implemented yet\");\n  }\n  \n  /**\n   * Creates this mode for decryption.\n   * @param {BlockCipherModeProps} props\n   * @abstract\n   * @example\n   *   var mode = CBC.createDecryptor(cipher, iv.words);\n   */\n  public static createDecryptor(props: BlockCipherModeProps): BlockCipherMode {\n    throw new Error(\"Not implemented yet\");\n  }\n}\n"]}
{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Plug/jscrypto-1.0.3/test/specs/mode/GCM.js"],"names":["expect","require","Word32Array","mode","GCM","pad","NoPadding","AES","Hex","Utf8","describe","data","message","key","iv","it","expected","clone","aes","createEncryptor","counter","words","slice","keyStream","encryptBlock","i","actual","encrypt","padding","cipherText","toString","to","be","parse","msg","encrypted","decrypted","decrypt","encryptedData","decryptedData","authData","mac","undefined","aad"],"mappings":"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","sourcesContent":["const expect = require(\"expect.js\");\nconst {\n  Word32Array,\n  mode: {GCM},\n  pad: {NoPadding},\n  AES,\n  Hex,\n  Utf8,\n} = require(\"../../../test/build/\");\n\ndescribe(\"mode/GCM\", function(){\n  const data = {};\n  data.message = new Word32Array([\n    0x00010203, 0x04050607, 0x08090a0b, 0x0c0d0e0f,\n    0x10111213, 0x14151617, 0x18191a1b, 0x1c1d1e1f\n  ]);\n  data.key = new Word32Array([0x20212223, 0x24252627, 0x28292a2b, 0x2c2d2e2f]);\n  data.iv = new Word32Array([0x30313233, 0x34353637, 0x38393a3b]);\n  \n  it(\"test encryptor\", function(){\n    // Compute expected\n    const expected = data.message.clone();\n    const aes = AES.createEncryptor(data.key);\n  \n    // Counter initialized with IV\n    const counter = data.iv.words.slice(0);\n    counter[3] = 0;\n    counter[3]++;\n    counter[3]++;\n  \n    // First block XORed with encrypted counter\n    let keyStream = counter.slice(0);\n    aes.encryptBlock(keyStream, 0);\n    for (let i=0;i<4;i++) {\n      expected.words[i] ^= keyStream[i];\n    }\n  \n    // Subsequent blocks XORed with encrypted incremented counter\n    counter[3]++;\n    keyStream = counter.slice(0);\n    aes.encryptBlock(keyStream, 0);\n    for (let i=4;i<8;i++) {\n      expected.words[i] ^= keyStream[i % 4];\n    }\n    \n    // Compute actual\n    const actual = AES.encrypt(data.message, data.key, { iv: data.iv, mode: GCM, padding: NoPadding }).cipherText;\n    \n    // Test\n    expect(actual.toString()).to.be(expected.toString());\n  });\n  \n  it(\"test encryptor with 96bit iv\", function(){\n    const key = Hex.parse(\"0123456789ABCDEF11113333555577770123456789ABCDEF1111333355557777\");\n    const msg = Hex.parse(\"00000000000000000000000000000000\");\n    const iv = Hex.parse(\"000000000000000000000000\");\n    \n    const encrypted = AES.encrypt(msg, key, { iv, mode: GCM, padding: NoPadding });\n    expect(encrypted.cipherText.toString()).to.be(\"c8f656193e3bb5b6117d49e3c6799864\");\n  });\n  \n  it(\"test encryptor with 128bit iv\", function(){\n    const key = Hex.parse(\"0123456789ABCDEF11113333555577770123456789ABCDEF1111333355557777\");\n    const msg = Hex.parse(\"00000000000000000000000000000000\");\n    const iv = Hex.parse(\"00000000000000000000000000000000\");\n    \n    const encrypted = AES.encrypt(msg, key, { iv, mode: GCM, padding: NoPadding });\n    expect(encrypted.cipherText.toString()).to.be(\"dfff0d463d8254d7eb23887729b22a85\");\n  });\n  \n  it(\"test encryptor with 64bit iv\", function(){\n    const key = Hex.parse(\"feffe9928665731c6d6a8f9467308308\");\n    const msg = Hex.parse(\"d9313225f88406e5a55909c5aff5269a86a7a9531534f7da2e4c303d8a318a721c3c0c95956809532fcf0e2449a6b525b16aedf5aa0de657ba637b39\");\n    const iv = Hex.parse(\"cafebabefacedbad\");\n    \n    const encrypted = AES.encrypt(msg, key, { iv, mode: GCM, padding: NoPadding });\n    expect(encrypted.cipherText.toString()).to.be(\"61353b4c2806934a777ff51fa22a4755699b2a714fcdc6f83766e5f97b6c742373806900e49f24b22b097544d4896b424989b5e1ebac0f07c23f4598\");\n  });\n  \n  it(\"test decryptor\", function(){\n    const encrypted = AES.encrypt(data.message, data.key, { iv: data.iv, mode: GCM, padding: NoPadding });\n    const decrypted = AES.decrypt(encrypted, data.key, { iv: data.iv, mode: GCM, padding: NoPadding });\n    \n    expect(decrypted.toString()).to.be(data.message.toString());\n  });\n  \n  it(\"test encrypt with string password\", function(){\n    const key = \"password\";\n    const msg = \"message\";\n    const iv = Hex.parse(\"cafebabefacedbad\");\n    \n    const encryptedData = AES.encrypt(msg, key, { iv, mode: GCM, padding: NoPadding });\n    const decryptedData = AES.decrypt(encryptedData, key, {iv, mode: GCM, padding: NoPadding});\n    expect(decryptedData.toString(Utf8)).to.be(msg);\n  });\n  \n  it(\"test hash with AAD, CipherText\", function(){\n    const key = Hex.parse(\"feffe9928665731c6d6a8f9467308308\");\n    const iv = Hex.parse(\"cafebabefacedbaddecaf888\");\n    const authData = Hex.parse(\"feedfacedeadbeeffeedfacedeadbeefabaddad2\");\n    const cipherText = Hex.parse(\"42831ec2217774244b7221b784d0d49ce3aa212f2c02a4e035c17e2329aca12e21d514b25466931c7d8f6a5aac84aa051ba30b396a0aac973d58e091\");\n    \n    expect(GCM.mac(AES, key, iv, authData, cipherText).toString()).to.be(\"5bc94fbc3221a5db94fae95ae7121a47\");\n  });\n  \n  it(\"test hash with CipherText\", function(){\n    const key = Hex.parse(\"feffe9928665731c6d6a8f9467308308\");\n    const iv = Hex.parse(\"cafebabefacedbaddecaf888\");\n    const cipherText = Hex.parse(\"42831ec2217774244b7221b784d0d49ce3aa212f2c02a4e035c17e2329aca12e21d514b25466931c7d8f6a5aac84aa051ba30b396a0aac973d58e091473f5985\");\n    \n    expect(GCM.mac(AES, key, iv, undefined, cipherText).toString()).to.be(\"4d5c2af327cd64a62cf35abd2ba6fab4\");\n  });\n  \n  it(\"test hash with AAD (GMAC)\", function(){\n    const key = Hex.parse(\"55804F3AEB4E914DC91255944A1F565A\");\n    const iv = Hex.parse(\"BBBBBBBBBBBBBBBBBBBBBBBB\");\n    const aad = Hex.parse(\"1063509E5A672C092CAD0B1DC6CE009A61AAAAAAAAAAAA\");\n    \n    expect(GCM.mac(AES, key, iv, aad).toString().slice(0, 24)).to.be(\"44c955d63799428524e97993\");\n  });\n});\n"]}
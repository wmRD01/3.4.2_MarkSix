{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Asset/SpriteAsset.ts"],"names":["SpriteAsset","resources","SpriteAtlas","SpriteFrame","EvnetType","GameEvent","EventMng","Map","loadAsset","loadDir","typePath","err","data","forEach","_SprtieFrame","set","name","checkAssetState","load","loadLogo","lang","formatArr","push","_SpriteAtlas","getSpriteFrames","_spriteFrame","console","log","getInstance","mapEvnet","get","Pulic","emit","SetLogo"],"mappings":";;;mGAMMA,W;;;;;;;;;;;;;;;;;;;;;;;;;AANGC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,W,OAAAA,W;;AACxBC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,S,iBAAAA,S;;AAEFC,MAAAA,Q;;;;;;;AAEDN,MAAAA,W,GAAN,MAAMA,WAAN,CAAoC;AAAA;AAAA,wCACC,IAAIO,GAAJ,EADD;;AAAA;;AAAA,4CAGb,SAHa;AAAA;;AAKhCC,QAAAA,SAAS,GAAG;AACRP,UAAAA,SAAS,CAACQ,OAAV,CAAkB,KAAKC,QAAvB,EAAiCP,WAAjC,EAA8C,CAACQ,GAAD,EAAMC,IAAN,KAAmC;AAC7EA,YAAAA,IAAI,CAACC,OAAL,CAAaC,YAAY,IAAI;AACzB,mBAAKF,IAAL,CAAUG,GAAV,CAAcD,YAAY,CAACE,IAA3B,EAAiCF,YAAjC;AACH,aAFD;AAGA,iBAAKG,eAAL,GAAuB,IAAvB,CAJ6E,CAK7E;AACH,WAND;AAOAhB,UAAAA,SAAS,CAACiB,IAAV,CAAe,aAAf,EAA8BhB,WAA9B,EAA2C,CAACS,GAAD,EAAMC,IAAN,KAAe,CACtD;AAEA;AACA;AACA;AACA;AACA;AACH,WARD;AAUA,iBAAO,IAAP;AACH;;AACDO,QAAAA,QAAQ,CAACC,IAAD,EAAe;AACnB,cAAIC,SAAS,GAAG,EAAhB,CADmB,CAEnB;;AACAA,UAAAA,SAAS,CAACC,IAAV,CAAe,KAAKZ,QAAL,GAAgB,OAAhB,GAA0BU,IAAzC;AACAnB,UAAAA,SAAS,CAACiB,IAAV,CAAeG,SAAf,EAA0BnB,WAA1B,EAAuC,CAACS,GAAD,EAAMC,IAAN,KAAmC;AACtE,gBAAID,GAAJ,EAAS;AACL,mBAAKQ,QAAL,CAAc,IAAd;AACA;AACH,aAJqE,CAKtE;;;AAEAP,YAAAA,IAAI,CAACC,OAAL,CAAaU,YAAY,IAAI;AACzBA,cAAAA,YAAY,CAACC,eAAb,GAA+BX,OAA/B,CAAuCY,YAAY,IAAI;AACnD;AACA,qBAAKb,IAAL,CAAUG,GAAV,CAAcU,YAAY,CAACT,IAA3B,EAAiCS,YAAjC;AACH,eAHD;AAIH,aALD;AAMAC,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,IAAjB;AAEA;AAAA;AAAA,sCAASgB,WAAT,CAAqBC,QAArB,CAA8BC,GAA9B,CAAkC;AAAA;AAAA,wCAAUC,KAA5C,EAAmDC,IAAnD,CAAwD;AAAA;AAAA,wCAAUC,OAAlE,EAA2E,KAAKrB,IAAL,CAAUkB,GAAV,CAAc,MAAd,CAA3E;AAEH,WAjBD;AAkBA,iBAAO,IAAP;AACH;;AAhD+B,O;;yBAmDrB,IAAI9B,WAAJ,E","sourcesContent":["import { resources, SpriteAtlas, SpriteFrame } from \"cc\";\r\nimport { EvnetType } from \"../Enum/EvnetType\";\r\nimport { GameEvent } from \"../Enum/GameEvent\";\r\nimport IAsset from \"../Interface/IAsset\";\r\nimport EventMng from \"../Manager/EventMng\";\r\n\r\nclass SpriteAsset implements IAsset {\r\n    data: Map<string, SpriteFrame> = new Map();\r\n    checkAssetState: boolean;\r\n    typePath: string = \"Sprite/\";\r\n\r\n    loadAsset() {\r\n        resources.loadDir(this.typePath, SpriteFrame, (err, data: Array<SpriteFrame>) => {\r\n            data.forEach(_SprtieFrame => {\r\n                this.data.set(_SprtieFrame.name, _SprtieFrame)\r\n            });\r\n            this.checkAssetState = true;\r\n            // console.log(data);\r\n        })\r\n        resources.load(\"Sprite/Test\", SpriteAtlas, (err, data) => {\r\n            // console.log(data);\r\n\r\n            // data.forEach(_SprtieFrame => {\r\n            //     this.data.set(_SprtieFrame.name, _SprtieFrame)\r\n            // });\r\n            // this.checkAssetState = true;\r\n            // console.log(data);\r\n        })\r\n\r\n        return this\r\n    }\r\n    loadLogo(lang: string) {\r\n        let formatArr = []\r\n        // lang = \"cn\"\r\n        formatArr.push(this.typePath + \"Lang/\" + lang)\r\n        resources.load(formatArr, SpriteAtlas, (err, data: Array<SpriteAtlas>) => {\r\n            if (err) {\r\n                this.loadLogo(\"en\")\r\n                return\r\n            }\r\n            // console.log(data);\r\n\r\n            data.forEach(_SpriteAtlas => {\r\n                _SpriteAtlas.getSpriteFrames().forEach(_spriteFrame => {\r\n                    // console.log(_spriteFrame);\r\n                    this.data.set(_spriteFrame.name, _spriteFrame)\r\n                })\r\n            });\r\n            console.log(this.data);\r\n\r\n            EventMng.getInstance.mapEvnet.get(EvnetType.Pulic).emit(GameEvent.SetLogo, this.data.get(\"logo\"))\r\n\r\n        })\r\n        return this\r\n    }\r\n\r\n}\r\nexport default new SpriteAsset();"]}
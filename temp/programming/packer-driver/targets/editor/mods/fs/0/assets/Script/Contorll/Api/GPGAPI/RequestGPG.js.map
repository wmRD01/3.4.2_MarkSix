{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/Api/GPGAPI/RequestGPG.ts"],"names":["Request","Method","Get","Headers","setMethod","_method","method","setHeaders","_headers","headers","setToken","str","Authorization","setBody","_body","body","fetchData","_url","callback","Promise","resolve","reject","fetch","then","response","json","temp","CertifiedEmail","MemberInfo","NeedToken","ValidateContactInfo","RankList","SendLoginVerification","NotNeedToken","Body","APIUrl","RequestGPG"],"mappings":";;;;;;;;;;;;;;;;;;;AACW,cAAMA,OAAN,CAAc;AAAA;AAAA,4CACAC,MAAM,CAACC,GADP;;AAAA,6CAEE,IAAIC,OAAJ,EAFF;;AAAA;AAAA;;AAIjBC,UAAAA,SAAS,CAACC,OAAD,EAAkB;AACvB,iBAAKC,MAAL,GAAcD,OAAd;AACA,mBAAO,IAAP;AACH;;AACDE,UAAAA,UAAU,CAACC,QAAD,EAAoB;AAC1B,iBAAKC,OAAL,GAAeD,QAAf;AACA,mBAAO,IAAP;AACH;;AACDE,UAAAA,QAAQ,CAACC,GAAD,EAAc;AAClB,iBAAKF,OAAL,CAAaG,aAAb,GAA6BD,GAA7B;AACA,mBAAO,IAAP;AACH;;AACDE,UAAAA,OAAO,CAACC,KAAD,EAAgB;AACnB,iBAAKC,IAAL,GAAYD,KAAZ;AACA,mBAAO,IAAP;AACH;;AACc,gBAATE,SAAS,CAACC,IAAD,EAAeC,QAAf,EAAmC;AAC9C,mBAAO,IAAIC,OAAJ,CAAkB,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC1CC,cAAAA,KAAK,CAACL,IAAD,EAAO,IAAP,CAAL,CACKM,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUC,QAAQ,IAAIN,QAAQ,CAACM,QAAD,CAF9B,EAGKD,IAHL,CAGUH,OAHV;AAIH,aALM,CAAP;AAOH;;AA5BgB;;;;AA+BrB,cAAMjB,OAAN,CAAc;AAAA;AAAA,kCAGV,cAHU,EAGe,mCAHf;;AAAA,kCAIV,QAJU,EAIS,gCAJT;;AAAA,kCAKV,eALU,EAKgB,EALhB;AAAA;;AAAA;;;;;;;;AAUC,kBAAMuB,IAAN,CAAW;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;;AAMX,kBAAMC,cAAN,CAAqB;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;;AAOrB,kBAAMC,UAAN,CAAiB;AAAA;AAAA;AAAA;;AAAA;;;aAdXC,S,KAAAA,S,SAAAA,S,WAAAA,S;;;;;AAmBN,kBAAMC,mBAAN,CAA0B;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;;AAI1B,kBAAMC,QAAN,CAAe;;;;AAGf,kBAAMC,qBAAN,CAA4B;AAAA;AAAA,gDACd,OADc;;AAAA;AAAA;;AAAA;;;aARtBC,Y,KAAAA,Y,SAAAA,Y,WAAAA,Y;WAnBJC,I,KAAAA,I,eAAAA,I,iBAAAA,I;;YAoCLjC,M;;mBAAAA,M;AAAAA,UAAAA,M;AAAAA,UAAAA,M;WAAAA,M,KAAAA,M;;;YAKAkC,M;;mBAAAA,M;AAAAA,UAAAA,M;WAAAA,M,KAAAA,M;;;SAjFCC,U,0BAAAA,U","sourcesContent":["export namespace RequestGPG {\r\n    export class Request {\r\n        method: Method = Method.Get;\r\n        headers: Headers = new Headers();\r\n        body: string\r\n        setMethod(_method: Method) {\r\n            this.method = _method;\r\n            return this\r\n        }\r\n        setHeaders(_headers: Headers) {\r\n            this.headers = _headers;\r\n            return this\r\n        }\r\n        setToken(str: string) {\r\n            this.headers.Authorization = str\r\n            return this\r\n        }\r\n        setBody(_body: string) {\r\n            this.body = _body;\r\n            return this\r\n        }\r\n        async fetchData(_url: string, callback: Function) {\r\n            return new Promise<void>((resolve, reject) => {\r\n                fetch(_url, this)\r\n                    .then(response => response.json())\r\n                    .then(response => callback(response))\r\n                    .then(resolve)\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n    class Headers {\r\n\r\n        [x: string]: string;\r\n        \"Content-Type\": string = \"application/json, text/plain, */*\"\r\n        \"Accept\": string = \"application/json;charset=UTF-8\"\r\n        \"Authorization\": string = \"\"\r\n    }\r\n\r\n    export namespace Body {\r\n        export namespace NeedToken {\r\n            export class temp {\r\n                [x: string]: string;\r\n                verifyCode: string;\r\n                email: string;\r\n            }\r\n            /**需要token在思考如何切出 */\r\n            export class CertifiedEmail {\r\n                [x: string]: string;\r\n                verifyCode: string;\r\n                email: string;\r\n                sign: string;\r\n            }\r\n            /**需要token在思考如何切出 */\r\n            export class MemberInfo {\r\n                sign: string;\r\n            }\r\n        }\r\n        export namespace NotNeedToken {\r\n            export class ValidateContactInfo {\r\n                Phone: string\r\n                Email: string\r\n            }\r\n            export class RankList {\r\n\r\n            }\r\n            export class SendLoginVerification {\r\n                Locale: string = \"zh-TW\";\r\n                Email: string;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    export enum Method {\r\n        Get = \"Get\",\r\n        POST = \"POST\",\r\n    }\r\n\r\n    export enum APIUrl {\r\n        ValidateContactInfo = \"\"\r\n    }\r\n}\r\n\r\n"]}
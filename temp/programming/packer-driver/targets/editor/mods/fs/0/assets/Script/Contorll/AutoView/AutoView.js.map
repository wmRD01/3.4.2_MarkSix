{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/AutoView/AutoView.ts"],"names":["_decorator","Component","view","ResolutionPolicy","find","UITransform","DelayTime","PublicData","ccclass","property","AutoView","start","AdjustView","window","addEventListener","isCanUpdata","getInstance","StartDT_NotClear","canvasSize","getWinSize","curDR","getDesignResolutionSize","console","log","cvs","getComponent","width","BaseViewWidth","height","BaseViewHeight","setDesignResolutionSize","FIXED_HEIGHT","str","AdjustView_Old","resize","s","getFrameSize","rw","rh","finalW","finalH","UNKNOWN","innerWidth","innerHeight","AdjustView_"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, view, ResolutionPolicy, find, UITransform, screen, Label, Size, sys } from 'cc';\r\nimport DelayTime from '../../../Plug/DelayTime';\r\n\r\nimport PublicData from '../../Model/PublicData';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('AutoView')\r\nexport default class AutoView extends Component {\r\n    public curDR: Size = null;\r\n\r\n    isCanUpdata: boolean = true\r\n    start() {\r\n        // if (sys.os == sys.OS.ANDROID) return\r\n        this.AdjustView();\r\n        window.addEventListener(\"resize\", (async () => {\r\n            if (this.isCanUpdata) {\r\n                this.isCanUpdata = false\r\n                await DelayTime.getInstance.StartDT_NotClear(.5)\r\n                this.AdjustView()\r\n                this.isCanUpdata = true\r\n            }\r\n            // else\r\n            // console.error(\"等待刷新......\");\r\n        }))\r\n        // view.on('canvas-resize', this.resize, this);\r\n        // director.on(Director.EVENT_AFTER_SCENE_LAUNCH, this.AdjustView, this);\r\n    }\r\n    public AdjustView() {\r\n        // console.log(view.getDesignResolutionSize().height);\r\n        // console.log(view.getDesignResolutionSize().x);\r\n\r\n        let canvasSize = this.getWinSize();\r\n        if (!this.curDR)\r\n            this.curDR = view.getDesignResolutionSize();\r\n        console.log(canvasSize);\r\n\r\n        let cvs = find('Canvas').getComponent(UITransform);\r\n        if (canvasSize.width >= PublicData.getInstance.BaseViewWidth || canvasSize.height / canvasSize.width <= (PublicData.getInstance.BaseViewHeight / PublicData.getInstance.BaseViewWidth)) {\r\n            var width = canvasSize.width * (PublicData.getInstance.BaseViewHeight / canvasSize.height);\r\n            view.setDesignResolutionSize(width, PublicData.getInstance.BaseViewHeight, ResolutionPolicy.FIXED_HEIGHT);\r\n            // console.log(width);\r\n\r\n            // cvs.width = width;\r\n            // cvs.height = 1280;\r\n\r\n        }\r\n        else {\r\n            var height = canvasSize.height * (PublicData.getInstance.BaseViewWidth / canvasSize.width);\r\n            // if (height > PublicData.getInstance.BaseViewHeight)\r\n            //     height = PublicData.getInstance.BaseViewHeight\r\n\r\n            view.setDesignResolutionSize(PublicData.getInstance.BaseViewWidth, height, ResolutionPolicy.FIXED_HEIGHT)\r\n\r\n        }\r\n        let str: string = `window寬:${canvasSize.width}\\n\\rwindow高:${canvasSize.height}\\n\\rcocos寬:${this.curDR.width}\\n\\rcocos高:${this.curDR.height}`\r\n        // find(\"資訊\", cvs.node).getComponent(Label).string = str;\r\n\r\n        // if (canvasSize.height / canvasSize.width <= 16 / 9) {\r\n\r\n        // } else {\r\n\r\n        //     // if (canvasSize.height / canvasSize.width > 16 / 9 && canvasSize.height / canvasSize.width <= 19.5 / 9) {\r\n\r\n        //     //     view.setDesignResolutionSize(720, 1500, ResolutionPolicy.FIXED_WIDTH)\r\n        //     // } else {\r\n\r\n        //     //     view.setDesignResolutionSize(720, 1500, ResolutionPolicy.FIXED_HEIGHT)\r\n        //     // }\r\n        //     cvs.width = 720;\r\n        //     cvs.height = 1500;\r\n        // }\r\n\r\n\r\n\r\n\r\n        // console.error(\"HIHI\");\r\n        // if ((screen.windowSize.width) >= (720) || (screen.windowSize.height / screen.windowSize.width) <= (1280 / 720)) {\r\n        //     //宽度超出\r\n        //     var width = screen.windowSize.width * (1280 / screen.windowSize.height);\r\n        //     view.setDesignResolutionSize(width, 1280, ResolutionPolicy.FIXED_HEIGHT);\r\n        // } else {\r\n        //     //高度超出\r\n        //     var height = screen.windowSize.height * (720 / screen.windowSize.width);\r\n        //     view.setDesignResolutionSize(720, height, ResolutionPolicy.FIXED_WIDTH);\r\n        // }\r\n    }\r\n\r\n    public AdjustView_Old() {\r\n\r\n        let canvasSize = this.getWinSize();\r\n        if (!this.curDR)\r\n            this.curDR = view.getDesignResolutionSize();\r\n        // console.log(canvasSize);\r\n\r\n        let cvs = find('Canvas').getComponent(UITransform);\r\n        if (canvasSize.width >= 720 || canvasSize.height / canvasSize.width <= (1280 / 720)) {\r\n            var width = canvasSize.width * (1280 / canvasSize.height);\r\n            view.setDesignResolutionSize(width, 1280, ResolutionPolicy.FIXED_HEIGHT);\r\n            // console.log(width);\r\n\r\n            // cvs.width = width;\r\n            // cvs.height = 1280;\r\n        }\r\n        else {\r\n            var height = canvasSize.height * (720 / canvasSize.width);\r\n            view.setDesignResolutionSize(720, height, ResolutionPolicy.FIXED_HEIGHT)\r\n            // console.log(height);\r\n            // cvs.width = 720;\r\n            // cvs.height = height;\r\n        }\r\n        let str: string = `window寬:${canvasSize.width}\\n\\rwindow高:${canvasSize.height}\\n\\rcocos寬:${this.curDR.width}\\n\\rcocos高:${this.curDR.height}`\r\n        // find(\"資訊\", cvs.node).getComponent(Label).string = str;\r\n\r\n        // if (canvasSize.height / canvasSize.width <= 16 / 9) {\r\n\r\n        // } else {\r\n\r\n        //     // if (canvasSize.height / canvasSize.width > 16 / 9 && canvasSize.height / canvasSize.width <= 19.5 / 9) {\r\n\r\n        //     //     view.setDesignResolutionSize(720, 1500, ResolutionPolicy.FIXED_WIDTH)\r\n        //     // } else {\r\n\r\n        //     //     view.setDesignResolutionSize(720, 1500, ResolutionPolicy.FIXED_HEIGHT)\r\n        //     // }\r\n        //     cvs.width = 720;\r\n        //     cvs.height = 1500;\r\n        // }\r\n\r\n\r\n\r\n\r\n        // console.error(\"HIHI\");\r\n        // if ((screen.windowSize.width) >= (720) || (screen.windowSize.height / screen.windowSize.width) <= (1280 / 720)) {\r\n        //     //宽度超出\r\n        //     var width = screen.windowSize.width * (1280 / screen.windowSize.height);\r\n        //     view.setDesignResolutionSize(width, 1280, ResolutionPolicy.FIXED_HEIGHT);\r\n        // } else {\r\n        //     //高度超出\r\n        //     var height = screen.windowSize.height * (720 / screen.windowSize.width);\r\n        //     view.setDesignResolutionSize(720, height, ResolutionPolicy.FIXED_WIDTH);\r\n        // }\r\n    }\r\n    // debounce(func: Function) {\r\n    //     let timer;\r\n    //     return function (event) {\r\n    //         if (timer) clearTimeout(timer);\r\n    //         timer = setTimeout(func, 300, event);\r\n    //     };\r\n    // }\r\n    public resize() {\r\n        //根据屏幕大小决定适配策略\r\n        //想明白原理，请阅读本文 https://blog.csdn.net/qq_36720848/article/details/89742451\r\n        let cvs = find('Canvas').getComponent(UITransform);\r\n        if (!this.curDR)\r\n            this.curDR = view.getDesignResolutionSize();\r\n\r\n\r\n        // console.log(screen);\r\n\r\n        var s = view.getFrameSize()\r\n        // console.log(dr);\r\n        // console.log(s);\r\n\r\n\r\n        var rw = s.width;\r\n        var rh = s.height;\r\n        var finalW = rw;\r\n        var finalH = rh;\r\n\r\n        if ((rw / rh) > (this.curDR.width / this.curDR.height)) {\r\n            //!#zh: 是否优先将设计分辨率高度撑满视图高度。 */\r\n            //cvs.fitHeight = true;\r\n\r\n            //如果更长，则用定高\r\n            finalH = this.curDR.height;\r\n            finalW = finalH * rw / rh;\r\n        }\r\n        else {\r\n            /*!#zh: 是否优先将设计分辨率宽度撑满视图宽度。 */\r\n            //cvs.fitWidth = true;\r\n            //如果更短，则用定宽\r\n            finalW = this.curDR.width;\r\n            finalH = rh / rw * finalW;\r\n        }\r\n        view.setDesignResolutionSize(finalW, finalH, ResolutionPolicy.UNKNOWN);\r\n\r\n        cvs.width = finalW;\r\n        cvs.height = finalH;\r\n    }\r\n\r\n    getWinSize() {\r\n        return { width: window.innerWidth, height: window.innerHeight };\r\n    }\r\n\r\n\r\n    public AdjustView_() {\r\n\r\n        let canvasSize = this.getWinSize();\r\n        if (!this.curDR)\r\n            this.curDR = view.getDesignResolutionSize();\r\n        console.log(canvasSize);\r\n\r\n        let cvs = find('Canvas').getComponent(UITransform);\r\n        if (canvasSize.width >= PublicData.getInstance.BaseViewWidth || canvasSize.height / canvasSize.width <= (PublicData.getInstance.BaseViewHeight / PublicData.getInstance.BaseViewWidth)) {\r\n            var width = canvasSize.width * (PublicData.getInstance.BaseViewHeight / canvasSize.height);\r\n            view.setDesignResolutionSize(width, PublicData.getInstance.BaseViewHeight, ResolutionPolicy.FIXED_HEIGHT);\r\n\r\n        }\r\n        else {\r\n            var height = canvasSize.height * (PublicData.getInstance.BaseViewWidth / canvasSize.width);\r\n\r\n            view.setDesignResolutionSize(PublicData.getInstance.BaseViewWidth, height, ResolutionPolicy.FIXED_HEIGHT)\r\n\r\n        }\r\n        let str: string = `window寬:${canvasSize.width}\\n\\rwindow高:${canvasSize.height}\\n\\rcocos寬:${this.curDR.width}\\n\\rcocos高:${this.curDR.height}`\r\n        console.log(str);\r\n\r\n    }\r\n}\r\n\r\n"]}
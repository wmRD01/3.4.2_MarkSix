{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/Data/Panel/DataSoundSet.ts"],"names":["DataSoundSet","Button","Color","color","find","Label","Sprite","Tween","tween","UIOpacity","v3","BaseComponent","PublicModel","Map","SoundType","Item","constructor","_bindPanel","_type","type","button","node","getComponent","spriteSwitchBG","nodeSwitch","title","state","uiOpacityStateLabel","buttonConvertStringPosition","getInstance","to2DConvertOtherNodeSpaceAR","parent","ButtonMng","addEvent","toString","setTitle","str","string","getType","init","getbool","position","x","distanceLable","y","z","fromHEX","distanceSprite","action","stopAllByTarget","to","actionTime","call","start","opacity","onUpdate","target","ration","lerp","LerpRGB","a","b","t","r","g","SoundItem"],"mappings":"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","sourcesContent":["import { Button, Color, color, Component, find, Label, Node, Sprite, Tween, tween, UIOpacity, v3, Vec3 } from \"cc\";\r\nimport BaseComponent from \"../../../Model/ComponentBase\";\r\nimport PublicModel from \"../../../Model/PublicModel\";\r\n\r\n\r\nexport default class DataSoundSet extends BaseComponent {\r\n    map_Item: Map<SoundType, SoundItem.Item> = new Map()\r\n    buttonClose: Button;\r\n    buttonBlockBG: Button;\r\n\r\n    // 1. 顏色漸變\r\n    // 2. no off文字透明度與文字變化\r\n\r\n    // tween(this.node.getComponent(Sprite))\r\n    //     .to(.2,{ color: new Color().fromHEX(\"\") })\r\n}\r\n\r\nexport enum SoundType {\r\n    Music,\r\n    Effect\r\n}\r\n\r\nexport namespace SoundItem {\r\n    export class Item {\r\n        button: Button;\r\n        private title: Label;\r\n        private state: Label;\r\n        private nodeSwitch: Node;\r\n        private spriteSwitchBG: Sprite;\r\n        //private bindPanel: Panel_SoundSet;\r\n        private type: SoundType;\r\n        private isAction: boolean;\r\n        private actionTime: number = .5;\r\n        private distanceLable: number = 15;\r\n        private distanceSprite: number = 30;\r\n        private uiOpacityStateLabel: UIOpacity;\r\n        private buttonConvertStringPosition: Vec3;\r\n\r\n        // this.bindPanel = _bindPanel\r\n        constructor(_bindPanel: Panel_SoundSet, _type: SoundType) {\r\n            this.type = _type;\r\n            //像是SoundType[SoundType.Music] 可以直接取Key\r\n            this.button = find(SoundType[_type] + \"/btn\", _bindPanel.node).getComponent(Button)\r\n            this.spriteSwitchBG = this.button.getComponent(Sprite)\r\n            this.nodeSwitch = find(\"switch_round\", this.button.node)\r\n            this.title = find(\"label_\" + SoundType[_type] + \"Title\", _bindPanel.node).getComponent(Label)\r\n            this.state = find(\"label_\" + SoundType[_type] + \"State\", _bindPanel.node).getComponent(Label)\r\n            this.uiOpacityStateLabel = this.state.getComponent(UIOpacity)\r\n            this.buttonConvertStringPosition = PublicModel.getInstance.to2DConvertOtherNodeSpaceAR(this.state.node, this.button.node.parent)\r\n            // bindPanel.node\r\n            //@ts-ignore\r\n            ButtonMng.addEvent(_bindPanel, \"switchEevent\", this.button, this.type.toString())\r\n        }\r\n        setTitle(str: string) {\r\n            this.title.string = str\r\n        }\r\n        getType() {\r\n            return this.type\r\n        }\r\n        init(getbool: boolean) {\r\n            if (getbool) {\r\n                this.state.string = \"ON\"\r\n                this.state.node.position = v3(this.buttonConvertStringPosition.x - this.distanceLable, this.state.node.position.y, this.state.node.position.z)\r\n                this.spriteSwitchBG.color = color(0, 0, 0, 255).fromHEX(\"#EA1337\")\r\n                this.nodeSwitch.position = v3(this.distanceSprite, this.nodeSwitch.position.y, this.nodeSwitch.position.y)\r\n            }\r\n            else {\r\n                this.state.string = \"OFF\"\r\n                this.state.node.position = v3(this.buttonConvertStringPosition.x + this.distanceLable, this.state.node.position.y, this.state.node.position.z)\r\n                this.nodeSwitch.position = v3(-this.distanceSprite, this.nodeSwitch.position.y, this.nodeSwitch.position.y)\r\n                this.spriteSwitchBG.color = color(0, 0, 0, 255).fromHEX(\"#494a4d\")\r\n            }\r\n\r\n        }\r\n        action(getbool: boolean) {\r\n            if (getbool) {\r\n                // tween(this.sprite_SwitchBG)\r\n                //     .set({ color: color(0, 0, 0, 255) })\r\n                //     // .to(this.actionTime / 2, { color: color().fromHEX(\"#EA1337\") })\r\n                //     .to(this.actionTime / 2, { color: color(234, 19, 55, 255) })\r\n                //     .start()\r\n                Tween.stopAllByTarget(this.state.node)\r\n                Tween.stopAllByTarget(this.uiOpacityStateLabel)\r\n                Tween.stopAllByTarget(this.spriteSwitchBG)\r\n                Tween.stopAllByTarget(this.nodeSwitch)\r\n\r\n                tween(this.state.node)\r\n                    .to(this.actionTime / 2, { position: v3(this.buttonConvertStringPosition.x + (this.distanceLable * 2), this.state.node.position.y, this.state.node.position.z) })\r\n                    .call(() => {\r\n                        this.state.node.position = v3(this.buttonConvertStringPosition.x + (-this.distanceLable * 2), this.state.node.position.y, this.state.node.position.z)\r\n                    })\r\n                    .to(this.actionTime / 2, { position: v3(this.buttonConvertStringPosition.x - this.distanceLable, this.state.node.position.y, this.state.node.position.z) })\r\n                    .start()\r\n                tween(this.uiOpacityStateLabel)\r\n                    .to(this.actionTime / 2, { opacity: 0 })\r\n                    .call(() => {\r\n                        this.state.string = \"ON\"\r\n                    })\r\n                    .to(this.actionTime / 2, { opacity: 255 })\r\n                    .start()\r\n                tween(this.spriteSwitchBG)\r\n                    .to(this.actionTime * 2, {}, {\r\n                        onUpdate: (target: Sprite, ration: number) => {\r\n                            target.color = Color.lerp(new Color(), target.color, color().fromHEX(\"#EA1337\"), ration);\r\n                        }\r\n                    })\r\n                    .start()\r\n                tween(this.nodeSwitch)\r\n                    .to(this.actionTime, { position: v3(this.distanceSprite, 0, 0) })\r\n\r\n                    .start()\r\n            }\r\n            else {\r\n                tween(this.state.node)\r\n                    .to(this.actionTime / 2, { position: v3(this.buttonConvertStringPosition.x + (-this.distanceLable * 2), this.state.node.position.y, this.state.node.position.z) })\r\n                    .call(() => {\r\n                        this.state.node.position = v3(this.buttonConvertStringPosition.x + (this.distanceLable * 2), this.state.node.position.y, this.state.node.position.z)\r\n                    })\r\n                    .to(this.actionTime / 2, { position: v3(this.buttonConvertStringPosition.x + this.distanceLable, this.state.node.position.y, this.state.node.position.z) })\r\n                    .start()\r\n                tween(this.uiOpacityStateLabel)\r\n                    .to(this.actionTime / 2, { opacity: 0 })\r\n                    .call(() => {\r\n                        this.state.string = \"OFF\"\r\n                    })\r\n                    .to(this.actionTime / 2, { opacity: 255 })\r\n                    .start()\r\n                tween(this.spriteSwitchBG)\r\n                    .to(this.actionTime * 2, {}, {\r\n                        onUpdate: (target: Sprite, ration: number) => {\r\n                            target.color = Color.lerp(new Color(), target.color, color().fromHEX(\"#494a4d\"), ration);\r\n                        }\r\n                    })\r\n                    // .repeat(this.actionTime * 30, tween()\r\n                    //     .call((e: Sprite) => {\r\n                    //         e.color = this.LerpRGB(e.color, color().fromHEX(\"#494a4d\"), .1)\r\n                    //     })\r\n                    //     .delay(this.actionTime / 30)\r\n                    // )\r\n                    // .set({ color: color().fromHEX(\"#494a4d\") })\r\n                    .start()\r\n                tween(this.nodeSwitch)\r\n                    .to(this.actionTime, { position: v3(-this.distanceSprite, 0, 0) })\r\n                    .start()\r\n            }\r\n\r\n            // let sprite = this.node.getComponent(Sprite) as Sprite;\r\n            // sprite.color = new Color(255, 255, 255, 255);\r\n            // let color = new Color(255, 255, 255, 0);\r\n            // let curColor = new Color();\r\n            // let tween = new Tween(sprite);\r\n            // tween\r\n            //   .to(1, {}, {\r\n            //     onUpdate: (target, ratio: number) => {\r\n            //       sprite.color = Color.lerp(curColor, Color.WHITE, color, ratio);\r\n            //     }\r\n            //   })\r\n            //   .call(() => {\r\n            //     this.node.active = false;\r\n            //   })\r\n            //   .start();\r\n\r\n        }\r\n\r\n        public LerpRGB(a: Color, b: Color, t: number) {\r\n            return new Color\r\n                (\r\n                    a.r + (b.r - a.r) * t,\r\n                    a.g + (b.g - a.g) * t,\r\n                    a.b + (b.b - a.b) * t,\r\n                    a.a + (b.a - a.a) * t\r\n                );\r\n        }\r\n\r\n    }\r\n}\r\n"]}
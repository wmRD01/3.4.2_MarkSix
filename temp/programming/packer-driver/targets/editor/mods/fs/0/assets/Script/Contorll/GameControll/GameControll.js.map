{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/GameControll/GameControll.ts"],"names":["GameControll","Game","game","CommandType","GameEvent","EventMng","PublicData","LobbyState","MessageState","PlayerState","ViewState","AccountLogIn","ChangeNickname","InGame","InLobby","InRoomLevel","BackBet","ClearBet","OwnerBet","ReferLastBet","SquintEnd","SquintProcess","UpdateCoin","GameCloseView","GameOpenView","LobbyCloseView","LobbyOpenView","PlayerInRoom","PlayerExitRoom","RefreshBankerBetList","RefreshPlayerBetList","GetGameRoomData","BackHomeMessage","ShowConfirmMessage","MessageCommend","LangType","ServerGameSenceType","BaseSingleton","SocketSetting","GameSceneName","RoomData","PanelLoading","GameStateEvent","GameSenceText","GameData","CheckLoading","CheckLoadingType","EvnetType","setControllEvent","on","EVENT_HIDE","resetView","bind","EVENT_SHOW","resetWait","getInstance","mapEvnet","get","Pulic","ControllSandCommend","serverRespond","cmd","data","code","messaggeState","gori","grre","grrl","gbop","gbob","viewState","ln","lbll","lbrl","lbsr","goin","ucnn","vlcr","lobbyState","gonm","gbet","gbbk","gbcl","gbrt","gpp","gpe","isResetView","playerState","ggs","gbal","gs1","gs8","gs9","gs10","gs11","gs12","gs13","gs14","gs15","gs16","gs17","gs19","gs18","gs20","gs21","gs22","gs23","gs24","gs25","gs30","isResetProcessing","instance","closeLoading","gameState","transitionTo","roomNo","nowStage","senceText","change","undefined","emit","UpdataSence","checkError","message","serverErrorCode","ssdis","resetState","isWebSocketOpen","caption","transformStr","BackHome","transitionTo_Old","requestChange","excr","excc","isNaN","Number","t","Server","currentScene","Lobby","GameRoom"],"mappings":"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","sourcesContent":["import { CommandType } from \"../../Enum/CommandType\";\r\nimport { GameEvent } from \"../../Enum/GameEvent\";\r\nimport EventMng from \"../../Manager/EventMng\";\r\nimport PublicData from \"../../Model/PublicData\";\r\nimport { GameState, LobbyState, MessageState, PlayerState, ViewState } from \"../../../Patten/StatePatten\";\r\nimport { AccountLogIn, ChangeNickname, InGame, InLobby, InRoomLevel } from \"../../State/LobbyState\";\r\nimport { BackBet, ClearBet, OwnerBet, ReferLastBet, SquintEnd, SquintProcess, UpdateCoin } from \"../../State/PlayState\";\r\nimport { GameCloseView, GameOpenView, LobbyCloseView, LobbyOpenView, PlayerInRoom, PlayerExitRoom, RefreshBankerBetList, RefreshPlayerBetList, GetGameRoomData } from \"../../State/ViewState\";\r\nimport { BackHomeMessage, ShowConfirmMessage } from \"../../State/MessageState\";\r\nimport { MessageCommend } from \"../../Enum/MessageCommend\";\r\nimport { LangType } from \"../../Enum/LangType\";\r\nimport { ServerGameSenceType } from \"../../Enum/ServerGameSenceType\";\r\nimport BaseSingleton from \"../../../Patten/Singleton/BaseSingleton\";\r\nimport SocketSetting from \"../../Socket/SocketSetting\";\r\nimport { Game, game } from \"cc\";\r\nimport { GameSceneName } from \"../../Enum/GameSenceName\";\r\nimport RoomData from \"../../Model/RoomData\";\r\nimport PanelLoading from \"../NoClearNode/PanelLoading\";\r\nimport { GameStateEvent } from \"../../Enum/GameStateEvent\";\r\nimport GameSenceText from \"../../Model/GameSenceText\";\r\nimport GameData from \"../../Model/GameData\";\r\nimport CheckLoading from \"../../Model/CheckLoading\";\r\nimport { CheckLoadingType } from \"../../Enum/CheckLoadingType\";\r\nimport { EvnetType } from \"../../Enum/EvnetType\";\r\n\r\nexport default class GameControll extends BaseSingleton<GameControll>() {\r\n    //利用推波方式去call Function \r\n    setControllEvent() {\r\n        game.on(Game.EVENT_HIDE, this.resetView.bind(this))\r\n        game.on(Game.EVENT_SHOW, this.resetWait.bind(this))\r\n        EventMng.getInstance.mapEvnet.get(EvnetType.Pulic).on(GameEvent.ControllSandCommend, this.serverRespond, this)\r\n    }\r\n    serverRespond(cmd: string, data: any) {\r\n        // console.log(cmd, data);\r\n        if (data.code && data.code != 0) {\r\n            this.messaggeState(cmd, data.code)\r\n\r\n            // if (data.code > 0)   // console.log(\"出現錯誤啦!!!!!!!!!!\");\r\n            //     return;\r\n        }\r\n        // console.log(cmd);\r\n        // console.log(MainModel.isResetView);\r\n        switch (cmd) {\r\n            case CommandType.gori:\r\n            case CommandType.grre:\r\n            case CommandType.grrl:\r\n            case CommandType.gbop:\r\n            case CommandType.gbob:\r\n                this.viewState(cmd, data)\r\n                break\r\n            case CommandType.ln:\r\n            case CommandType.lbll:\r\n            case CommandType.lbrl:\r\n            case CommandType.lbsr:\r\n            case CommandType.goin:\r\n            case CommandType.ucnn:\r\n            case CommandType.vlcr:\r\n                this.lobbyState(cmd, data)\r\n                break;\r\n            case CommandType.gonm:\r\n            case CommandType.gbet:\r\n            case CommandType.gbbk:\r\n            case CommandType.gbcl:\r\n            case CommandType.gbrt:\r\n            case CommandType.gpp:\r\n            case CommandType.gpe:\r\n                if (PublicData.getInstance.isResetView) return\r\n                this.playerState(cmd, data)\r\n                break;\r\n            case ServerGameSenceType.ggs:\r\n            case ServerGameSenceType.gbal:\r\n            case ServerGameSenceType.gs1:\r\n            case ServerGameSenceType.gs8:\r\n            case ServerGameSenceType.gs9:\r\n            case ServerGameSenceType.gs10:\r\n            case ServerGameSenceType.gs11:\r\n            case ServerGameSenceType.gs12:\r\n            case ServerGameSenceType.gs13:\r\n            case ServerGameSenceType.gs14:\r\n            case ServerGameSenceType.gs15:\r\n            case ServerGameSenceType.gs16:\r\n            case ServerGameSenceType.gs17:\r\n            case ServerGameSenceType.gs19:\r\n            case ServerGameSenceType.gs18:\r\n            case ServerGameSenceType.gs20:\r\n            case ServerGameSenceType.gs21:\r\n            case ServerGameSenceType.gs22:\r\n            case ServerGameSenceType.gs23:\r\n            case ServerGameSenceType.gs24:\r\n            case ServerGameSenceType.gs25:\r\n            case ServerGameSenceType.gs30:\r\n                // console.log(\"???uisReaaset?\");\r\n                // console.log(PublicData.getInstance.isResetView);\r\n                if (PublicData.getInstance.isResetView) return\r\n                if (!PublicData.getInstance.isResetView && PublicData.getInstance.isResetProcessing) {\r\n                    PanelLoading.instance.closeLoading()\r\n                    PublicData.getInstance.isResetProcessing = false\r\n                }\r\n\r\n                this.gameState(cmd, data)\r\n                break;\r\n        }\r\n    }\r\n    viewState(cmd: string, data: any) {\r\n        switch (cmd) {\r\n            case CommandType.gori:\r\n                ViewState.getInstance.transitionTo(GetGameRoomData, data)\r\n                break;\r\n            case CommandType.grre:\r\n                ViewState.getInstance.transitionTo(PlayerInRoom, data)\r\n                break;\r\n            case CommandType.grrl:\r\n                ViewState.getInstance.transitionTo(PlayerExitRoom, data)\r\n                break;\r\n            case CommandType.gbop:\r\n                ViewState.getInstance.transitionTo(RefreshPlayerBetList, data)\r\n                break;\r\n            case CommandType.gbob:\r\n                ViewState.getInstance.transitionTo(RefreshBankerBetList, data)\r\n                break;\r\n\r\n        }\r\n    }\r\n    lobbyState(cmd: string, data: any) {\r\n        switch (cmd) {\r\n            case CommandType.ln:\r\n                LobbyState.getInstance.transitionTo(AccountLogIn, data)\r\n                break;\r\n            case CommandType.lbsr:\r\n            case CommandType.goin:\r\n                LobbyState.getInstance.transitionTo(InGame, data)\r\n                break;\r\n            case CommandType.lbll:\r\n                LobbyState.getInstance.transitionTo(InLobby, data)\r\n                break;\r\n            case CommandType.lbrl:\r\n                LobbyState.getInstance.transitionTo(InRoomLevel, data)\r\n                break;\r\n            case CommandType.ucnn:\r\n                LobbyState.getInstance.transitionTo(ChangeNickname, data)\r\n                break;\r\n            case CommandType.vlcr:\r\n                GameData.getInstance.roomNo = data.roomNo\r\n                LobbyState.getInstance.transitionTo(InLobby, data)\r\n                break;\r\n        }\r\n    }\r\n    playerState(cmd: string, data: any) {\r\n        // console.log(cmd);\r\n\r\n        switch (cmd) {\r\n            case CommandType.gonm:\r\n                PlayerState.getInstance.transitionTo(UpdateCoin, data)\r\n                break;\r\n            case CommandType.gbet:\r\n                PlayerState.getInstance.transitionTo(OwnerBet, data)\r\n                break;\r\n            case CommandType.gbbk:\r\n                PlayerState.getInstance.transitionTo(BackBet, data)\r\n                break;\r\n            case CommandType.gbcl:\r\n                PlayerState.getInstance.transitionTo(ClearBet, data)\r\n                break;\r\n            case CommandType.gbrt:\r\n                PlayerState.getInstance.transitionTo(ReferLastBet, data)\r\n                break;\r\n            case CommandType.gpp:\r\n                PlayerState.getInstance.transitionTo(SquintProcess, data)\r\n                break;\r\n            case CommandType.gpe:\r\n                PlayerState.getInstance.transitionTo(SquintEnd, data)\r\n                break;\r\n        }\r\n    }\r\n    gameState(cmd: string, data: any) {\r\n        //紀錄場景\r\n        RoomData.getInstance.nowStage = cmd\r\n        let senceText = new GameSenceText().change(cmd)\r\n        // console.log(senceText);\r\n        if (senceText != undefined)\r\n            EventMng.getInstance.mapEvnet.get(EvnetType.Pulic).emit(GameStateEvent.UpdataSence, senceText)\r\n        switch (cmd) {\r\n\r\n\r\n        }\r\n        // if (!GameState.isStateing)\r\n        // else\r\n        //     GameState.requestStay()\r\n    }\r\n\r\n\r\n    checkError(cmd: string, data: any) {\r\n        let message: string;\r\n        message = this.serverErrorCode(data.code)\r\n        switch (cmd) {\r\n            case CommandType.ssdis://系統踢出\r\n                CheckLoading.getInstance.resetState(CheckLoadingType.isWebSocketOpen)\r\n                break;\r\n                // case CommandType.ssntf://系統通知\r\n                //     // Panel_Message.showConfirm(this, 0, message)\r\n                //     break;\r\n                // case CommandType.sschk://逾時檢查\r\n                //     break;\r\n                // default:\r\n                //     message = this.serverErrorCode(data.code)\r\n\r\n                break;\r\n        }\r\n        this.messaggeState(cmd, message);\r\n    }\r\n    messaggeState(cmd: string = \"\", caption: string) {\r\n        // console.log(caption, cmd);\r\n        let transformStr = this.serverErrorCode(caption)//error code代碼轉換文字\r\n        switch (cmd) {\r\n            case MessageCommend.BackHome:\r\n                MessageState.getInstance.transitionTo_Old(new BackHomeMessage(), transformStr).requestChange();\r\n                break;\r\n            case CommandType.excr:\r\n            case CommandType.excc:\r\n                MessageState.getInstance.transitionTo_Old(new ShowConfirmMessage(), transformStr).requestChange();\r\n                PanelLoading.instance.closeLoading()\r\n                break\r\n            default:\r\n                MessageState.getInstance.transitionTo_Old(new ShowConfirmMessage(), transformStr).requestChange();\r\n                break;\r\n        }\r\n\r\n    }\r\n    serverErrorCode(code: string) {\r\n        if (isNaN(Number(code)))\r\n            return code\r\n        else\r\n            return SocketSetting.t(code, LangType.Server);\r\n\r\n    }\r\n    resetView() {\r\n        switch (PublicData.getInstance.currentScene) {\r\n            case GameSceneName.Lobby:\r\n                ViewState.getInstance.transitionTo(LobbyCloseView)\r\n                break\r\n            case GameSceneName.GameRoom:\r\n                ViewState.getInstance.transitionTo(GameCloseView)\r\n                break\r\n        }\r\n\r\n    }\r\n\r\n    resetWait() {\r\n        switch (PublicData.getInstance.currentScene) {\r\n            case GameSceneName.Lobby:\r\n                ViewState.getInstance.transitionTo(LobbyOpenView)\r\n                break\r\n            case GameSceneName.GameRoom:\r\n                ViewState.getInstance.transitionTo(GameOpenView)\r\n                break\r\n        }\r\n    }\r\n\r\n\r\n}\r\n"]}
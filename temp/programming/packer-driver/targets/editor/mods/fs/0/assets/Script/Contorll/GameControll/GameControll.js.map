{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/GameControll/GameControll.ts"],"names":["GameControll","Game","game","CommandType","GameEvent","EventMng","PublicData","LobbyState","MessageState","PlayerState","AccountLogIn","BackHomeMessage","ShowConfirmMessage","MessageCommend","LangType","BaseSingleton","SocketSetting","NotificationType","ChooeseBall","setControllEvent","on","EVENT_HIDE","resetView","bind","EVENT_SHOW","resetWait","getInstance","mapEvnet","get","Pulic","ControllSandCommend","serverRespond","cmd","data","code","messaggeState","ln","lobbyState","bet","playState","transitionTo","checkError","message","serverErrorCode","caption","transformStr","BackHome","transitionTo_Old","requestChange","isNaN","Number","t","Server","currentScene"],"mappings":"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","sourcesContent":["import { CommandType } from \"../../Enum/CommandType\";\r\nimport { GameEvent } from \"../../Enum/GameEvent\";\r\nimport EventMng from \"../../Manager/EventMng\";\r\nimport PublicData from \"../../Model/PublicData\";\r\nimport { GameState, LobbyState, MessageState, PlayerState, ViewState } from \"../../../Patten/StatePatten\";\r\nimport { AccountLogIn } from \"../../State/LobbyState\";\r\nimport { BackHomeMessage, ShowConfirmMessage } from \"../../State/MessageState\";\r\nimport { MessageCommend } from \"../../Enum/MessageCommend\";\r\nimport { LangType } from \"../../Enum/LangType\";\r\nimport { ServerGameSenceType } from \"../../Enum/ServerGameSenceType\";\r\nimport BaseSingleton from \"../../../Patten/Singleton/BaseSingleton\";\r\nimport SocketSetting from \"../../Socket/SocketSetting\";\r\nimport { Game, game } from \"cc\";\r\nimport { GameSceneName } from \"../../Enum/GameSenceName\";\r\nimport RoomData from \"../../Model/RoomData\";\r\nimport PanelLoading from \"../NoClearNode/PanelLoading\";\r\nimport { GameStateEvent } from \"../../Enum/GameStateEvent\";\r\nimport GameSenceText from \"../../Model/GameSenceText\";\r\nimport GameData from \"../../Model/GameData\";\r\nimport CheckLoading from \"../../Model/CheckLoading\";\r\nimport { CheckLoadingType } from \"../../Enum/CheckLoadingType\";\r\nimport { NotificationType } from \"../../Enum/NotificationType\";\r\nimport { ChooeseBall } from \"../../State/PlayState\";\r\n\r\nexport default class GameControll extends BaseSingleton<GameControll>() {\r\n    //利用推波方式去call Function \r\n    setControllEvent() {\r\n        game.on(Game.EVENT_HIDE, this.resetView.bind(this))\r\n        game.on(Game.EVENT_SHOW, this.resetWait.bind(this))\r\n        EventMng.getInstance.mapEvnet.get(NotificationType.Pulic).on(GameEvent.ControllSandCommend, this.serverRespond, this)\r\n    }\r\n    serverRespond(cmd: string, data: any) {\r\n        // console.log(cmd, data);\r\n        if (data.code && data.code != 0) {\r\n            this.messaggeState(cmd, data.code)\r\n\r\n            // if (data.code > 0)   // console.log(\"出現錯誤啦!!!!!!!!!!\");\r\n            //     return;\r\n        }\r\n        // console.log(cmd);\r\n        // console.log(MainModel.isResetView);\r\n        switch (cmd) {\r\n            case CommandType.ln:\r\n                this.lobbyState(cmd, data)\r\n                break;\r\n            case CommandType.bet:\r\n                this.playState(cmd, data)\r\n                break;\r\n\r\n\r\n        }\r\n    }\r\n\r\n    lobbyState(cmd: string, data: any) {\r\n        switch (cmd) {\r\n            case CommandType.ln:\r\n                LobbyState.getInstance.transitionTo(AccountLogIn, data)\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    playState(cmd: string, data: any) {\r\n        switch (cmd) {\r\n            case CommandType.bet:\r\n                PlayerState.getInstance.transitionTo(ChooeseBall, data)\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    checkError(cmd: string, data: any) {\r\n        let message: string;\r\n        message = this.serverErrorCode(data.code)\r\n        switch (cmd) {\r\n            // case CommandType.ssdis://系統踢出\r\n            //     CheckLoading.getInstance.resetState(CheckLoadingType.isWebSocketOpen)\r\n            //     break;\r\n            // case CommandType.ssntf://系統通知\r\n            //     // Panel_Message.showConfirm(this, 0, message)\r\n            //     break;\r\n            // case CommandType.sschk://逾時檢查\r\n            //     break;\r\n            // default:\r\n            //     message = this.serverErrorCode(data.code)\r\n\r\n            // break;\r\n        }\r\n        this.messaggeState(cmd, message);\r\n    }\r\n    messaggeState(cmd: string = \"\", caption: string) {\r\n        // console.log(caption, cmd);\r\n        let transformStr = this.serverErrorCode(caption)//error code代碼轉換文字\r\n        switch (cmd) {\r\n            case MessageCommend.BackHome:\r\n                MessageState.getInstance.transitionTo_Old(new BackHomeMessage(), transformStr).requestChange();\r\n                break;\r\n\r\n            default:\r\n                MessageState.getInstance.transitionTo_Old(new ShowConfirmMessage(), transformStr).requestChange();\r\n                break;\r\n        }\r\n\r\n    }\r\n    serverErrorCode(code: string) {\r\n        if (isNaN(Number(code)))\r\n            return code\r\n        else\r\n            return SocketSetting.t(code, LangType.Server);\r\n\r\n    }\r\n    resetView() {\r\n        switch (PublicData.getInstance.currentScene) {\r\n            // case GameSceneName.Lobby:\r\n            //     ViewState.getInstance.transitionTo(LobbyCloseView)\r\n            //     break\r\n            // case GameSceneName.GameRoom:\r\n            //     ViewState.getInstance.transitionTo(GameCloseView)\r\n            //     break\r\n        }\r\n\r\n    }\r\n\r\n    resetWait() {\r\n        switch (PublicData.getInstance.currentScene) {\r\n            // case GameSceneName.Lobby:\r\n            //     ViewState.getInstance.transitionTo(LobbyOpenView)\r\n            //     break\r\n            // case GameSceneName.GameRoom:\r\n            //     ViewState.getInstance.transitionTo(GameOpenView)\r\n            //     break\r\n        }\r\n    }\r\n\r\n\r\n}\r\n"]}
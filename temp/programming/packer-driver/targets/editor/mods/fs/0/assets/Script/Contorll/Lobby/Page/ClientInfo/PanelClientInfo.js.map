{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/Lobby/Page/ClientInfo/PanelClientInfo.ts"],"names":["assetManager","Button","Label","Sprite","SpriteFrame","_decorator","BaseComponent","Player","RequestGPG","EventMng","NotificationType","LobbyStateEvent","PublicData","PanelLoading","PublicModel","CreateFileSprite","EditMenu","ccclass","property","PanelClientInfo","onLoad","show","isNeedUpdate","isLoading","getInstance","mapEvnet","get","Panel","on","EditUpdate","onEditUpData","labelEmail","string","labelPhone","labelNickName","onEnable","instance","closeLoading","startDelay","body","Body","NeedToken","MyInfo","sign","convertMD5","gpgApi","convert","URLSearchParams","toString","Request","setToken","gpgToken","fetchData","APIUrl","playAPI","API","responseMyInfo","bind","onDisable","onEditTarget","e","customEventData","closeButton","Number","Nickname","emit","EditNickname","Phone","EditPhone","Email","EditEmail","str","type","checkStringNull","resetButton","onUpdateNickName","onUpdatePhone","onUpdateEmail","onSelectPhoto","onUploadAvatar","_spriteFrame","file","fileData","FormData","append","setMethod","Method","POST","deletContentType","setBody","UploadAvatar","response","responseUploadAvatar","console","log","Status","Code","spritePlayer","spriteFrame","gpgInfo","loadRemote","data","photo","headPhoto","err","image","error","message","createWithImage","stopDelay","setTimeout","nickName","split","buttonEditPhone","node","active","phoneNumber","buttonEditEmail","email","buttonEditNickname","buttonEditPicture"],"mappings":"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","sourcesContent":["import { absMax, assetManager, Button, EventTouch, ImageAsset, Label, Node, Sprite, SpriteFrame, sys, _decorator } from 'cc';\r\nimport BaseComponent from '../../../../Model/ComponentBase';\r\nimport Player from '../../../../Model/Player';\r\nimport { RequestGPG } from '../../../Api/GPGAPI/RequestGPG';\r\nimport { ResponseGPG } from '../../../Api/GPGAPI/ResponseGPG';\r\nimport CryptoES from 'crypto-es';\r\nimport EventMng from '../../../../Manager/EventMng';\r\nimport { NotificationType } from '../../../../Enum/NotificationType';\r\nimport { LobbyStateEvent } from '../../../../Enum/LobbyStateEvent';\r\nimport PublicData from '../../../../Model/PublicData';\r\nimport PanelLoading from '../../../NoClearNode/PanelLoading';\r\nimport PublicModel from '../../../../Model/PublicModel';\r\nimport CreateFileSprite from '../../../../Model/CreateFileSprite';\r\nimport { EditMenu } from '../../../../Enum/EditMenu';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('PanelClientInfo')\r\nexport default class PanelClientInfo extends BaseComponent {\r\n    isNeedUpdate: boolean = true;\r\n    isLoading: boolean = false;\r\n    @property(Sprite)\r\n    spritePlayer: Sprite;\r\n    @property(Label)\r\n    labelPhone: Label\r\n    @property(Label)\r\n    labelNickName: Label\r\n    @property(Label)\r\n    labelEmail: Label\r\n    @property(Button)\r\n    buttonEditNickname: Button;\r\n    @property(Button)\r\n    buttonEditPhone: Button;\r\n    @property(Button)\r\n    buttonEditEmail: Button;\r\n    @property(Button)\r\n    buttonEditPicture: Button;\r\n    labelBetCount: Label;\r\n    labelPointCount: Label;\r\n    labelRank: Label;\r\n\r\n\r\n\r\n    onLoad() {\r\n        super.onLoad()\r\n        this.show()\r\n        this.isNeedUpdate = true;\r\n        this.isLoading = false;\r\n        EventMng.getInstance.mapEvnet.get(NotificationType.Panel).on(LobbyStateEvent.EditUpdate, this.onEditUpData, this)\r\n        this.labelEmail.string = \"\"\r\n        this.labelPhone.string = \"\"\r\n        this.labelNickName.string = \"\"\r\n    }\r\n    async onEnable() {\r\n        if (!this.isNeedUpdate || this.isLoading) {\r\n            PanelLoading.instance.closeLoading()\r\n            return;\r\n        }\r\n        this.isLoading = true\r\n        this.startDelay()\r\n        const body = new RequestGPG.Body.NeedToken.MyInfo()\r\n        body.sign = PublicModel.getInstance.convertMD5(PublicData.getInstance.gpgApi)\r\n        let convert = new URLSearchParams(body).toString()\r\n        await new RequestGPG.Request()\r\n            .setToken(Player.getInstance.gpgToken)\r\n            .fetchData(`${RequestGPG.APIUrl.playAPI}${RequestGPG.API.MyInfo}?${convert}`, this.responseMyInfo.bind(this))\r\n\r\n        this.isLoading = false\r\n    }\r\n    onDisable() {\r\n\r\n    }\r\n    onEditTarget(e: EventTouch, customEventData?: string) {\r\n        this.closeButton()\r\n        switch (Number(customEventData)) {\r\n            case EditMenu.Nickname:\r\n                EventMng.getInstance.mapEvnet.get(NotificationType.Panel).emit(LobbyStateEvent.EditNickname)\r\n                break;\r\n            case EditMenu.Phone:\r\n                EventMng.getInstance.mapEvnet.get(NotificationType.Panel).emit(LobbyStateEvent.EditPhone)\r\n                break;\r\n            case EditMenu.Email:\r\n                EventMng.getInstance.mapEvnet.get(NotificationType.Panel).emit(LobbyStateEvent.EditEmail)\r\n                break;\r\n        }\r\n    }\r\n    onEditUpData(str: string, type: EditMenu) {\r\n        if (!PublicModel.getInstance.checkStringNull(str)) {\r\n            switch (type) {\r\n                case EditMenu.Nickname:\r\n                    this.labelNickName.string = str\r\n                    break;\r\n                case EditMenu.Phone:\r\n                    this.labelPhone.string = str\r\n                    break;\r\n                case EditMenu.Email:\r\n                    this.labelEmail.string = str\r\n                    break;\r\n            }\r\n        }\r\n        this.resetButton()\r\n        PanelLoading.instance.closeLoading()\r\n    }\r\n    onUpdateNickName(str: string) {\r\n        if (!PublicModel.getInstance.checkStringNull(str))\r\n            this.labelNickName.string = str\r\n\r\n    }\r\n    onUpdatePhone(str: string) {\r\n        if (!PublicModel.getInstance.checkStringNull(str))\r\n            this.labelNickName.string = str\r\n        this.resetButton()\r\n        PanelLoading.instance.closeLoading()\r\n    }\r\n    onUpdateEmail(str: string) {\r\n        if (!PublicModel.getInstance.checkStringNull(str))\r\n            this.labelNickName.string = str\r\n        this.resetButton()\r\n        PanelLoading.instance.closeLoading()\r\n    }\r\n    onSelectPhoto() {\r\n        new CreateFileSprite(this.onUploadAvatar.bind(this))\r\n    }\r\n    async onUploadAvatar(_spriteFrame: SpriteFrame, file: File) {\r\n        // PublicModel.getInstance.convertByteToBinary(PublicModel.getInstance._base64ToBytes(base64))\r\n        let fileData = new FormData()\r\n        fileData.append('file', file)\r\n        await new RequestGPG.Request()\r\n            .setMethod(RequestGPG.Method.POST)\r\n            .deletContentType()\r\n            .setBody(fileData)\r\n            .setToken(Player.getInstance.gpgToken)\r\n            .fetchData(`${RequestGPG.APIUrl.playAPI}${RequestGPG.API.UploadAvatar}`, (response: ResponseGPG.UploadAvatar.DataClass) => {\r\n                this.responseUploadAvatar(response, _spriteFrame)\r\n            })\r\n    }\r\n    responseUploadAvatar(response: ResponseGPG.UploadAvatar.DataClass, _spriteFrame: SpriteFrame) {\r\n        console.log(\"圖片上傳成功?\", response);\r\n        if (response.Status.Code == \"0\")\r\n            this.spritePlayer.spriteFrame = _spriteFrame\r\n    }\r\n    async responseMyInfo(response: ResponseGPG.MyInfo.DataClass) {\r\n        console.log(\"MyInfo\", response)\r\n        Player.getInstance.gpgInfo = response;\r\n        // response.data.photo\r\n        // console.log(Player.getInstance.gpgInfo);\r\n        assetManager.loadRemote(response.data.photo.headPhoto, (err, image: ImageAsset) => {\r\n            if (err) {\r\n                console.error(err.message);\r\n                return\r\n            }\r\n            this.isNeedUpdate = false;\r\n            this.spritePlayer.spriteFrame = SpriteFrame.createWithImage(image)\r\n            if (this.stopDelay() < 1)\r\n                setTimeout(PanelLoading.instance.closeLoading.bind(PanelLoading.instance), 1000);\r\n            else\r\n                PanelLoading.instance.closeLoading()\r\n        })\r\n        this.labelNickName.string = response.data.nickName.split(\"_\")[1]/**因為前面會有註冊會員的文字，要刪除掉 */\r\n        this.buttonEditPhone.node.active = PublicModel.getInstance.checkStringNull(response.data.phoneNumber);\r\n        this.labelPhone.string = PublicModel.getInstance.checkStringNull(response.data.phoneNumber) ? \"\" : response.data.phoneNumber\r\n        this.buttonEditEmail.node.active = PublicModel.getInstance.checkStringNull(response.data.email);\r\n        this.labelEmail.string = PublicModel.getInstance.checkStringNull(response.data.email) ? \"\" : response.data.email\r\n    }\r\n\r\n    resetButton() {\r\n        this.buttonEditNickname.node.active = true\r\n        this.buttonEditPicture.node.active = true\r\n        this.buttonEditPhone.node.active = PublicModel.getInstance.checkStringNull(this.labelPhone.string);\r\n        this.buttonEditEmail.node.active = PublicModel.getInstance.checkStringNull(this.labelEmail.string);\r\n    }\r\n    closeButton() {\r\n        this.buttonEditPicture.node.active = false\r\n        this.buttonEditNickname.node.active = false\r\n        this.buttonEditPhone.node.active = false\r\n        this.buttonEditEmail.node.active = false\r\n    }\r\n}\r\n"]}
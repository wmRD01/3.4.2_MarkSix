{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/Lobby/Page/ClientInfo/PanelClientInfo.ts"],"names":["assetManager","Label","Sprite","SpriteFrame","_decorator","BaseComponent","Player","RequestGPG","CryptoES","ccclass","property","PanelClientInfo","start","isData","isLoading","onEnable","Request","setToken","getInstance","gpgToken","fetchData","responseMyInfo","bind","onValidateContactInfo","onDisable","body","Body","NotNeedToken","ValidateContactInfo","Email","setMethod","Method","POST","setBody","JSON","stringify","responseValidateContactInfo","onCertification","NeedToken","CertifiedEmail","email","verifyCode","tempText","string","_temp","temp","dataWithApiKey","URLSearchParams","toString","console","log","MD5","sign","responseSendLoginVerification","response","Status","Code","sendBody","SendLoginVerification","gppInfo","loadRemote","err","image","error","message","spritePlayer","spriteFrame","createWithImage"],"mappings":"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","sourcesContent":["import { assetManager, ImageAsset, Label, Sprite, SpriteFrame, sys, _decorator } from 'cc';\r\nimport BaseComponent from '../../../../Model/ComponentBase';\r\nimport Player from '../../../../Model/Player';\r\nimport { RequestGPG } from '../../../Api/GPGAPI/RequestGPG';\r\nimport { ResponseGPG } from '../../../Api/GPGAPI/ResponseGPG';\r\nimport CryptoES from 'crypto-es';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('PanelClientInfo')\r\nexport default class PanelClientInfo extends BaseComponent {\r\n    isData: boolean = false;\r\n    isLoading: boolean = false;\r\n    @property(Sprite)\r\n    spritePlayer: Sprite;\r\n    @property(Label)\r\n    labelPlayerName: Label\r\n    @property(Label)\r\n    labelNickName: Label\r\n    @property(Label)\r\n    tempText: Label;\r\n\r\n    start() {\r\n\r\n        this.isData = false;\r\n        this.isLoading = false;\r\n\r\n        // console.log(sys.browserType, sys.os);\r\n        // console.log(md5(\"12315235\"));\r\n\r\n    } async onEnable() {\r\n        if (this.isData || this.isLoading) return;\r\n        this.isLoading = true\r\n\r\n        await new RequestGPG.Request()\r\n            .setToken(Player.getInstance.gpgToken)\r\n            .fetchData(\"https://play-api.ceis.tw/Member/MyInfo?sign=47b436c2cad162edc9a8035afc3c673f\", this.responseMyInfo.bind(this))\r\n        this.onValidateContactInfo()\r\n        this.isLoading = false\r\n    }\r\n    onDisable() {\r\n\r\n    }\r\n    /**進行發送驗證碼時，必須先通過確認手機是否被註冊過，確認沒有驗證過就會SendLog */\r\n    async onValidateContactInfo() {\r\n        /** */\r\n        let body = new RequestGPG.Body.NotNeedToken.ValidateContactInfo()\r\n        body.Email = \"wm.rd01@gmail.com\"\r\n        await new RequestGPG.Request()\r\n            .setMethod(RequestGPG.Method.POST)\r\n            .setBody(JSON.stringify(body))\r\n            .fetchData(\"https://ids.ceis.tw/Token/ValidateContactInfo\", this.responseValidateContactInfo.bind(this))\r\n\r\n    }\r\n    /**送出前須確認驗證碼的正確性，但前題是他必須得先需要註冊信箱時才會接這個function */\r\n    async onCertification() {\r\n        const body = new RequestGPG.Body.NeedToken.CertifiedEmail()\r\n        body.email = \"wm.rd01@gmail.com\"\r\n        body.verifyCode = this.tempText.string\r\n        // 合併 data 和 apiKey\r\n        const _temp = new RequestGPG.Body.NeedToken.temp()\r\n        _temp.email = \"wm.rd01@gmail.com\"\r\n        _temp.verifyCode = this.tempText.string\r\n        const dataWithApiKey = new URLSearchParams(_temp).toString() + \"5gh394D\";\r\n        console.log(dataWithApiKey);\r\n        console.log(CryptoES.MD5(dataWithApiKey).toString());\r\n        body.sign = CryptoES.MD5(dataWithApiKey).toString()\r\n        console.log(body);\r\n\r\n        await new RequestGPG.Request()\r\n            .setMethod(RequestGPG.Method.POST)\r\n            .setToken(Player.getInstance.gpgToken)\r\n            .setBody(JSON.stringify(body))\r\n            .fetchData(\"https://play-api.ceis.tw/Member/CertifiedEmail\", this.responseSendLoginVerification.bind(this))\r\n\r\n    }\r\n\r\n    async responseValidateContactInfo(response: ResponseGPG.ValidateContactInfo.DataClass) {\r\n        console.log(\"ValidateContactInfo\", response)\r\n        /**代表此已經綁定過不可以綁定! */\r\n        if (response.Status.Code == \"0\") {\r\n            console.log(\"已存在請重新換組\");\r\n            return;\r\n\r\n        }\r\n        else {\r\n            console.log(\"恭喜信箱不存在，可繼續註冊\");\r\n            //*要改成手動送驗證碼\r\n            const sendBody = new RequestGPG.Body.NotNeedToken.SendLoginVerification()\r\n            sendBody.Email = \"wm.rd01@gmail.com\"\r\n            await new RequestGPG.Request()\r\n                .setMethod(RequestGPG.Method.POST)\r\n                .setBody(JSON.stringify(sendBody))\r\n                .fetchData(\"https://ids.ceis.tw/Token/SendRegisterVerification\", this.responseSendLoginVerification.bind(this))\r\n        }\r\n\r\n    }\r\n    async responseMyInfo(response: ResponseGPG.MyInfo.DataClass) {\r\n        console.log(\"MyInfo\", response)\r\n        Player.getInstance.gppInfo = response;\r\n        // response.data.photo\r\n        assetManager.loadRemote(\"https://img.ceis.tw/Member/Avatar/2.jpg\", (err, image: ImageAsset) => {\r\n            if (err) {\r\n                console.error(err.message);\r\n                return\r\n            }\r\n            this.spritePlayer.spriteFrame = SpriteFrame.createWithImage(image)\r\n            // this.labelNickName.string= response.data.nickName\r\n            // this.labelPlayerName.string= response.data.\r\n            this.isData = true;\r\n        })\r\n\r\n    }\r\n    /**驗證碼發送是否成功 */\r\n    responseSendLoginVerification(response: ResponseGPG.SendLoginVerification.DataClass) {\r\n        console.log(\"SendRegisterVerification\", response)\r\n        if (response.Status.Code == \"0\") {\r\n            console.log(\"過關惹\");\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\n"]}
{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/Lobby/Page/Point/PanelPoint.ts"],"names":["instantiate","Node","Prefab","ScrollView","Vec3","_decorator","BaseComponent","PointItemData","AssetType","AssetMng","RequestGPG","Player","PublicModel","PanelLoading","PublicData","LobbyStateEvent","ccclass","property","PanelPoint","Map","start","waitStateCheck","Sprite","layoutContent","removeAllChildren","scrollview","node","on","EventType","SCROLL_TO_BOTTOM","onViewBottom","setEvent","NextIssueID","reset","onEnable","children","length","maxCount","returnFunction","active","requestHistory","count","Promise","resolve","reject","body","Body","NeedToken","DrawHistory","top","toString","sign","getInstance","convertSign","convert","URLSearchParams","Request","setToken","gpgToken","fetchData","gpgUrlPlayApi","API","responseDrawHistory","bind","response","console","log","currentCount","data","isDateMax","index","mapDate","set","Number","issueID","ClientData","_node","item","_class","getComponent","setPosition","ZERO","addChild","setLabelContent","labelContent","setOutlineContent","OutlineContent","setDayData","openDate","setOpenNumber","drawCode","init","requesBetlog","Betlog","getDate","convertDateDiff","today","sDate","getFullYear","getMonth","eDate","split","responseBetlog","has","get","setSelfNumber","betCode","setScore","score","_scrollview","isAsync","tryGet","pageCount","instance","closeLoading"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,W,OAAAA,W;AAAaC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,U,OAAAA,U;AAAYC,MAAAA,I,OAAAA,I;AAAiBC,MAAAA,U,OAAAA,U;;AAC1DC,MAAAA,a;;AACAC,MAAAA,a;;AACEC,MAAAA,S,iBAAAA,S;;AACFC,MAAAA,Q;;AAEEC,MAAAA,U,iBAAAA,U;;AACFC,MAAAA,M;;AACAC,MAAAA,W;;AAEAC,MAAAA,Y;;AACAC,MAAAA,U;;AACEC,MAAAA,e,kBAAAA,e;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBZ,U,GAC9B;;yBAEqBa,U,WADpBF,OAAO,CAAC,YAAD,C,UAEHC,QAAQ,CAACf,MAAD,C,UAERe,QAAQ,CAAChB,IAAD,C,UAERgB,QAAQ,CAAChB,IAAD,C,UAERgB,QAAQ,CAAChB,IAAD,C,UAMRgB,QAAQ,CAACd,UAAD,C,qCAdb,MACqBe,UADrB;AAAA;AAAA,0CACsD;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,4CAS/B,EAT+B;;AAAA,6CAW9B,EAX8B;;AAAA,gDAY3B,CAZ2B;;AAAA;;AAAA;;AAAA;;AAAA,2CAiBZ,IAAIC,GAAJ,EAjBY;AAAA;;AAkBvC,cAALC,KAAK,GAAG;AACV,gBAAM;AAAA;AAAA,oCAASC,cAAT,CAAwB;AAAA;AAAA,sCAAUC,MAAlC,CAAN;AACA,eAAKC,aAAL,CAAmBC,iBAAnB;AAGA,eAAKC,UAAL,CAAgBC,IAAhB,CAAqBC,EAArB,CAAwBxB,UAAU,CAACyB,SAAX,CAAqBC,gBAA7C,EAA+D,KAAKC,YAApE,EAAkF,IAAlF;AACA,eAAKC,QAAL,CAAc;AAAA;AAAA,kDAAgBC,WAA9B,EAA2C,KAAKC,KAAhD;AACH;;AACDC,QAAAA,QAAQ,GAAG;AAEP,cAAI,KAAKX,aAAL,CAAmBY,QAAnB,CAA4BC,MAA5B,GAAqC,KAAKC,QAA9C,EAAwD,KAAKC,cAAL;;AACxD,cAAI,KAAKf,aAAL,CAAmBY,QAAnB,CAA4BC,MAA5B,IAAsC,CAA1C,EAA6C;AACzC,iBAAKN,YAAL;AACH,WAFD,MAGK,KAAKQ,cAAL;AACR;;AACDL,QAAAA,KAAK,GAAG;AACJ,eAAKV,aAAL,CAAmBC,iBAAnB;;AACA,cAAI,KAAKE,IAAL,CAAUa,MAAd,EAAsB;AAClB,iBAAKT,YAAL;AACH;AACJ,SAvCiD,CAwClD;;;AACoB,cAAdU,cAAc,CAACC,KAAD,EAAgB;AAChC,iBAAO,IAAIC,OAAJ,CAAkB,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAChD,kBAAMC,IAAI,GAAG,IAAI;AAAA;AAAA,0CAAWC,IAAX,CAAgBC,SAAhB,CAA0BC,WAA9B,EAAb;AACAH,YAAAA,IAAI,CAACI,GAAL,GAAWR,KAAK,CAACS,QAAN,EAAX,CAFgD,CAErB;;AAC3BL,YAAAA,IAAI,CAACM,IAAL,GAAY;AAAA;AAAA,4CAAYC,WAAZ,CAAwBC,WAAxB,CAAoCR,IAApC,EAA0C;AAAA;AAAA,0CAAWC,IAAX,CAAgBC,SAAhB,CAA0BC,WAApE,CAAZ;AACA,gBAAIM,OAAO,GAAG,IAAIC,eAAJ,CAAoBV,IAApB,EAA0BK,QAA1B,EAAd;AACA,kBAAM,IAAI;AAAA;AAAA,0CAAWM,OAAf,GACDC,QADC,CACQ;AAAA;AAAA,kCAAOL,WAAP,CAAmBM,QAD3B,EAEDC,SAFC,CAEU,GAAE;AAAA;AAAA,0CAAWP,WAAX,CAAuBQ,aAAc,GAAE;AAAA;AAAA,0CAAWC,GAAX,CAAeb,WAAY,IAAGM,OAAQ,EAFzF,EAE4F,KAAKQ,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAF5F,CAAN;AAGApB,YAAAA,OAAO;AACV,WATM,CAAP;AAUH;;AACDmB,QAAAA,mBAAmB,CAACE,QAAD,EAA+C;AAC9DC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,QAApB;;AAEA,cAAI,KAAKG,YAAL,IAAqBH,QAAQ,CAACI,IAAT,CAAchC,MAAvC,EAA+C;AAC3C,iBAAKiC,SAAL,GAAiB,IAAjB;AACA;AACH;;AACD,eAAK,IAAIC,KAAK,GAAG,KAAKH,YAAtB,EAAoCG,KAAK,GAAGN,QAAQ,CAACI,IAAT,CAAchC,MAA1D,EAAkEkC,KAAK,EAAvE,EAA2E;AACvE,gBAAI,KAAK/C,aAAL,CAAmBY,QAAnB,CAA4BC,MAA5B,GAAqC,KAAKC,QAA9C,EAAwD;AACxD,iBAAKkC,OAAL,CAAaC,GAAb,CAAiBC,MAAM,CAACT,QAAQ,CAACI,IAAT,CAAcE,KAAd,EAAqBI,OAAtB,CAAvB,EAAuD,KAAKC,UAAL,CAAgBX,QAAQ,CAACI,IAAT,CAAcE,KAAd,CAAhB,CAAvD;AACH;;AACD,eAAKH,YAAL,GAAoBH,QAAQ,CAACI,IAAT,CAAchC,MAAlC;AACH;;AACDuC,QAAAA,UAAU,CAACP,IAAD,EAAwC;AAC9C,cAAIQ,KAAK,GAAG5E,WAAW,CAAC,KAAK6E,IAAN,CAAvB;;AACA,cAAIC,MAAM,GAAGF,KAAK,CAACG,YAAN;AAAA;AAAA,6CAAb;;AAEAH,UAAAA,KAAK,CAACI,WAAN,CAAkB5E,IAAI,CAAC6E,IAAvB;;AACA,eAAK1D,aAAL,CAAmB2D,QAAnB,CAA4BN,KAA5B;;AACAE,UAAAA,MAAM,CACDK,eADL,CACqB,KAAKC,YAD1B,EAEKC,iBAFL,CAEuB,KAAKC,cAF5B,EAGKC,UAHL,CAGgBnB,IAAI,CAACoB,QAHrB,EAG+Bf,MAAM,CAACL,IAAI,CAACM,OAAN,CAHrC,EAIKe,aAJL,CAImBrB,IAAI,CAACsB,QAJxB,EAKKC,IALL;;AAMA,iBAAOb,MAAP;AACH,SA/EiD,CAgFlD;AAEA;;;AACkB,cAAZc,YAAY,CAACnD,KAAD,EAAgB;AAC9B,iBAAO,IAAIC,OAAJ,CAAkB,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAChD,kBAAMC,IAAI,GAAG,IAAI;AAAA;AAAA,0CAAWC,IAAX,CAAgBC,SAAhB,CAA0B8C,MAA9B,EAAb;AACA,kBAAMC,OAAO,GAAG;AAAA;AAAA,4CAAY1C,WAAZ,CAAwB2C,eAAxB,CAAwC;AAAA;AAAA,0CAAW3C,WAAX,CAAuB4C,KAA/D,EAAsE,CAAEvD,KAAxE,CAAhB;AACAI,YAAAA,IAAI,CAACoD,KAAL,GAAc,GAAEH,OAAO,CAACI,WAAR,EAAsB,IAAGJ,OAAO,CAACK,QAAR,KAAqB,CAAE,IAAGL,OAAO,CAACA,OAAR,EAAkB,EAArF;AACAjD,YAAAA,IAAI,CAACuD,KAAL,GAAa;AAAA;AAAA,0CAAWhD,WAAX,CAAuB4C,KAAvB,CAA6BK,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAAb;AACAxD,YAAAA,IAAI,CAACM,IAAL,GAAY;AAAA;AAAA,4CAAYC,WAAZ,CAAwBC,WAAxB,CAAoCR,IAApC,EAA0C;AAAA;AAAA,0CAAWC,IAAX,CAAgBC,SAAhB,CAA0B8C,MAApE,CAAZ;AACA,gBAAIvC,OAAO,GAAG,IAAIC,eAAJ,CAAoBV,IAApB,EAA0BK,QAA1B,EAAd;AACA,kBAAM,IAAI;AAAA;AAAA,0CAAWM,OAAf,GACDC,QADC,CACQ;AAAA;AAAA,kCAAOL,WAAP,CAAmBM,QAD3B,EAEDC,SAFC,CAEU,GAAE;AAAA;AAAA,0CAAWP,WAAX,CAAuBQ,aAAc,GAAE;AAAA;AAAA,0CAAWC,GAAX,CAAegC,MAAO,IAAGvC,OAAQ,EAFpF,EAEuF,KAAKgD,cAAL,CAAoBvC,IAApB,CAAyB,IAAzB,CAFvF,CAAN;AAGApB,YAAAA,OAAO;AACV,WAXM,CAAP;AAYH;;AACD2D,QAAAA,cAAc,CAACtC,QAAD,EAA0C;AACpDC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,QAApB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKK,OAAjB;;AAEA,eAAK,IAAID,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGN,QAAQ,CAACI,IAAT,CAAchC,MAA1C,EAAkDkC,KAAK,EAAvD,EAA2D;AACvD,gBAAI,CAAC,KAAKC,OAAL,CAAagC,GAAb,CAAiB9B,MAAM,CAACT,QAAQ,CAACI,IAAT,CAAcE,KAAd,EAAqBI,OAAtB,CAAvB,CAAL,EAA6D;AAC7D,iBAAKH,OAAL,CAAaiC,GAAb,CAAiB/B,MAAM,CAACT,QAAQ,CAACI,IAAT,CAAcE,KAAd,EAAqBI,OAAtB,CAAvB,EAAuD+B,aAAvD,CAAqEzC,QAAQ,CAACI,IAAT,CAAcE,KAAd,EAAqBoC,OAA1F;AACA,iBAAKnC,OAAL,CAAaiC,GAAb,CAAiB/B,MAAM,CAACT,QAAQ,CAACI,IAAT,CAAcE,KAAd,EAAqBI,OAAtB,CAAvB,EAAuDiC,QAAvD,CAAgE3C,QAAQ,CAACI,IAAT,CAAcE,KAAd,EAAqBsC,KAArF;AACH;AACJ,SA1GiD,CA2GlD;;;AAEkB,cAAZ9E,YAAY,CAAC+E,WAAD,EAA2B;AACzC,cAAI,KAAK1C,YAAL,IAAqB,KAAK9B,QAA9B,EAAwC,KAAKC,cAAL;AACxC,cAAI,KAAK+B,SAAT,EAAoB,KAAK/B,cAAL;AACpB,cAAI,KAAKwE,OAAT,EAAkB,KAAKxE,cAAL;AAClB,eAAKwE,OAAL,GAAe,IAAf;AACA;;AACA,cAAIC,MAAM,GAAG,KAAK5C,YAAL,GAAoB,KAAK6C,SAAtC;AACA,gBAAM,KAAKxE,cAAL,CAAoBuE,MAApB,CAAN;AACA,gBAAM,KAAKnB,YAAL,CAAkBmB,MAAlB,CAAN,CARyC,CAUzC;;AACA;AAAA;AAAA,4CAAaE,QAAb,CAAsBC,YAAtB;AACA,eAAKJ,OAAL,GAAe,KAAf;AACH;;AAEDxE,QAAAA,cAAc,GAAG;AACb;AAAA;AAAA,4CAAa2E,QAAb,CAAsBC,YAAtB;AACA;AACH;;AA/HiD,O","sourcesContent":["import { instantiate, Node, Prefab, ScrollView, Vec3, ViewGroup, _decorator } from 'cc';\r\nimport BaseComponent from '../../../../Model/ComponentBase';\r\nimport PointItemData from '../../../../Model/PointItemData';\r\nimport { AssetType } from '../../../../Enum/AssetType';\r\nimport AssetMng from '../../../../Manager/AssetMng';\r\nimport { NotificationType } from '../../../../Enum/NotificationType';\r\nimport { RequestGPG } from '../../../Api/GPGAPI/RequestGPG';\r\nimport Player from '../../../../Model/Player';\r\nimport PublicModel from '../../../../Model/PublicModel';\r\nimport { ResponseGPG } from '../../../Api/GPGAPI/ResponseGPG';\r\nimport PanelLoading from '../../../NoClearNode/PanelLoading';\r\nimport PublicData from '../../../../Model/PublicData';\r\nimport { LobbyStateEvent } from '../../../../Enum/LobbyStateEvent';\r\nconst { ccclass, property } = _decorator;\r\n//TODO 優化如果未選號，自動縮欄位\r\n@ccclass('PanelPoint')\r\nexport default class PanelPoint extends BaseComponent {\r\n    @property(Prefab)\r\n    item: Prefab\r\n    @property(Node)\r\n    layoutContent: Node;\r\n    @property(Node)\r\n    labelContent: Node;\r\n    @property(Node)\r\n    OutlineContent: Node;\r\n    maxCount: number = 30;\r\n    /**一次取得最多頁數 */\r\n    pageCount: number = 10;\r\n    currentCount: number = 0;\r\n    @property(ScrollView)\r\n    scrollview: ScrollView;\r\n    isAsync: boolean;\r\n    isDateMax: boolean;\r\n    mapDate: Map<number, PointItemData> = new Map()\r\n    async start() {\r\n        await AssetMng.waitStateCheck(AssetType.Sprite)\r\n        this.layoutContent.removeAllChildren()\r\n\r\n\r\n        this.scrollview.node.on(ScrollView.EventType.SCROLL_TO_BOTTOM, this.onViewBottom, this)\r\n        this.setEvent(LobbyStateEvent.NextIssueID, this.reset)\r\n    }\r\n    onEnable() {\r\n\r\n        if (this.layoutContent.children.length > this.maxCount) this.returnFunction()\r\n        if (this.layoutContent.children.length == 0) {\r\n            this.onViewBottom()\r\n        }\r\n        else this.returnFunction();\r\n    }\r\n    reset() {\r\n        this.layoutContent.removeAllChildren()\r\n        if (this.node.active) {\r\n            this.onViewBottom()\r\n        }\r\n    }\r\n    //#region History\r\n    async requestHistory(count: number) {\r\n        return new Promise<void>(async (resolve, reject) => {\r\n            const body = new RequestGPG.Body.NeedToken.DrawHistory()\r\n            body.top = count.toString()//目前固定10筆\r\n            body.sign = PublicModel.getInstance.convertSign(body, RequestGPG.Body.NeedToken.DrawHistory)\r\n            let convert = new URLSearchParams(body).toString()\r\n            await new RequestGPG.Request()\r\n                .setToken(Player.getInstance.gpgToken)\r\n                .fetchData(`${PublicData.getInstance.gpgUrlPlayApi}${RequestGPG.API.DrawHistory}?${convert}`, this.responseDrawHistory.bind(this))\r\n            resolve()\r\n        })\r\n    }\r\n    responseDrawHistory(response?: ResponseGPG.DrawHistory.DataClass) {\r\n        console.log(\"開獎紀錄\", response);\r\n\r\n        if (this.currentCount == response.data.length) {\r\n            this.isDateMax = true\r\n            return\r\n        }\r\n        for (let index = this.currentCount; index < response.data.length; index++) {\r\n            if (this.layoutContent.children.length > this.maxCount) break;\r\n            this.mapDate.set(Number(response.data[index].issueID), this.ClientData(response.data[index]))\r\n        }\r\n        this.currentCount = response.data.length;\r\n    }\r\n    ClientData(data: ResponseGPG.DrawHistory.History) {\r\n        let _node = instantiate(this.item)\r\n        let _class = _node.getComponent(PointItemData)\r\n\r\n        _node.setPosition(Vec3.ZERO)\r\n        this.layoutContent.addChild(_node)\r\n        _class\r\n            .setLabelContent(this.labelContent)\r\n            .setOutlineContent(this.OutlineContent)\r\n            .setDayData(data.openDate, Number(data.issueID))\r\n            .setOpenNumber(data.drawCode)\r\n            .init()\r\n        return _class\r\n    }\r\n    //#endregion\r\n\r\n    //#region Betlog\r\n    async requesBetlog(count: number) {\r\n        return new Promise<void>(async (resolve, reject) => {\r\n            const body = new RequestGPG.Body.NeedToken.Betlog()\r\n            const getDate = PublicModel.getInstance.convertDateDiff(PublicData.getInstance.today, -(count))\r\n            body.sDate = `${getDate.getFullYear()}-${getDate.getMonth() + 1}-${getDate.getDate()}`\r\n            body.eDate = PublicData.getInstance.today.split(\"T\")[0]\r\n            body.sign = PublicModel.getInstance.convertSign(body, RequestGPG.Body.NeedToken.Betlog)\r\n            let convert = new URLSearchParams(body).toString()\r\n            await new RequestGPG.Request()\r\n                .setToken(Player.getInstance.gpgToken)\r\n                .fetchData(`${PublicData.getInstance.gpgUrlPlayApi}${RequestGPG.API.Betlog}?${convert}`, this.responseBetlog.bind(this))\r\n            resolve()\r\n        })\r\n    }\r\n    responseBetlog(response?: ResponseGPG.Betlog.DataClass) {\r\n        console.log(\"玩家紀錄\", response);\r\n        console.log(this.mapDate);\r\n\r\n        for (let index = 0; index < response.data.length; index++) {\r\n            if (!this.mapDate.has(Number(response.data[index].issueID))) continue;\r\n            this.mapDate.get(Number(response.data[index].issueID)).setSelfNumber(response.data[index].betCode)\r\n            this.mapDate.get(Number(response.data[index].issueID)).setScore(response.data[index].score)\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n    async onViewBottom(_scrollview?: ScrollView) {\r\n        if (this.currentCount >= this.maxCount) this.returnFunction()\r\n        if (this.isDateMax) this.returnFunction()\r\n        if (this.isAsync) this.returnFunction()\r\n        this.isAsync = true;\r\n        /**新增請求筆數 */\r\n        let tryGet = this.currentCount + this.pageCount\r\n        await this.requestHistory(tryGet)\r\n        await this.requesBetlog(tryGet)\r\n\r\n        // console.error(\"超過會走這?\", this.currentCount);\r\n        PanelLoading.instance.closeLoading()\r\n        this.isAsync = false;\r\n    }\r\n\r\n    returnFunction() {\r\n        PanelLoading.instance.closeLoading()\r\n        return;\r\n    }\r\n}"]}
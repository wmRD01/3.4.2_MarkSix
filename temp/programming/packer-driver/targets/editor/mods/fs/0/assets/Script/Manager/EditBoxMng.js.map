{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Manager/EditBoxMng.ts"],"names":["MyEditBox","EventHandler","js","LisnerEditBox","addEvent","componentTrget","callBack","editboxTarget","type","callbackValue","findEvent","removeEvent","event","target","node","component","getClassName","handler","customEventData","retrunTypeArr","push","isFind","eventArr","index","length","checkEvent","splice","clearEvent","count","EditBox_Start","editingDidBegan","EditBox_Editing","textChanged","EditBox_Return","editingReturn","EditBox_End","editingDidEnded"],"mappings":"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","sourcesContent":["import { Component, EditBox, EventHandler, js, Node } from \"cc\";\r\nimport { LisnerEditBox } from \"../Enum/LisnerEditBox\";\r\n\r\nclass MyEditBox {\r\n    public addEvent(componentTrget: Component, callBack: string, editboxTarget: EditBox, type: LisnerEditBox, callbackValue?: string) {\r\n        if (this.findEvent(editboxTarget, callBack, type)) this.removeEvent(editboxTarget, callBack, type)\r\n        let event = new EventHandler();\r\n        event.target = componentTrget.node;\r\n        event.component = js.getClassName(componentTrget);\r\n        event.handler = callBack;\r\n        if (callbackValue)\r\n            event.customEventData = callbackValue\r\n        this.retrunTypeArr(editboxTarget, type).push(event)\r\n    }\r\n    public findEvent(editboxTarget: EditBox, callBack: string, type: LisnerEditBox) {\r\n        let isFind = false;\r\n        let eventArr = this.retrunTypeArr(editboxTarget, type)\r\n        for (let index = 0; index < eventArr.length; index++) {\r\n            if (eventArr[index].handler == callBack)\r\n                return isFind = true\r\n        }\r\n        return isFind;\r\n    }\r\n    public checkEvent(editboxTarget: EditBox, type: LisnerEditBox) {\r\n        let isFind = false;\r\n        let eventArr = this.retrunTypeArr(editboxTarget, type)\r\n        if (eventArr.length > 0) return isFind = true\r\n        else isFind\r\n    }\r\n\r\n    public removeEvent(editboxTarget: EditBox, callBack: string, type: LisnerEditBox) {\r\n        let eventArr = this.retrunTypeArr(editboxTarget, type)\r\n        for (let index = 0; index < eventArr.length; index++) {\r\n            if (eventArr[index].handler == callBack)\r\n                return eventArr.splice(index)\r\n        }\r\n    }\r\n    public clearEvent(editboxTarget: EditBox, type: LisnerEditBox) {\r\n        let eventArr = this.retrunTypeArr(editboxTarget, type)\r\n        let count = eventArr.length - 1\r\n        for (let index = count; 0 < eventArr.length; index++) {\r\n            eventArr.splice(index)\r\n        }\r\n    }\r\n    retrunTypeArr(editboxTarget: EditBox, type: LisnerEditBox) {\r\n        switch (type) {\r\n            case LisnerEditBox.EditBox_Start:\r\n                return editboxTarget.editingDidBegan;\r\n            case LisnerEditBox.EditBox_Editing:\r\n                return editboxTarget.textChanged;\r\n            case LisnerEditBox.EditBox_Return:\r\n                return editboxTarget.editingReturn;\r\n            case LisnerEditBox.EditBox_End:\r\n                return editboxTarget.editingDidEnded;\r\n        }\r\n    }\r\n}\r\nexport default new MyEditBox();"]}
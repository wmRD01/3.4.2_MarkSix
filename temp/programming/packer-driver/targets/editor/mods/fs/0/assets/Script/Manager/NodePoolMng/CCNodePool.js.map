{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Manager/NodePoolMng/CCNodePool.ts"],"names":["CCNodePool","instantiate","NodePool","constructor","name","nodeOrPrefab","count","pool","prefab","i","obj","getNode","put","getName","get","size","node","clear"],"mappings":";;;qDAGaA,U;;;;;;;;;;;;;;;AAFJC,MAAAA,W,OAAAA,W;AAAmBC,MAAAA,Q,OAAAA,Q;;;;;;;4BAEfF,U,GAAN,MAAMA,UAAN,CAAkC;AAQrC;AACJ;AACA;AACA;AACA;AACA;AACIG,QAAAA,WAAW,CAACC,IAAD,EAAeC,YAAf,EAA4CC,KAA5C,EAA2D;AAAA;;AAAA;;AAAA;;AAClE,eAAKF,IAAL,GAAYA,IAAZ;AACA,eAAKG,IAAL,GAAY,IAAIL,QAAJ,EAAZ;AACA,eAAKM,MAAL,GAAcH,YAAd;;AACA,eAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAApB,EAA2BG,CAAC,EAA5B,EAAgC;AAC5B,gBAAIC,GAAS,GAAG,KAAKC,OAAL,EAAhB;AACA,iBAAKJ,IAAL,CAAUK,GAAV,CAAcF,GAAd;AACH;AACJ;;AAEDG,QAAAA,OAAO,GAAG;AACN,iBAAO,KAAKT,IAAZ;AACH;;AAEDU,QAAAA,GAAG,GAAS;AACR,iBAAO,KAAKP,IAAL,CAAUQ,IAAV,KAAmB,CAAnB,GAAuB,KAAKR,IAAL,CAAUO,GAAV,EAAvB,GAAyC,KAAKH,OAAL,EAAhD;AACH;;AAEDA,QAAAA,OAAO,GAAG;AACN,cAAI,KAAKH,MAAT,EAAiB;AACb,mBAAOP,WAAW,CAAgB,KAAKO,MAArB,CAAlB;AACH,WAFD,MAEO;AACH;AACA,mBAAO,IAAP;AACH;AACJ;;AAEDO,QAAAA,IAAI,GAAG;AACH,iBAAO,KAAKR,IAAL,CAAUQ,IAAV,EAAP;AACH;;AAEDH,QAAAA,GAAG,CAACI,IAAD,EAAa;AACZ,eAAKT,IAAL,CAAUK,GAAV,CAAcI,IAAd;AACH;;AAEDC,QAAAA,KAAK,GAAG;AACJ,eAAKV,IAAL,CAAUU,KAAV;AACH;;AAnDoC,O","sourcesContent":["\r\nimport { instantiate, Node, NodePool, Prefab } from \"cc\";\r\nimport { IPool } from \"./IPool\";\r\nexport class CCNodePool implements IPool {\r\n\r\n    private pool: NodePool;\r\n\r\n    private readonly prefab: Prefab | Node;\r\n\r\n    private readonly name: string;\r\n\r\n    /**\r\n     *\r\n     * @param {string} name\r\n     * @param {Prefab | Node} nodeOrPrefab - 要建立的物件\r\n     * @param {number} count 初始化個數\r\n     */\r\n    constructor(name: string, nodeOrPrefab: Prefab | Node, count: number) {\r\n        this.name = name\r\n        this.pool = new NodePool();\r\n        this.prefab = nodeOrPrefab;\r\n        for (let i = 0; i < count; i++) {\r\n            let obj: Node = this.getNode() as Node;\r\n            this.pool.put(obj);\r\n        }\r\n    }\r\n\r\n    getName() {\r\n        return this.name\r\n    }\r\n\r\n    get(): Node {\r\n        return this.pool.size() > 0 ? this.pool.get() : this.getNode() as Node;\r\n    }\r\n\r\n    getNode() {\r\n        if (this.prefab) {\r\n            return instantiate<Node | Prefab>(this.prefab);\r\n        } else {\r\n            // console.error(' 預製體沒有賦值 ')\r\n            return null;\r\n        }\r\n    }\r\n\r\n    size() {\r\n        return this.pool.size();\r\n    }\r\n\r\n    put(node: Node) {\r\n        this.pool.put(node);\r\n    }\r\n\r\n    clear() {\r\n        this.pool.clear();\r\n    }\r\n\r\n}\r\n"]}
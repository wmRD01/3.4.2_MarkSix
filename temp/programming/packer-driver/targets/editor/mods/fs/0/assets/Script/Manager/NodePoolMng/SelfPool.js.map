{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Manager/NodePoolMng/SelfPool.ts"],"names":["SelfPool","Tween","constructor","pool","get","list","length","shift","getPool","size","put","node","nodePool","push","stopAllByTarget","active","clear"],"mappings":";;;qCAKaA,Q;;;;;;;;;;;;;;;;;;;AAJEC,MAAAA,K,OAAAA,K;;;;;;;0BAIFD,Q,GAAN,MAAMA,QAAN,CAAgC;AAMnCE,QAAAA,WAAW,CAACC,IAAD,EAAmB;AAAA,wCAJP,EAIO;;AAAA;;AAC1B,eAAKA,IAAL,GAAYA,IAAZ;AACH;;AAEDC,QAAAA,GAAG,GAAS;AACR,iBAAO,KAAKC,IAAL,CAAUC,MAAV,GAAmB,CAAnB,GAAuB,KAAKD,IAAL,CAAUE,KAAV,EAAvB,GAA2C,KAAKJ,IAAL,CAAUC,GAAV,EAAlD;AACH;;AAEDI,QAAAA,OAAO,GAAe;AAClB,iBAAO,KAAKL,IAAZ;AACH;;AAEDM,QAAAA,IAAI,GAAW;AACX,iBAAO,KAAKN,IAAL,CAAUM,IAAV,KAAmB,KAAKJ,IAAL,CAAUC,MAApC;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACII,QAAAA,GAAG,CAACC,IAAD,EAAaC,QAAiB,GAAG,KAAjC,EAA8C;AAC7C,cAAIA,QAAJ,EAAc;AACV,iBAAKT,IAAL,CAAUO,GAAV,CAAcC,IAAd;AACH,WAFD,MAEO;AACH,iBAAKN,IAAL,CAAUQ,IAAV,CAAeF,IAAf;AACAV,YAAAA,KAAK,CAACa,eAAN,CAAsBH,IAAtB;AACAA,YAAAA,IAAI,CAACI,MAAL,GAAc,KAAd;AACH;AACJ;;AAEDC,QAAAA,KAAK,GAAS;AACV,eAAKb,IAAL,CAAUa,KAAV;AACA,eAAKX,IAAL,CAAUC,MAAV,GAAmB,CAAnB;AACH;;AAxCkC,O","sourcesContent":["\r\nimport { Node, Tween } from \"cc\";\r\nimport { CCNodePool } from \"./CCNodePool\";\r\nimport { IPool } from \"./IPool\";\r\n\r\nexport class SelfPool implements IPool {\r\n\r\n    private list: Node[] = []\r\n\r\n    private readonly pool: CCNodePool;\r\n\r\n    constructor(pool: CCNodePool) {\r\n        this.pool = pool;\r\n    }\r\n\r\n    get(): Node {\r\n        return this.list.length > 0 ? this.list.shift() : this.pool.get();\r\n    }\r\n\r\n    getPool(): CCNodePool {\r\n        return this.pool\r\n    }\r\n\r\n    size(): number {\r\n        return this.pool.size() + this.list.length;\r\n    }\r\n\r\n    /**\r\n     * 將物件返回對象池中\r\n     * @param node\r\n     * @param nodePool 是否放入NodePool中\r\n     */\r\n    put(node: Node, nodePool: boolean = false): void {\r\n        if (nodePool) {\r\n            this.pool.put(node)\r\n        } else {\r\n            this.list.push(node);\r\n            Tween.stopAllByTarget(node)\r\n            node.active = false;\r\n        }\r\n    }\r\n\r\n    clear(): void {\r\n        this.pool.clear();\r\n        this.list.length = 0;\r\n    }\r\n}\r\n"]}
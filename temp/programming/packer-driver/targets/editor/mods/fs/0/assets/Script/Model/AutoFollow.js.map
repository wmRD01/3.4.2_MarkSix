{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Model/AutoFollow.ts"],"names":["Node","_decorator","BaseComponent","PublicModel","ccclass","property","AutoFollow","setTarget","_node","target","createNewTarget","node","parent","addChild","setPosition","position","setScale","scale","update","equals","getInstance","to2DConvertOtherNodeSpaceAR","active"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAoBA,MAAAA,I,OAAAA,I;AAAMC,MAAAA,U,OAAAA,U;;AACnBC,MAAAA,a;;AACAC,MAAAA,W;;;;;;;OACD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;yBAETK,U,WADpBF,OAAO,CAAC,iBAAD,C,yBAAR,MACqBE,UADrB;AAAA;AAAA,0CACsD;AAAA;AAAA;;AAAA;AAAA;;AAElDC,QAAAA,SAAS,CAACC,KAAD,EAAc;AACnB,eAAKC,MAAL,GAAcD,KAAd;AACH;;AACDE,QAAAA,eAAe,GAAG;AACd,eAAKD,MAAL,GAAc,IAAIT,IAAJ,EAAd;AACA,eAAKW,IAAL,CAAUC,MAAV,CAAiBC,QAAjB,CAA0B,KAAKJ,MAA/B;AACA,eAAKA,MAAL,CAAYK,WAAZ,CAAwB,KAAKH,IAAL,CAAUI,QAAlC;AACA,eAAKN,MAAL,CAAYO,QAAZ,CAAqB,KAAKL,IAAL,CAAUM,KAA/B;AACH;;AACDC,QAAAA,MAAM,GAAG;AACL,cAAI,KAAKP,IAAL,CAAUI,QAAV,CAAmBI,MAAnB,CAA0B;AAAA;AAAA,0CAAYC,WAAZ,CAAwBC,2BAAxB,CAAoD,KAAKV,IAAzD,EAA+D,KAAKF,MAApE,CAA1B,CAAJ,EAA4G,OADvG,CAEL;;AACA,eAAKE,IAAL,CAAUM,KAAV,GAAkB,KAAKN,IAAL,CAAUM,KAA5B;AACA,eAAKN,IAAL,CAAUI,QAAV,GAAqB;AAAA;AAAA,0CAAYK,WAAZ,CAAwBC,2BAAxB,CAAoD,KAAKV,IAAzD,EAA+D,KAAKF,MAApE,CAArB;AAEA,cAAI,KAAKA,MAAL,CAAYa,MAAZ,IAAsB,KAAKX,IAAL,CAAUW,MAApC,EACI,KAAKb,MAAL,CAAYa,MAAZ,GAAqB,KAAKX,IAAL,CAAUW,MAA/B;AACP;;AAnBiD,O","sourcesContent":["import { Component, Node, _decorator } from \"cc\";\r\nimport BaseComponent from \"./ComponentBase\";\r\nimport PublicModel from \"./PublicModel\";\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('LabelAutoFollow')\r\nexport default class AutoFollow extends BaseComponent {\r\n    target: Node;\r\n    setTarget(_node: Node) {\r\n        this.target = _node;\r\n    }\r\n    createNewTarget() {\r\n        this.target = new Node();\r\n        this.node.parent.addChild(this.target)\r\n        this.target.setPosition(this.node.position)\r\n        this.target.setScale(this.node.scale)\r\n    }\r\n    update() {\r\n        if (this.node.position.equals(PublicModel.getInstance.to2DConvertOtherNodeSpaceAR(this.node, this.target))) return\r\n        // console.log(\"改座標\");\r\n        this.node.scale = this.node.scale\r\n        this.node.position = PublicModel.getInstance.to2DConvertOtherNodeSpaceAR(this.node, this.target)\r\n\r\n        if (this.target.active != this.node.active)\r\n            this.target.active = this.node.active\r\n    }\r\n}"]}
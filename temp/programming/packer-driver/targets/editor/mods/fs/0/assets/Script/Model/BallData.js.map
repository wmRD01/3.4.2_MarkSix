{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Model/BallData.ts"],"names":["Button","Color","color","Label","Sprite","Tween","tween","UIOpacity","Vec3","_decorator","AssetType","AssetMng","BaseComponent","AutoFollow","PublicModel","ccclass","property","BallData","onDestroy","console","log","label","node","destroy","error","init","_ballNumber","isResetPos","ballNumber","position","ZERO","type","Math","floor","labelAuto","addComponent","setTarget","string","toString","fromHEX","getColor","spriteBG","spriteFrame","AssetClass","get","data","getBGData","setEffect","getOrg","orgV3","choose","setScale","getInstance","oneSclaeVec3","opacityEffect","repeatForever","to","opacity","start","cancel","eulerAngles","stopAllByTarget","enabledBall","backPosition","setLabelAutoScale","setAutoScale","setButtonAuto","btnBGAuto","button","setEffectAuto","effectAuto","setShadowAuto","shadowAuto","shoadow","createNewTarget","bool","BLACK","WHITE","active","changeEffectColor","getComponent","ColorType","黑","綠","紅","藍","SpirteData"],"mappings":"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","sourcesContent":["import { Button, Color, color, Label, Node, Sprite, Tween, tween, UIOpacity, v3, Vec3, _decorator } from 'cc';\r\nimport { AssetType } from '../Enum/AssetType';\r\nimport AssetMng from '../Manager/AssetMng';\r\nimport { colorTest } from '../test/colorTest';\r\nimport BaseComponent from './ComponentBase';\r\nimport AutoFollow from './AutoFollow';\r\nimport PublicModel from './PublicModel';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('BallData')\r\nexport default class BallData extends BaseComponent {\r\n    /**comp */\r\n    @property(Label)\r\n    label: Label;\r\n    @property(Button)\r\n    button: Button;\r\n    @property(Sprite)\r\n    spriteBG: Sprite;\r\n    @property(Sprite)\r\n    shoadow: Sprite;\r\n\r\n    @property(UIOpacity)\r\n    opacityEffect: UIOpacity;\r\n    ballNumber: number = 0;\r\n    type: number = 0;\r\n    orgV3: Vec3;\r\n    labelAuto: AutoFollow;\r\n    btnBGAuto: AutoFollow;\r\n    shadowAuto: AutoFollow;\r\n    effectAuto: AutoFollow;\r\n    // onDisable() {\r\n    //     console.log(\"我消失了?\");\r\n    // }\r\n\r\n    onDestroy() {\r\n        console.log(this.label);\r\n        try {\r\n\r\n            this.label.node.destroy();\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n    init(_ballNumber: number, isResetPos: boolean = false) {\r\n        // console.log(_ballNumber);\r\n\r\n        this.ballNumber = _ballNumber\r\n        if (isResetPos)\r\n            this.node.position = Vec3.ZERO\r\n        /**一般規則 */\r\n        // this.type = _ballNumber % 6\r\n        /**符合香港規則 */\r\n        this.type = (_ballNumber + (Math.floor(_ballNumber / 10))) % 6\r\n        if (_ballNumber % 10 === 0)\r\n            this.type -= 1\r\n        this.labelAuto = this.label.addComponent(AutoFollow).setTarget(this.node)\r\n        this.label.string = this.ballNumber.toString()\r\n        this.label.color = color().fromHEX(this.getColor())\r\n        // console.log(AssetMng.AssetClass.get(AssetType.Sprite).data.get(this.getBGData()));\r\n\r\n        this.spriteBG.spriteFrame = AssetMng.AssetClass.get(AssetType.Sprite).data.get(this.getBGData())\r\n        this.setEffect(false)\r\n\r\n\r\n        // const color = ['red', 'red', 'blue', 'blue', 'green', 'green']\r\n\r\n        // const result = []\r\n        // var add = 0\r\n        // for (let num = 1; num <= 50; num++) {\r\n\r\n        //     if (num % 10 === 1) {\r\n        //         add = Math.floor(num / 10)\r\n        //     }\r\n        //     result.push(num.toString() + color[(num - 1 + add) % 6])\r\n\r\n        // }\r\n        // console.log(result)\r\n\r\n\r\n\r\n        return this\r\n    }\r\n    getOrg() {\r\n        this.orgV3 = new Vec3(this.node.position)\r\n\r\n    }\r\n    // reset() {\r\n\r\n    // }\r\n    choose() {\r\n        // this.spriteBG.spriteFrame = AssetMng.AssetClass.get(AssetType.Sprite).data.get(this.getBGData())\r\n        // this.spriteBG.color = Color.WHITE\r\n        this.node.setScale(PublicModel.getInstance.oneSclaeVec3(1.2))\r\n        this.setEffect(true)\r\n        // let rotai = tween()\r\n        //     .set({ angle: 0 })\r\n        //     .to(5, { angle: -360 })\r\n        tween(this.opacityEffect)\r\n            .repeatForever(tween()\r\n                .to(1, { opacity: 0 })\r\n                .to(1, { opacity: 255 }))\r\n            .start()\r\n        return this\r\n    }\r\n    cancel() {\r\n        // this.spriteBG.spriteFrame = AssetMng.AssetClass.get(AssetType.Sprite).data.get(SpirteData.空白)\r\n        // this.spriteBG.color = color().fromHEX(this.getColor())\r\n\r\n        this.node.setScale(PublicModel.getInstance.oneSclaeVec3(1))\r\n        this.spriteBG.node.eulerAngles = Vec3.ZERO\r\n        this.setEffect(false)\r\n        Tween.stopAllByTarget(this.spriteBG.node)\r\n        this.enabledBall(true)\r\n        return this\r\n    }\r\n    backPosition() {\r\n        Tween.stopAllByTarget(this.spriteBG.node)\r\n        // console.log(this.node.position);\r\n\r\n        this.node.position = this.orgV3\r\n        // console.log(this.node.position, this.orgV3);\r\n        return this\r\n    }\r\n    setLabelAutoScale() {\r\n        this.labelAuto.setAutoScale(true)\r\n    }\r\n    setButtonAuto() {\r\n        this.btnBGAuto = this.button.addComponent(AutoFollow).setTarget(this.node)\r\n        return this\r\n    }\r\n    setEffectAuto() {\r\n        this.effectAuto = this.opacityEffect.addComponent(AutoFollow).setTarget(this.node)\r\n        return this\r\n    }\r\n    setShadowAuto() {\r\n        this.shadowAuto = this.shoadow.addComponent(AutoFollow).createNewTarget()\r\n        return this\r\n    }\r\n\r\n    enabledBall(bool: boolean) {\r\n        if (bool) {\r\n            this.label.color = Color.BLACK\r\n            this.spriteBG.color = Color.WHITE\r\n        }\r\n\r\n        else {\r\n\r\n            this.spriteBG.color = new Color(255, 255, 255, 100)\r\n            this.label.color = new Color(0, 0, 0, 100)\r\n        }\r\n    }\r\n    setEffect(bool: boolean) {\r\n        this.opacityEffect.opacity = 255\r\n        this.opacityEffect.node.active = bool\r\n\r\n    }\r\n    changeEffectColor() {\r\n        this.opacityEffect.node.getComponent(Sprite).color = color().fromHEX(\"#FFB700\")\r\n    }\r\n    private getColor() {\r\n\r\n        return ColorType.黑\r\n        switch (this.type) {\r\n            case 0:\r\n            case 5:\r\n                return ColorType.綠\r\n            case 1:\r\n            case 2:\r\n                return ColorType.紅\r\n            case 3:\r\n            case 4:\r\n                return ColorType.藍\r\n        }\r\n    }\r\n    private getBGData() {\r\n        switch (this.type) {\r\n            case 0:\r\n            case 5:\r\n                return SpirteData.綠\r\n            case 1:\r\n            case 2:\r\n                return SpirteData.紅\r\n            case 3:\r\n            case 4:\r\n                return SpirteData.藍\r\n        }\r\n    }\r\n}\r\nenum ColorType {\r\n    紅 = \"#FF3D3D\",\r\n    藍 = \"#334BD3\",\r\n    綠 = \"#61BFAD\",\r\n    灰 = \"#797979FD\",\r\n    白 = \"#FFFFFF\",\r\n    黑 = \"#000000\",\r\n\r\n}\r\nenum SpirteData {\r\n    紅 = \"Challenge_RedBall\",\r\n    藍 = \"Challenge_BlueBall\",\r\n    綠 = \"Challenge_GreenBall\",\r\n    空白 = \"Challenge_Frame\"\r\n}"]}
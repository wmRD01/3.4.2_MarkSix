{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Socket/GameWebSocket.ts"],"names":["Config","log","sys","_decorator","DelayTime","ln","URLVlaue","GameControll","CheckLoadingType","CommandType","LangType","MessageCommend","WebPlatform","WebSocketEvent","CheckLoading","GameData","Player","PublicData","PublicModel","SocketModel","SocketSetting","ccclass","property","GameWebSocket","onEnable","eventSetting","judgePlatorm","Setting","MotifySetting","startConnect","getInstance","checkState","isWebSocketOpen","node","destroy","isFirstData","getWebPlatform","Default","RomoteData","libPath","gameID","Date","getTime","connectToServer","bind","loadLanguageError","test","from","data","push","jsonText","jsonTo","JSON","parse","console","TwoClassCheckData","host","connectionType","serverhost","serverport","webSocket","WebSocket","onopen","onWS_Open","onerror","onWS_Error","onclose","onWS_Close","onmessage","onWS_Receive","setControllEvent","setEvent","StartConnect","Login","onLogIn","WebSocketSendCommand","onSend","BackHome","onBackHome","CloseWindow","onCloseWindow","ViewRecord","onViewRecord","StaoredValue","onStaoredValue","StartLoadLanguage","startLoadLanguage","CloseWebSocket","closeWebsocket","cmd","isClose","StartDT_NotClear","undefined","config","send","stringify","_ln","gameId","window","isGPGServer","isInpokerServer","urlData","_gameConfig","isApp","app","account","memberid","key","token","gpgToken","coinType","recodeUrl","recordeURL","language","UserLanguage","event","endWork","usertoken","resetState","message","jmsg","serverRespond","e","formatRecordUrl","agentId","open","backHomeURL","document","location","href","staoredValueUrl","temp","close","usdis","StopGameHeartrate","search","length","getsearch","split","urldata","getsearchKey","searchList","datakey","url","callback","errCallback","platform","Platform","ANDROID","result","jsb","fileUtils","getStringFromFile","Error","xhr","XMLHttpRequest","errInfo","overrideMimeType","onload","readyState","status","response","ontimeout","androidLoadLanguage","getText","gameLang","loadLanguageEnd","serverLang","serverAPILang","type","indexOf","Game","Server","ServerAPI","setLang","init","err","loadLanguageCount","loadLanguageErrorAgain","messaggeState"],"mappings":"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","sourcesContent":["import { log, sys, _decorator } from \"cc\";\r\nimport DelayTime from '../../Plug/DelayTime';\r\nimport { ln, URLVlaue } from \"../Contorll/Api/SendCommand\";\r\nimport GameControll from \"../Contorll/GameControll/GameControll\";\r\nimport { CheckLoadingType } from \"../Enum/CheckLoadingType\";\r\nimport { CommandType } from \"../Enum/CommandType\";\r\nimport { LangType } from \"../Enum/LangType\";\r\nimport { MessageCommend } from \"../Enum/MessageCommend\";\r\nimport { WebPlatform } from \"../Enum/WebPlatform\";\r\nimport { WebSocketEvent } from \"../Enum/WebSocketEvent\";\r\nimport CheckLoading from \"../Model/CheckLoading\";\r\nimport GameData from \"../Model/GameData\";\r\nimport Player from \"../Model/Player\";\r\nimport PublicData from \"../Model/PublicData\";\r\nimport PublicModel from \"../Model/PublicModel\";\r\nimport SocketModel from \"../Model/SocketModel\";\r\nimport SocketSetting from \"./SocketSetting\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GameWebSocket')\r\nexport default class GameWebSocket extends SocketModel {\r\n    isFirstData: boolean = true\r\n\r\n    onEnable() {\r\n        this.eventSetting();\r\n        this.judgePlatorm();\r\n        this.Setting();\r\n        this.MotifySetting()\r\n    }\r\n    startConnect(): void {\r\n        /**避免測試期間轉換到下一個場景的時候，又再次連線 */\r\n\r\n        if (CheckLoading.getInstance.checkState(CheckLoadingType.isWebSocketOpen)) {\r\n            this.node.destroy()\r\n            return\r\n        }\r\n        if (this.isFirstData) {\r\n\r\n\r\n\r\n            let getWebPlatform = WebPlatform.Default\r\n            /**由於打包出去後似乎會被意外轉成Obj，因此還要再次判斷 */\r\n            getWebPlatform = typeof getWebPlatform !== 'string' ? WebPlatform.Default : getWebPlatform\r\n            // console.error(\"最終結果：\" + getWebPlatform);\r\n            //取得config拿取遊戲相關資料，其中包含連線的資訊\r\n            this.RomoteData(`${this.libPath}config/${GameData.getInstance.gameID}/${getWebPlatform}/game.json?${new Date().getTime()}`, this.connectToServer.bind(this), this.loadLanguageError.bind(this))\r\n            // AssetMng.loadLogoAsset(this.UserLanguage)\r\n        }\r\n        else\r\n            this.connectToServer();\r\n    }\r\n\r\n    test(from: Array<number>, data) {\r\n        from.push(data)\r\n    }\r\n    connectToServer(jsonText?: string) {\r\n        if (jsonText) {\r\n            let jsonTo = JSON.parse(jsonText)\r\n            console.log(jsonTo);\r\n            PublicModel.getInstance.TwoClassCheckData(GameData.getInstance, jsonTo)\r\n            PublicModel.getInstance.TwoClassCheckData(this, jsonTo)\r\n\r\n        }\r\n        let host = `${this.connectionType}://${this.serverhost}:${this.serverport}`;\r\n        console.log(host);\r\n        this.webSocket = new WebSocket(host)\r\n        this.webSocket.onopen = this.onWS_Open.bind(this);\r\n        this.webSocket.onerror = this.onWS_Error.bind(this);\r\n        this.webSocket.onclose = this.onWS_Close.bind(this);\r\n        this.webSocket.onmessage = this.onWS_Receive.bind(this);\r\n    }\r\n\r\n    eventSetting() {\r\n        console.log(\"監聽設定玩\");\r\n        console.log(GameControll.getInstance);\r\n\r\n        GameControll.getInstance.setControllEvent()\r\n        console.log(\"監聽設定玩\");\r\n\r\n        this.setEvent(WebSocketEvent.StartConnect, this.startConnect);\r\n        this.setEvent(WebSocketEvent.Login, this.onLogIn);\r\n        this.setEvent(WebSocketEvent.WebSocketSendCommand, this.onSend);\r\n        this.setEvent(WebSocketEvent.BackHome, this.onBackHome);\r\n        this.setEvent(WebSocketEvent.CloseWindow, this.onCloseWindow)\r\n        this.setEvent(WebSocketEvent.ViewRecord, this.onViewRecord)\r\n        this.setEvent(WebSocketEvent.StaoredValue, this.onStaoredValue)\r\n        this.setEvent(WebSocketEvent.StartLoadLanguage, this.startLoadLanguage)\r\n        this.setEvent(WebSocketEvent.CloseWebSocket, this.closeWebsocket)\r\n        console.log(\"監聽設定玩\");\r\n\r\n    }\r\n\r\n    async onSend(cmd, data) {\r\n        if (!CheckLoading.getInstance.checkState(CheckLoadingType.isWebSocketOpen)) {\r\n            if (this.isClose) return\r\n\r\n            log(\"等待連線.......\")\r\n            await DelayTime.getInstance.StartDT_NotClear(0.5)\r\n            this.onSend(cmd, data)\r\n            return;\r\n        }\r\n        if (cmd == undefined || cmd == \"\") return;\r\n        let config = new Config();\r\n        config.cmd = cmd;\r\n        config.data = data || null;\r\n        console.log(' \\n=====送=====');\r\n        console.log(\">> cmd: \" + cmd);\r\n        console.log(\">> data: \", data);\r\n        console.log('=====送=====\\n ');\r\n        // console.log(JSON.stringify(config));\r\n        this.webSocket.send(JSON.stringify(config));\r\n    }\r\n\r\n\r\n\r\n    onLogIn(cmd) {\r\n        let _ln = new ln()\r\n        _ln.gameId = GameData.getInstance.gameID\r\n        if ((window.isGPGServer || window.isInpokerServer) && this.urlData != undefined) {\r\n            let _gameConfig = new URLVlaue()\r\n            PublicModel.getInstance.TwoClassCheckData(_gameConfig, this.urlData);\r\n            PublicData.getInstance.isApp = _gameConfig.app\r\n            this.account = _gameConfig.memberid\r\n            _ln.account = this.account\r\n            _ln.key = _gameConfig.token;\r\n\r\n        }\r\n        else if (this.urlData != undefined) {\r\n            let _gameConfig = new URLVlaue()\r\n            PublicModel.getInstance.TwoClassCheckData(_gameConfig, this.urlData);\r\n\r\n            this.account = _gameConfig.memberid\r\n            _ln.account = this.account\r\n            _ln.key = _gameConfig.token;\r\n        }\r\n        // //TODO 直接給token字串\r\n        // else if (window.isGPGServer)\r\n        //     _ln.key = JSON.stringify({})\r\n        // //TODO 修改成menberID的給Leo\r\n        else {\r\n            _ln.account = this.account\r\n            _ln.key = Player.getInstance.gpgToken;\r\n\r\n        }\r\n        GameData.getInstance.coinType = this.coinType;\r\n        PublicData.getInstance.recodeUrl = this.recordeURL;\r\n        PublicData.getInstance.language = this.UserLanguage\r\n        console.log(_ln, \"入房資訊\");\r\n        this.onSend(cmd, _ln)\r\n        this.isFirstData = false\r\n    }\r\n\r\n\r\n    /////////////////////////////////////////////////////////////\r\n    ///     web socket event.\r\n    /////////////////////////////////////////////////////////////\r\n    //#region  \r\n    onWS_Open(event) {\r\n        console.log(\"Send Text WS was opened.\");\r\n        CheckLoading.getInstance.endWork(CheckLoadingType.isWebSocketOpen);\r\n        this.onLogIn(\"ln\")\r\n        if (this.usertoken == \"\") {\r\n            // GameControll.getInstance.messaggeState(MessageCommend.BackHome, SocketSetting.t(\"E_0001\", LangType.Game))\r\n            return;\r\n        }\r\n    }\r\n    onWS_Error(event) {\r\n        console.log(\"Send Text fired an error\");\r\n        CheckLoading.getInstance.resetState(CheckLoadingType.isWebSocketOpen);\r\n        // 連線錯誤，詳細情況請洽客服!\r\n        // GameControll.getInstance.messaggeState(MessageCommend.BackHome, SocketSetting.t(\"E_0001\", LangType.Game))\r\n    }\r\n    onWS_Close(event) {\r\n        console.log(\"WebSocket instance closed.\");\r\n        this.isClose = true\r\n        if (CheckLoading.getInstance.checkState(CheckLoadingType.isWebSocketOpen)) {\r\n            CheckLoading.getInstance.resetState(CheckLoadingType.isWebSocketOpen);\r\n            // GameControll.getInstance.messaggeState(MessageCommend.BackHome, SocketSetting.t(\"E_0002\", LangType.Game))\r\n        };\r\n    }\r\n    onWS_Receive(event) {\r\n        let message = event.data;\r\n        try {\r\n            let jmsg = JSON.parse(message);\r\n            // console.log(jmsg);\r\n\r\n            if (typeof jmsg == \"object\") {\r\n                console.log(' \\n=====收=====');\r\n                console.log(\">> cmd: \" + jmsg.cmd);\r\n                console.log(jmsg.data);\r\n                console.log('=====收=====\\n ');\r\n                GameControll.getInstance.serverRespond(jmsg.cmd, jmsg.data);\r\n                return;\r\n            }\r\n        } catch (e) { }\r\n\r\n    }\r\n    //#endregion\r\n\r\n    onViewRecord() {\r\n        if (this.recordeURL != null && this.recordeURL != \"\" && this.recordeURL != \"undefined\") {\r\n            let formatRecordUrl = `${this.recordeURL}?agentId=${this.agentId}&playerId=${Player.getInstance.account}&lang=${this.UserLanguage}`\r\n            window.open(formatRecordUrl)\r\n        }\r\n    }\r\n    onBackHome() {\r\n        /**通知server斷線 */\r\n        // this.onSend(CommandType.usdis, {})\r\n        if (this.backHomeURL != null && this.backHomeURL != \"\" && this.backHomeURL != \"undefined\") {\r\n            document.location.href = this.backHomeURL;\r\n        }\r\n    }\r\n    onStaoredValue() {\r\n        if (this.staoredValueUrl != null && this.staoredValueUrl != \"\" && this.staoredValueUrl != \"undefined\") {\r\n            window.open(this.staoredValueUrl)\r\n        }\r\n    }\r\n    onCloseWindow() {\r\n        let temp = window.open('', '_self');\r\n        temp.close();\r\n    }\r\n    closeWebsocket() {\r\n        // this.isClose = true\r\n        // CheckLoading.getInstance.resetState(CheckLoadingType.isWebSocketOpen);\r\n\r\n        if (!CheckLoading.getInstance.checkState(CheckLoadingType.isWebSocketOpen)) {\r\n            return\r\n        }\r\n\r\n        this.onSend(CommandType.usdis, {})\r\n        DelayTime.getInstance.StopGameHeartrate();\r\n    }\r\n    /////////////////////////////////////////////////////////////\r\n    ///     lang載入設定.\r\n    /////////////////////////////////////////////////////////////\r\n\r\n    // server可自改語言與伺服器\r\n    MotifySetting() {\r\n        if ((window.location.search).length > 0) {\r\n            var getsearch: Array<string> = window.location.search.split('?');\r\n            var urldata: object = {};\r\n            for (var getsearchKey in getsearch) {\r\n                if (getsearch[getsearchKey] != \"\") {\r\n                    let searchList: Array<string> = getsearch[getsearchKey].split('&');\r\n                    for (var key in searchList) {\r\n                        urldata[searchList[key].split('=')[0]] = searchList[key].split('=')[1];\r\n                        /**這是要判斷是否強改資料的部分，改的話就不要套用DB給的資料 */\r\n                        for (var datakey in urldata) {\r\n                            if (datakey == \"L\" || datakey == \"l\") {\r\n                                this.UserLanguage = urldata[datakey];\r\n                                this.urlData = undefined\r\n                            }\r\n                            if (datakey == \"S\" || datakey == \"s\") {\r\n                                this.serverhost = urldata[datakey];\r\n                                this.urlData = undefined\r\n                            }\r\n                            if (datakey == \"P\" || datakey == \"p\") {\r\n                                this.serverport = urldata[datakey];\r\n                                this.urlData = undefined\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    RomoteData(url: string, callback: Function, errCallback: Function) {\r\n        var url = url;\r\n        console.log('downloadText.url:', url);\r\n        // console.log(url.startsWith(\"http://\"));\r\n        // console.log(sys.platform);\r\n        if (sys.platform === sys.Platform.ANDROID) {\r\n\r\n            var result = jsb.fileUtils.getStringFromFile(url);\r\n            if (typeof result === 'string' && result) {\r\n                return result;\r\n            }\r\n            else {\r\n                return new Error('Download text failed: ' + url);\r\n            }\r\n\r\n        } else {\r\n            if (callback) {\r\n                // console.log('downloadText getXMLHttpRequest')\r\n                var xhr = new XMLHttpRequest(),\r\n                    errInfo = 'Load text file failed: ' + url;\r\n                xhr.open('GET', url, true);\r\n                if (xhr.overrideMimeType) xhr.overrideMimeType('text\\/plain; charset=utf-8');\r\n                xhr.onload = function () {\r\n                    if (xhr.readyState === 4) {\r\n                        if (xhr.status === 200 || xhr.status === 0) {\r\n                            callback(xhr.response, url);\r\n                        }\r\n                        else {\r\n                            errCallback(url)\r\n                            // errCallback({ status: xhr.status, errorMessage: errInfo + '(wrong status)' });\r\n                        }\r\n                    }\r\n                    else {\r\n                        errCallback(url)\r\n                        // errCallback({ status: xhr.status, errorMessage: errInfo + '(wrong readyState)' });\r\n                    }\r\n                };\r\n                xhr.onerror = function () {\r\n                    errCallback(url)\r\n                    // errCallback({ status: xhr.status, errorMessage: errInfo + '(error)' });\r\n                };\r\n                xhr.ontimeout = function () {\r\n                    errCallback(url)\r\n                    // errCallback({ status: xhr.status, errorMessage: errInfo + '(time out)' });\r\n                };\r\n                xhr.send(null);\r\n            }\r\n        }\r\n    }\r\n    androidLoadLanguage(getText) {\r\n        let jsonTo = JSON.parse(getText)\r\n        // console.log(jsonTo);\r\n    }\r\n    startLoadLanguage() {\r\n        console.log(\"開始讀\");\r\n\r\n        let gameLang = `${this.libPath}gameLanguage/${GameData.getInstance.gameID}/${this.UserLanguage}.json?/${new Date().getTime()}`\r\n        this.RomoteData(gameLang, this.loadLanguageEnd.bind(this), this.loadLanguageError.bind(this))\r\n        let serverLang = this.libPath + \"serverLanguage/\" + this.UserLanguage + \".json?\" + new Date().getTime()\r\n        this.RomoteData(serverLang, this.loadLanguageEnd.bind(this), this.loadLanguageError.bind(this))\r\n        let serverAPILang = this.libPath + \"serverApiLanguage/\" + this.UserLanguage + \".json?\" + new Date().getTime()\r\n        this.RomoteData(serverAPILang, this.loadLanguageEnd.bind(this), this.loadLanguageError.bind(this))\r\n\r\n    }\r\n    loadLanguageEnd(jsonText: string, url?: string) {\r\n        console.log(\"loadLanguageEnd\");\r\n        let type;\r\n        if (url.indexOf(\"gameLanguage\") > 0)\r\n            type = LangType.Game\r\n        if (url.indexOf(\"serverLanguage\") > 0)\r\n            type = LangType.Server\r\n        if (url.indexOf(\"serverApiLanguage\") > 0)\r\n            type = LangType.ServerAPI\r\n        let jsonTo = JSON.parse(jsonText)\r\n        SocketSetting.setLang(this.UserLanguage).init(jsonTo, type); //設定語言   \r\n        // SocketSetting.setLang(MyWebSocket.instence.UserLanguage).init(jsonTo, type); //設定語言   \r\n        // MainModelUp.instance.IsLoadLanguage = true;\r\n    }\r\n    loadLanguageError(url: string, err?: string) {\r\n        // console.log(\"loadLanguageError\");\r\n        if (err)\r\n            // console.log(\"錯誤?\" + err);\r\n\r\n            this.loadLanguageCount = 0;\r\n        this.RomoteData(url, this.loadLanguageEnd.bind(this), this.loadLanguageErrorAgain.bind(this));\r\n    }\r\n    loadLanguageErrorAgain(url: string) {\r\n        this.isClose = true\r\n        // console.log(\"语言包下载失败请通知客服\");\r\n        GameControll.getInstance.messaggeState(MessageCommend.BackHome, \"資源包有問題，請洽客服\")\r\n        // Panel_Message.showConfirm(this, 1, SocketSetting.t(\"S_9077\"), (e) => {\r\n        //     this.onBackHome();\r\n        // }); //\"语言包下载失败请通知客服\";\r\n        // MainModelUp.instance.ShowMessageBox = true;\r\n    }\r\n}\r\n\r\n\r\n\r\nclass Config {\r\n    cmd: string;\r\n    data: any;\r\n}\r\n\r\n// export default new MyWebSocket();\r\n\r\n\r\n// /**\r\n//  * 舊方法\r\n//  * \r\n//  */\r\n// loadScript(url, callback, callBackError) {\r\n//     console.log(url, callback, callBackError);\r\n\r\n//     var script = document.createElement(\"script\");\r\n//     console.log(script);\r\n\r\n//     script.type = \"text/javascript\";\r\n//     if (typeof (callback) != \"undefined\") {\r\n//         //@ts-ignore\r\n//         if (script.readyState) {\r\n//             //@ts-ignore\r\n//             script.onreadystatechange = function () {\r\n//                 //@ts-ignore\r\n//                 if (script.readyState == \"loaded\" || script.readyState == \"complete\") {\r\n//                     //@ts-ignore\r\n//                     script.onreadystatechange = null;\r\n//                     callback();\r\n//                 }\r\n//             };\r\n//         } else {\r\n//             script.onload = function () {\r\n//                 callback();\r\n//             };\r\n//             script.onerror = function (e) {\r\n//                 console.log(e);\r\n\r\n//                 if (MyWebSocket.instence.loadLanguageCount < 1) {\r\n//                     MyWebSocket.instence.loadScript(url, callback, callBackError);\r\n//                     MyWebSocket.instence.loadLanguageCount++;\r\n//                 } else {\r\n//                     callBackError();\r\n//                 }\r\n//             };\r\n//         }\r\n//     }\r\n//     script.src = url;\r\n//     document.body.appendChild(script);\r\n//     console.log(document.body);\r\n\r\n// }\r\n// /**\r\n//  * 舊方法\r\n//  * \r\n//  */\r\n// LoadLanguage(_language) {\r\n//     console.log(\"LoadLanguage\");\r\n\r\n//     // let LanguageURI = this.loadLanguage + this.UserLanguage + \".js?\" + new Date().getTime();\r\n//     let LanguageURI = this.loadLanguage + this.UserLanguage + \".js\";\r\n\r\n//     this.loadScript(LanguageURI, this.loadLanguageEnd, this.loadLanguageError);\r\n\r\n// }"]}
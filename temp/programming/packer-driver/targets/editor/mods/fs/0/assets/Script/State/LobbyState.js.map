{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/State/LobbyState.ts"],"names":["AccountLogIn","InLobby","InRoomLevel","InGame","CreatorRoomData","ChangeNickname","director","random","PublicData","State","EventMng","GameData","Player","GameSceneName","DelayTime","MainLobby","lbsr","RoomData","WebSocketEvent","CommandType","DEV","PublicModel","EvnetType","changeState","data","getInstance","SetGameHeartrate","heartTime","TwoClassCheckData","isFastInGame","preloadScene","GameRoom","_lbsr","roomNo","contentId","seatNo","password","mapEvnet","get","Pulic","emit","WebSocketSendCommand","Lobby","loadScene","instance","inGame","rooms","code","playMinute","roomName","Math","floor","toString","betMin","betMax","betOptions","thinkSecond","vlcr","console","log","nickname"],"mappings":"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","sourcesContent":["import * as RP from \"../Contorll/Api/ResponeCommand\";\r\nimport PublicData from \"../Model/PublicData\";\r\nimport { State } from \"../../Patten/StatePatten\";\r\nimport EventMng from \"../Manager/EventMng\";\r\nimport GameData from \"../Model/GameData\";\r\nimport Player from \"../Model/Player\";\r\nimport { director, random } from \"cc\";\r\nimport { GameSceneName } from \"../Enum/GameSenceName\";\r\nimport DelayTime from \"../../Plug/DelayTime\";\r\nimport MainLobby from \"../View/MainLobby\";\r\nimport { lbll, lbrl, lbsr } from \"../Contorll/Api/SendCommand\";\r\nimport RoomData from \"../Model/RoomData\";\r\nimport { WebSocketEvent } from \"../Enum/WebSocketEvent\";\r\nimport { CommandType } from \"../Enum/CommandType\";\r\nimport { DEV } from \"cc/env\";\r\nimport PublicModel from \"../Model/PublicModel\";\r\nimport { EvnetType } from \"../Enum/EvnetType\";\r\n/**登入 */\r\nexport class AccountLogIn extends State {\r\n    public changeState(data: RP.ln): void {\r\n        /**連線成功設定心跳 */\r\n        DelayTime.getInstance.SetGameHeartrate(PublicData.getInstance.heartTime);\r\n        // console.log(PublicData.getInstance);\r\n        // console.log(GameData.getInstance.isFastInGame);\r\n        /**更新部分資料 */\r\n        PublicModel.getInstance.TwoClassCheckData(Player.getInstance, data)\r\n        if (GameData.getInstance.isFastInGame) {\r\n            director.preloadScene(GameSceneName.GameRoom, () => {\r\n                let _lbsr = new lbsr()\r\n                _lbsr.roomNo = GameData.getInstance.roomNo\r\n                _lbsr.contentId = GameData.getInstance.contentId\r\n                _lbsr.seatNo = RoomData.getInstance.seatNo\r\n                _lbsr.password = Player.getInstance.password\r\n                EventMng.getInstance.mapEvnet.get(EvnetType.Pulic).emit(WebSocketEvent.WebSocketSendCommand, CommandType.lbsr, _lbsr)\r\n            })\r\n        }\r\n        else {\r\n            director.preloadScene(GameSceneName.Lobby, () => {\r\n                director.loadScene(GameSceneName.Lobby)\r\n            })\r\n        }\r\n        // EventMng.getInstance.mapEvnet.get(EvnetType.Pulic).emit(GameEvent.CloseGameLoad)\r\n        // //如果Server通知幣別時更新，如無則預設或者適應舊系統\r\n        // if (data.coinType) GameData.getInstance.coinType = data.coinType\r\n\r\n        // let getWallet = data.coinType == CoinType.Gold ? data.pointGold : data.pointSilver\r\n        // this.mainGame.panel_UI.ui_Wallet.add(GameData.getInstance.coinType).setColor(GameData.getInstance.coinType).setNum(getWallet);\r\n\r\n        // this.mainGame.panel_UI.ui_Settlement.setPlayName(data.nickname)\r\n        // PublicModel.getInstance.TwoClassCheckData(Player.getInstance, data)\r\n        // // console.log(MainModel);\r\n\r\n        // if (window.isEditor) {\r\n\r\n        // }\r\n        // else {\r\n\r\n        //     this.mainGame.panel_View_BG.view0_BG.outView()\r\n        //     this.mainGame.panel_Exchange.show()\r\n    }\r\n    /**快速入房的關係，因此得放在這邊 */\r\n\r\n}\r\n/**進入大廳 */\r\nexport class InLobby extends State {\r\n    public changeState(data: RP.lbll): void {\r\n        /**顯示房間 */\r\n\r\n        // if (GameData.getInstance.isFastInGame)\r\n        // director.preloadScene(GameSenceName.Lobby, () => {\r\n        //     director.loadScene(GameSenceName.Lobby)\r\n        // })\r\n        // EventMng.getInstance.mapEvnet.get(EvnetType.Pulic).emit(WebSocketEvent.SendCommand, CommandType.lbrl)\r\n    }\r\n}\r\n/**進入房間級別 */\r\nexport class InRoomLevel extends State {\r\n    public changeState(data: RP.lbrl): void {\r\n        /**顯示Level */\r\n        // MainLobby.instance.inRoomLevel()\r\n        // EventMng.getInstance.mapEvnet.get(EvnetType.Pulic).emit(WebSocketEvent.SendCommand, CommandType.lbsr)\r\n        if (DEV) {\r\n            MainLobby.instance.inGame(data.rooms[0].roomNo)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**進入遊戲 */\r\nexport class InGame extends State {\r\n    public changeState(data: RP.goin | RP.lbsr): void {\r\n        if ((data as RP.lbsr).code > 0) {\r\n            if (!DEV) return;\r\n            let data = new CreatorRoomData()\r\n            data.playMinute = 1\r\n            data.roomName = Math.floor(random() * 100000).toString()\r\n            data.betMin = 10\r\n            data.betMax = 10000\r\n            data.betOptions = [10, 200, 500, 1000, 10000]\r\n            data.thinkSecond = 10\r\n            data.playMinute = 1440\r\n            EventMng.getInstance.mapEvnet.get(EvnetType.Pulic).emit(WebSocketEvent.WebSocketSendCommand, CommandType.vlcr, data)\r\n        }\r\n        else {\r\n            director.loadScene(GameSceneName.GameRoom)\r\n            console.log(\"成功進入遊戲\");\r\n        }\r\n        // if (!GameData.getInstance.isFastInGame) {\r\n        // }\r\n        // throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\nclass CreatorRoomData {\r\n    public contentId: string = \"10\";\r\n\r\n    public roomType: number = 1;\r\n    public roomLevel: number = 1;\r\n\r\n    public roomName: string = \"\";    // 房間名稱.\r\n    public currency: number = 0;        // 幣別. 0:金幣, 1:銀幣\r\n    public modeNonComm: boolean = false; // 是否為免佣模式.\r\n    public playMinute: number = 0;      // 開房時長 單位:分鐘.\r\n    public charge: number = 0;      // 開房費用.(admin不適用)\r\n    public enableBothBet: boolean = false;   // 是否允許兩邊對押;\r\n\r\n    public betMin: number = 0;      // 最小下注額;\r\n    public betMax: number = 0;      // 最大下注額;\r\n    public betOptions: number[] = null;   // 下注選項\r\n\r\n    public seat: number = 100;            // 座位(允許進入人數);\r\n    public thinkSecond: number = 0;     // 下注思考時間.單位:秒\r\n\r\n}\r\nexport class ChangeNickname extends State {\r\n    public changeState(data: RP.ucnn): void {\r\n        Player.getInstance.nickname = data.nickname\r\n        // this.mainGame.panel_UI.ui_Settlement.setPlayName(data.nickname)\r\n        // this.mainGame.panel_Loading.hide()\r\n        // this.mainGame.panel_ChangeNickname.hide()\r\n        // this.mainGame.panel_Message.show()\r\n        // this.mainGame.panel_Message.messageInit(SocketSetting.t(\"026\", LangType.Game))\r\n        // this.mainGame.panel_Message.showSingleConfirm()\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]}
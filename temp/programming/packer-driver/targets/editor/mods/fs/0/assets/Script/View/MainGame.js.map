{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/View/MainGame.ts"],"names":["_decorator","find","js","PanelUI","CheckLoadingType","PublicData","CheckLoading","BaseSingletonComponent","GameSceneName","PanelGameMessage","PanelLoading","SingletManager","DEV","ccclass","property","MainGame","onLoad","active","getInstance","endWork","isGameSence","currentScene","GameRoom","isResetView","instance","closeLoading","onEnable","start","onDisable","onDestroy","arr_ComponentBaseClass","length","delete","getClassName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAkCC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,E,OAAAA,E;;AAD1CC,MAAAA,O;;AAEEC,MAAAA,gB,iBAAAA,gB;;AACFC,MAAAA,U;;AACAC,MAAAA,Y;;AACAC,MAAAA,sB;;AACEC,MAAAA,a,iBAAAA,a;;AAEFC,MAAAA,gB;;AAEAC,MAAAA,Y;;AACAC,MAAAA,c;;AACEC,MAAAA,G,UAAAA,G;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBd,U;;0BAGjBe,Q,WADZF,OAAO,CAAC,UAAD,C,UAGHC,QAAQ;AAAA;AAAA,+C,UAIRA,QAAQ;AAAA;AAAA,6B,oCAPb,MACaC,QADb,SAC8B;AAAA;AAAA,6DAD9B,CACiE;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAS7DC,QAAAA,MAAM,GAAS;AACX;AAEA,cAAIJ,GAAJ,EAAS,CACL;AACA;AACH;;AAEDX,UAAAA,IAAI,CAAC,kBAAD,CAAJ,CAAyBgB,MAAzB,GAAkCL,GAAlC;AACA;;AACA;AAAA;AAAA,4CAAaM,WAAb,CAAyBC,OAAzB,CAAiC;AAAA;AAAA,oDAAiBC,WAAlD;AACA;AAAA;AAAA,wCAAWF,WAAX,CAAuBG,YAAvB,GAAsC;AAAA;AAAA,8CAAcC,QAApD;AACA,gBAAMN,MAAN;AACA;AAAA;AAAA,wCAAWE,WAAX,CAAuBK,WAAvB,GAAqC,IAArC;AACA;AAAA;AAAA,4CAAaC,QAAb,CAAsBC,YAAtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIH;;AACDC,QAAAA,QAAQ,GAAG,CACP;AACH;AACD;AACJ;AACA;;;AACe,cAALC,KAAK,GAAG,CACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEH;;AACDC,QAAAA,SAAS,GAAG,CAEX;;AACDC,QAAAA,SAAS,GAAG;AACR;AACA;AAAA;AAAA,wCAAWX,WAAX,CAAuBY,sBAAvB,CAA8CC,MAA9C,GAAuD,CAAvD;AACA;AAAA;AAAA,gDAAeP,QAAf,CAAwBQ,MAAxB,CAA+B9B,EAAE,CAAC+B,YAAH,CAAgB,IAAhB,CAA/B;AACH;;AA5E4D,O","sourcesContent":["import PanelUI from '../Contorll/Lobby/PanelBottomNavigationBar';\r\nimport { _decorator, director, Game, game, find, js, Node, profiler, setDisplayStats } from 'cc';\r\nimport { CheckLoadingType } from '../Enum/CheckLoadingType';\r\nimport PublicData from '../Model/PublicData';\r\nimport CheckLoading from '../Model/CheckLoading';\r\nimport BaseSingletonComponent from '../../Patten/Singleton/BaseSingletonComponent';\r\nimport { GameSceneName } from '../Enum/GameSenceName';\r\n\r\nimport PanelGameMessage from '../Contorll/Lobby/PanelGameMessage';\r\n\r\nimport PanelLoading from '../Contorll/NoClearNode/PanelLoading';\r\nimport SingletManager from '../../Patten/Singleton/SingletonManger';\r\nimport { DEV } from 'cc/env';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('MainGame')\r\nexport class MainGame extends BaseSingletonComponent<MainGame>() {\r\n\r\n    @property(PanelGameMessage)\r\n    panelGameMessage: PanelGameMessage\r\n\r\n\r\n    @property(PanelUI)\r\n    panelUI: PanelUI;\r\n\r\n    onLoad(): void {\r\n        // console.error(DEV);\r\n\r\n        if (DEV) {\r\n            // Player.getInstance.identity = PlayerIdentity.Guest\r\n            // window.isPhone = true\r\n        }\r\n\r\n        find(\"Canvas/PanelTest\").active = DEV\r\n        /**測試功能 */\r\n        CheckLoading.getInstance.endWork(CheckLoadingType.isGameSence)\r\n        PublicData.getInstance.currentScene = GameSceneName.GameRoom\r\n        super.onLoad()\r\n        PublicData.getInstance.isResetView = true\r\n        PanelLoading.instance.closeLoading()\r\n        /**由於Panel是動態仔入，因此得用Find去抓，或者....再想想，因為在介面上操作的話等於是寫死(? */\r\n        // this.panelTable = find(\"3DNode/PanelTable\").getComponent(PanelTable)\r\n        // this.panelBetState = find(\"Canvas/PanelBetState\").getComponent(PanelBetState)\r\n        // this.panelShowdownResult = find(\"Canvas/PanelShowdownResult\").getComponent(PanelShowdownResult)\r\n        // this.panelClientCoin = find(\"Canvas/PanelClientCoin\").getComponent(PanelClientCoin)\r\n        // this.panelGameMessage = find(\"Canvas/PanelGameMessage\").getComponent(PanelGameMessage)\r\n        // this.panelLimitBet = find(\"Canvas/PanelLimitBet\").getComponent(PanelLimitBet)\r\n        // this.panelTimer = find(\"Canvas/PanelTimer\").getComponent(PanelTimer)\r\n        // this.panelUI = find(\"Canvas/PanelUI\").getComponent(PanelUI)\r\n        // this.panelCardSequence = find(\"Canvas/PanelCardSequence\").getComponent(PanelCardSequence)\r\n        // this.panelShuffleCard = find(\"Canvas/PanelShuffleCard\").getComponent(PanelShuffleCard)\r\n\r\n\r\n\r\n    }\r\n    onEnable() {\r\n        // this.setEvent(GameEvent.SetOrientation, this.eventOrientation)\r\n    }\r\n    /**\r\n     * 測試內存\r\n     */\r\n    async start() {\r\n        //建立連線\r\n        // this.eventEmit(GameEvent.ResetView)\r\n        // await SocketSetting.checkLanguage(LangType.Server)\r\n        // await SocketSetting.checkLanguage(LangType.Game)\r\n        // PanelLoading.instance.openLoading(SocketSetting.t(\"E_0004\", LangType.Game))\r\n        // PublicData.getInstance.isResetProcessing = true\r\n        // PublicData.getInstance.isResetView = true;\r\n        // /**初始化全部語系 */\r\n        // for (let index = 0; index < PublicData.getInstance.arr_ComponentBaseClass.length; index++) {\r\n        //     PublicData.getInstance.arr_ComponentBaseClass[index].setLanguage()\r\n        // }\r\n        // /** forCAST用 */\r\n        // if (Player.getInstance.identity == PlayerIdentity.Guest) {\r\n        //     this.panelUI.hide()\r\n        //     CanvasControll.instance.node.on(Node.EventType.TOUCH_END, this.eventPushNotificationGuset, this)\r\n        // }\r\n        // await AssetMng.waitStateCheck(AssetType.Sprite)\r\n        // await AssetMng.waitStateCheck(AssetType.Music)\r\n        // await CheckLoading.getInstance.checkAllEnd()\r\n\r\n        // this.eventEmit(WebSocketEvent.WebSocketSendCommand, CommandType.gori)\r\n\r\n    }\r\n    onDisable() {\r\n\r\n    }\r\n    onDestroy() {\r\n        /**清除之前資料 */\r\n        PublicData.getInstance.arr_ComponentBaseClass.length = 0\r\n        SingletManager.instance.delete(js.getClassName(this))\r\n    }\r\n\r\n\r\n}\r\n\r\n"]}
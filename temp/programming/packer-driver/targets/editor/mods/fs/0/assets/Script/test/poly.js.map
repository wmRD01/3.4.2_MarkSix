{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/test/poly.ts"],"names":["_decorator","Component","Intersection2D","PolygonCollider2D","ccclass","property","poly","start","checkBtnPolygonCollider","btn","e","collider","getComponent","console","log","points","worldPoints","bHit","pointInPolygon","getUILocation"],"mappings":";;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,c,OAAAA,c;AAAmCC,MAAAA,iB,OAAAA,iB;;;;;;;OACnE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;sBAGaM,I,WADZF,OAAO,CAAC,MAAD,C,gBAAR,MACaE,IADb,SAC0BL,SAD1B,CACoC;AAChC;AACA;AAEA;AACA;AACA;AAEAM,QAAAA,KAAK,GAAG,CAEJ;AACA;AACA;AAEA;AACH,SAf+B,CAgBhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQC,QAAAA,uBAAuB,CAACC,GAAD,EAAYC,CAAZ,EAA2B;AAGtD,cAAIC,QAAQ,GAAGF,GAAG,CAACG,YAAJ,CAAiBT,iBAAjB,CAAf;AACAU,UAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,cAAII,MAAM,GAAGJ,QAAQ,CAACK,WAAtB;AACA,cAAIC,IAAI,GAAGf,cAAc,CAACgB,cAAf,CAA8BR,CAAC,CAACS,aAAF,EAA9B,EAAiDJ,MAAjD,CAAX;AACA,iBAAOE,IAAP;AACH;;AAnC+B,O;AAsCpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport { _decorator, Component, Node, Intersection2D, Event, EventTouch, PolygonCollider2D, UITransform, v3, v2 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = poly\r\n * DateTime = Tue Mar 14 2023 14:16:32 GMT+0800 (台北標準時間)\r\n * Author = sboy61017\r\n * FileBasename = poly.ts\r\n * FileBasenameNoExtension = poly\r\n * URL = db://assets/Script/test/poly.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.4/manual/en/\r\n *\r\n */\r\n\r\n@ccclass('poly')\r\nexport class poly extends Component {\r\n    // [1]\r\n    // dummy = '';\r\n\r\n    // [2]\r\n    // @property\r\n    // serializableDummy = 0;\r\n\r\n    start() {\r\n\r\n        // this.node.on(Node.EventType.TOUCH_START, (e: EventTouch) => {\r\n        //     let bHit = this.checkBtnPolygonCollider(this.node, e)\r\n        //     console.log(bHit);\r\n\r\n        // })\r\n    }\r\n    // private checkBtnPolygonCollider1(btn: cc.Node, e: cc.Event.EventTouch) {\r\n    //     let collider = btn.getComponent(cc.PolygonCollider);\r\n    //     let points = collider.points;\r\n    //     let local = btn.convertToNodeSpaceAR(e.getLocation());\r\n    //     let bHit = cc.Intersection.pointInPolygon(local, points);\r\n    //     return bHit;\r\n    // }\r\n    // update (deltaTime: number) {\r\n    //     // [4]\r\n    // }\r\n    private checkBtnPolygonCollider(btn: Node, e: EventTouch) {\r\n\r\n\r\n        let collider = btn.getComponent(PolygonCollider2D);\r\n        console.log(collider);\r\n\r\n        let points = collider.worldPoints;\r\n        let bHit = Intersection2D.pointInPolygon(e.getUILocation(), points);\r\n        return bHit;\r\n    }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/en/scripting/decorator.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}
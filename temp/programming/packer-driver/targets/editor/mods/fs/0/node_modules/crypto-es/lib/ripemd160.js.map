{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/node_modules/crypto-es/lib/ripemd160.js"],"names":["RIPEMD160Algo","WordArray","Hasher","_zl","create","_zr","_sl","_sr","_hl","_hr","f1","x","y","z","f2","f3","f4","f5","rotl","n","_doReset","_hash","_doProcessBlock","M","offset","_M","i","offset_i","M_offset_i","H","words","hl","hr","zl","zr","sl","sr","al","bl","cl","dl","el","ar","br","cr","dr","er","t","_doFinalize","data","_data","dataWords","nBitsTotal","_nDataBytes","nBitsLeft","sigBytes","length","_process","hash","H_i","clone","call","RIPEMD160","_createHelper","HmacRIPEMD160","_createHmacHelper"],"mappings":"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","sourcesContent":["/** @preserve\n(c) 2012 by Cédric Mesnil. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted\nprovided that the following conditions are met:\n\n    - Redistributions of source code must retain the above copyright notice, this list of\n    conditions and the following disclaimer.\n    - Redistributions in binary form must reproduce the above copyright notice, this list\n    of conditions and the following disclaimer in the documentation and/or other materials\n    provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS\nOR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\nWAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nimport {\n  WordArray,\n  Hasher,\n} from './core.js';\n\n// Constants table\nconst _zl = WordArray.create([\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]);\nconst _zr = WordArray.create([\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]);\nconst _sl = WordArray.create([\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]);\nconst _sr = WordArray.create([\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]);\n\nconst _hl = WordArray.create([0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\nconst _hr = WordArray.create([0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\nconst f1 = (x, y, z) => (x) ^ (y) ^ (z);\n\nconst f2 = (x, y, z) => ((x) & (y)) | ((~x) & (z));\n\nconst f3 = (x, y, z) => ((x) | (~(y))) ^ (z);\n\nconst f4 = (x, y, z) => ((x) & (z)) | ((y) & (~(z)));\n\nconst f5 = (x, y, z) => (x) ^ ((y) | (~(z)));\n\nconst rotl = (x, n) => (x << n) | (x >>> (32 - n));\n\n/**\n * RIPEMD160 hash algorithm.\n */\nexport class RIPEMD160Algo extends Hasher {\n  _doReset() {\n    this._hash = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n  }\n\n  _doProcessBlock(M, offset) {\n    const _M = M;\n\n    // Swap endian\n    for (let i = 0; i < 16; i += 1) {\n      // Shortcuts\n      const offset_i = offset + i;\n      const M_offset_i = _M[offset_i];\n\n      // Swap\n      _M[offset_i] = (\n        (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff)\n          | (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00)\n      );\n    }\n    // Shortcut\n    const H = this._hash.words;\n    const hl = _hl.words;\n    const hr = _hr.words;\n    const zl = _zl.words;\n    const zr = _zr.words;\n    const sl = _sl.words;\n    const sr = _sr.words;\n\n    // Working variables\n    let al = H[0];\n    let bl = H[1];\n    let cl = H[2];\n    let dl = H[3];\n    let el = H[4];\n    let ar = H[0];\n    let br = H[1];\n    let cr = H[2];\n    let dr = H[3];\n    let er = H[4];\n\n    // Computation\n    let t;\n    for (let i = 0; i < 80; i += 1) {\n      t = (al + _M[offset + zl[i]]) | 0;\n      if (i < 16) {\n        t += f1(bl, cl, dl) + hl[0];\n      } else if (i < 32) {\n        t += f2(bl, cl, dl) + hl[1];\n      } else if (i < 48) {\n        t += f3(bl, cl, dl) + hl[2];\n      } else if (i < 64) {\n        t += f4(bl, cl, dl) + hl[3];\n      } else { // if (i<80) {\n        t += f5(bl, cl, dl) + hl[4];\n      }\n      t |= 0;\n      t = rotl(t, sl[i]);\n      t = (t + el) | 0;\n      al = el;\n      el = dl;\n      dl = rotl(cl, 10);\n      cl = bl;\n      bl = t;\n\n      t = (ar + _M[offset + zr[i]]) | 0;\n      if (i < 16) {\n        t += f5(br, cr, dr) + hr[0];\n      } else if (i < 32) {\n        t += f4(br, cr, dr) + hr[1];\n      } else if (i < 48) {\n        t += f3(br, cr, dr) + hr[2];\n      } else if (i < 64) {\n        t += f2(br, cr, dr) + hr[3];\n      } else { // if (i<80) {\n        t += f1(br, cr, dr) + hr[4];\n      }\n      t |= 0;\n      t = rotl(t, sr[i]);\n      t = (t + er) | 0;\n      ar = er;\n      er = dr;\n      dr = rotl(cr, 10);\n      cr = br;\n      br = t;\n    }\n    // Intermediate hash value\n    t = (H[1] + cl + dr) | 0;\n    H[1] = (H[2] + dl + er) | 0;\n    H[2] = (H[3] + el + ar) | 0;\n    H[3] = (H[4] + al + br) | 0;\n    H[4] = (H[0] + bl + cr) | 0;\n    H[0] = t;\n  }\n\n  _doFinalize() {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n\n    const nBitsTotal = this._nDataBytes * 8;\n    const nBitsLeft = data.sigBytes * 8;\n\n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - (nBitsLeft % 32));\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n      (((nBitsTotal << 8) | (nBitsTotal >>> 24)) & 0x00ff00ff)\n        | (((nBitsTotal << 24) | (nBitsTotal >>> 8)) & 0xff00ff00)\n    );\n    data.sigBytes = (dataWords.length + 1) * 4;\n\n    // Hash final blocks\n    this._process();\n\n    // Shortcuts\n    const hash = this._hash;\n    const H = hash.words;\n\n    // Swap endian\n    for (let i = 0; i < 5; i += 1) {\n      // Shortcut\n      const H_i = H[i];\n\n      // Swap\n      H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff)\n        | (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00);\n    }\n\n    // Return final computed hash\n    return hash;\n  }\n\n  clone() {\n    const clone = super.clone.call(this);\n    clone._hash = this._hash.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.RIPEMD160('message');\n *     var hash = CryptoJS.RIPEMD160(wordArray);\n */\nexport const RIPEMD160 = Hasher._createHelper(RIPEMD160Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n */\nexport const HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160Algo);\n"]}
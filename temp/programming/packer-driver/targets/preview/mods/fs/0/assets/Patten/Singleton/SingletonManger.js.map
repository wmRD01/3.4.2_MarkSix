{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Patten/Singleton/SingletonManger.ts"],"names":["SingletManager","js","instance","_instance","constructor","componentClass","Map","set","self","name","getClassName","has","get","getAll","deleteAll","singleton","values","clear","delete"],"mappings":";;;kCASqBA,c;;;;;;;;;;;;;;;AATZC,MAAAA,E,OAAAA,E;;;;;;;AAGT;AACA;AACA;AACA;AACA;AACA;yBACqBD,c,GAAN,MAAMA,cAAN,CAAqB;AAIhC;AACJ;AACA;AACA;AACA;AAGuB,mBAARE,QAAQ,GAAmB;AAClC,cAAI,CAAC,KAAKC,SAAV,EAAqB;AACjB,iBAAKA,SAAL,GAAiB,IAAIH,cAAJ,EAAjB;AACH;;AACD,iBAAO,KAAKG,SAAZ;AACH;;AAGOC,QAAAA,WAAW,GAAG;AAAA;;AAClB,eAAKC,cAAL,GAAsB,IAAIC,GAAJ,EAAtB;AACH;AAED;AACJ;AACA;AACA;;;AACWC,QAAAA,GAAG,CAA2BC,IAA3B,EAAoC;AAC1C;AACA;AAEA,cAAMC,IAAI,GAAGR,EAAE,CAACS,YAAH,CAAgBF,IAAhB,CAAb;;AACA,cAAI,KAAKH,cAAL,CAAoBM,GAApB,CAAwBF,IAAxB,CAAJ,EAAmC,CAC/B;AACH,WAFD,MAEO;AACH,iBAAKJ,cAAL,CAAoBE,GAApB,CAAwBE,IAAxB,EAA8BD,IAA9B;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;;;AACWI,QAAAA,GAAG,CAA2BH,IAA3B,EAA4C;AAClD,cAAI,CAAC,KAAKJ,cAAL,CAAoBM,GAApB,CAAwBF,IAAxB,CAAL,EAAoC;AAChC;AACA,mBAAO,IAAP;AACH;;AACD,iBAAO,KAAKJ,cAAL,CAAoBO,GAApB,CAAwBH,IAAxB,CAAP;AACH;AAED;AACJ;AACA;AACA;;;AACII,QAAAA,MAAM,GAAG;AACL,iBAAO,KAAKR,cAAZ;AACH;AAED;AACJ;AACA;;;AACIS,QAAAA,SAAS,GAAG;AACR,eAAK,IAAIC,SAAT,IAAsB,KAAKV,cAAL,CAAoBW,MAApB,EAAtB,EAAoD;AAChDD,YAAAA,SAAS,CAACE,KAAV;AACH;;AACD,eAAKZ,cAAL,GAAsB,IAAtB;AACH;AAED;AACJ;AACA;AACA;;;AACIa,QAAAA,MAAM,CAACT,IAAD,EAAkB;AACpB,cAAI,KAAKJ,cAAL,CAAoBM,GAApB,CAAwBF,IAAxB,CAAJ,EAAmC;AAC/B,iBAAKJ,cAAL,CAAoBO,GAApB,CAAwBH,IAAxB,EAA8BQ,KAA9B;AACA,iBAAKZ,cAAL,CAAoBa,MAApB,CAA2BT,IAA3B;AACH,WAHD,MAGO,CACH;AACH;AACJ;;AAjF+B,O;;sBAAfT,c","sourcesContent":["import { js } from \"cc\";\r\nimport IBaseSingleton from \"./IBaseSingleton\";\r\n\r\n/**\r\n * @Author 蕭立品\r\n * @Description 模板資源管理器\r\n * @Date 2021-12-17 下午 06:42\r\n * @Version 1.0\r\n */\r\nexport default class SingletManager {\r\n\r\n    private static _instance: SingletManager;\r\n\r\n    /**\r\n     * 當前保存的所有單例物件\r\n     * @type {Map<string, any>}\r\n     * @private\r\n     */\r\n    private componentClass: Map<string, IBaseSingleton>;\r\n\r\n    static get instance(): SingletManager {\r\n        if (!this._instance) {\r\n            this._instance = new SingletManager();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n\r\n    private constructor() {\r\n        this.componentClass = new Map<string, IBaseSingleton>();\r\n    }\r\n\r\n    /**\r\n     *  添加單例\r\n     * @param {any} self - 要加入單例的class\r\n     */\r\n    public set<T extends IBaseSingleton>(self: T) {\r\n        // console.log(self.constructor.name);\r\n        // console.log(js.getClassName(self));\r\n\r\n        const name = js.getClassName(self);\r\n        if (this.componentClass.has(name)) {\r\n            // return console.error(\"Adam\", `：${name}`, \"請勿重複實現單例\");\r\n        } else {\r\n            this.componentClass.set(name, self);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拿取單例\r\n     * @param {string} name - 名稱\r\n     * @return {IBaseSingleton}\r\n     */\r\n    public get<T extends IBaseSingleton>(name: string): T {\r\n        if (!this.componentClass.has(name)) {\r\n            // console.error(\"Adam\", \"當前物件尚未添加進管理器中\", name);\r\n            return null;\r\n        }\r\n        return this.componentClass.get(name) as T;\r\n    }\r\n\r\n    /**\r\n     * 獲取全部綁定單例的單例CLASS\r\n     * @return {Map<string, any>}\r\n     */\r\n    getAll() {\r\n        return this.componentClass;\r\n    }\r\n\r\n    /**\r\n     * 清除所有\r\n     */\r\n    deleteAll() {\r\n        for (let singleton of this.componentClass.values()) {\r\n            singleton.clear();\r\n        }\r\n        this.componentClass = null;\r\n    }\r\n\r\n    /**\r\n     * 清除單一\r\n     * @param name\r\n     */\r\n    delete(name: any): void {\r\n        if (this.componentClass.has(name)) {\r\n            this.componentClass.get(name).clear();\r\n            this.componentClass.delete(name);\r\n        } else {\r\n            // console.warn(\"查找不到該物件,無須清除\");\r\n        }\r\n    }\r\n}\r\n"]}
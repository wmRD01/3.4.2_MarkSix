{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Patten/StatePatten.ts"],"names":["State","Context","GameState","LobbyState","PlayerState","ViewState","MessageState","BaseSingleton","setContext","context","stayState","data","changeState","clearState","state","checkState","undefined","transitionTo","_class","newT","requestChange","requestStay","transitionTo_Old"],"mappings":";;;6CAEsBA,K,EAgBhBC,O,EAuFOC,S,EACAC,U,EACAC,W,EACAC,S,EACAC,Y;;;;;;;;;;;;;;;;;;;;;;;AA5GNC,MAAAA,a;;;;;;;uBACeP,K,GAAf,MAAeA,KAAf,CAAqB;AAAA;AAAA;AAAA;;AAEjBQ,QAAAA,UAAU,CAACC,OAAD,EAAmB;AAChC,eAAKA,OAAL,GAAeA,OAAf;AACH;;AAGDC,QAAAA,SAAS,CAACC,IAAD,EAAO;AACZ,eAAKC,WAAL,CAAiBD,IAAjB;AACH;;AATuB,O;;AAgBtBV,MAAAA,O,GAAN,MAAMA,OAAN,SAAsB;AAAA;AAAA,2CAAtB,CAA+C;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAQ3C;AAGAY,QAAAA,UAAU,GAAS;AACf,eAAKC,KAAL,GAAa,IAAb;AACA,eAAKH,IAAL,GAAY,IAAZ;AACH;;AAEDI,QAAAA,UAAU,GAAY;AAClB,iBAAO,KAAKD,KAAL,IAAcE,SAAd,GAA0B,KAA1B,GAAkC,IAAzC;AACH;AACD;AACJ;AACA;;;AACWC,QAAAA,YAAY,CAAkBC,MAAlB,EAAwCP,IAAxC,EAAoD;AAEnE,cAAI,EAAE,KAAKG,KAAL,YAAsBI,MAAxB,CAAJ,EAAqC;AACjC,iBAAKP,IAAL,GAAYA,IAAI,GAAGA,IAAH,GAAU,IAA1B;AACA,gBAAIQ,IAAI,GAAG,IAAID,MAAJ,EAAX;AACA,iBAAKJ,KAAL,GAAaK,IAAb;AACA,iBAAKL,KAAL,CAAWN,UAAX,CAAsB,IAAtB;AACA,iBAAKY,aAAL;AACH,WAND,MAOK;AACD,iBAAKC,WAAL,CAAiBV,IAAjB;AACH;AACJ;AAGD;AACJ;AACA;;;AACWW,QAAAA,gBAAgB,CAACR,KAAD,EAAeH,IAAf,EAAoC;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAKA,IAAL,GAAYA,IAAI,GAAGA,IAAH,GAAU,IAA1B;AACA,eAAKG,KAAL,GAAaA,KAAb,CAVuD,CAWvD;;AACA,eAAKA,KAAL,CAAWN,UAAX,CAAsB,IAAtB;AACA,iBAAO,IAAP;AACH;AAED;AACJ;AACA;;;AACWY,QAAAA,aAAa,GAAS;AACzB;AACA,eAAKN,KAAL,CAAWF,WAAX,CAAuB,KAAKD,IAA5B;AACH;;AAEMU,QAAAA,WAAW,CAACV,IAAD,EAAmB;AACjC,eAAKA,IAAL,GAAYA,IAAI,GAAGA,IAAH,GAAU,IAA1B;AACA,eAAKG,KAAL,CAAWJ,SAAX,CAAqBC,IAArB;AACH,SAnE0C,CAoE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAnF2C,O;;2BAuFlCT,S,GAAN,MAAMA,SAAN,SAAwBD,OAAxB,CAAgC,E;;AAAG;;4BAC7BE,U,GAAN,MAAMA,UAAN,SAAyBF,OAAzB,CAAiC,E;;AAAG;;6BAC9BG,W,GAAN,MAAMA,WAAN,SAA0BH,OAA1B,CAAkC,E;;AAAG;;2BAC/BI,S,GAAN,MAAMA,SAAN,SAAwBJ,OAAxB,CAAgC,E;;AAAG;;8BAC7BK,Y,GAAN,MAAMA,YAAN,SAA2BL,OAA3B,CAAmC,E;;AAAG,O,CAC7C;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import { js } from \"cc\";\r\nimport BaseSingleton from \"./Singleton/BaseSingleton\";\r\nexport abstract class State {\r\n    protected context: Context;\r\n    public setContext(context: Context) {\r\n        this.context = context;\r\n    }\r\n    public abstract changeState(data): void;\r\n\r\n    stayState(data) {\r\n        this.changeState(data);\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass Context extends BaseSingleton<Context>() {\r\n    /**\r\n     * @type {State} A reference to the current state of the Context.\r\n     */\r\n    private state: State;\r\n\r\n    private data: any;\r\n\r\n    // public isStateing: boolean;\r\n\r\n\r\n    clearState(): void {\r\n        this.state = null;\r\n        this.data = null;\r\n    }\r\n\r\n    checkState(): boolean {\r\n        return this.state == undefined ? false : true;\r\n    }\r\n    /**\r\n     * The Context allows changing the State object at runtime.\r\n    */\r\n    public transitionTo<T extends State>(_class: { new(): T }, data?: any) {\r\n\r\n        if (!(this.state instanceof _class)) {\r\n            this.data = data ? data : null\r\n            let newT = new _class();\r\n            this.state = newT as State\r\n            this.state.setContext(this);\r\n            this.requestChange()\r\n        }\r\n        else {\r\n            this.requestStay(data)\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 舊方法\r\n     */\r\n    public transitionTo_Old(state: State, data?: any): Context {\r\n\r\n        // if (this.state != null && MainModel.getClassName(<any>state) == MainModel.getClassName(this.state)) {\r\n        //     console.log(`Context: NowState ${(this.state).constructor.name}.`);\r\n        //     this.isStateing = true\r\n        //     return\r\n        // }\r\n        // this.isStateing = false\r\n        // console.log(`Context: Transition to ${(<any>state).constructor.name}.`);\r\n        this.data = data ? data : null\r\n        this.state = state;\r\n        // this.setMainScript()\r\n        this.state.setContext(this);\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * The Context delegates part of its behavior to the current State object.\r\n     */\r\n    public requestChange(): void {\r\n        // console.log(`requestChange to ${js.getClassName(this.state)}`);\r\n        this.state.changeState(this.data);\r\n    }\r\n\r\n    public requestStay(data?: any): void {\r\n        this.data = data ? data : null\r\n        this.state.stayState(data);\r\n    }\r\n    //打包後變數會被混淆，導致無法知道誰是誰，因此就只能先這樣，等待可以找到被混淆後的js明子再說，暫時先放著了\r\n    // public setMainScript() {\r\n    //     /**想不到更好寫法 先暫時這樣定義單利，雖然多佔2x5個記憶體空間，但目前先這樣 */\r\n    //     if (!(this.state as MainGameState).main && MainGame.instance) {\r\n    //         (this.state as MainGameState).main = MainGame.instance\r\n    //     }\r\n    //     if (!(this.state as MainLobbyState).main && MainLobby.instance) {\r\n    //         (this.state as MainLobbyState).main = MainLobby.instance\r\n    //     }\r\n    //     if (!(this.state as MainLoadingState).main && MainLoading.instance) {\r\n    //         (this.state as MainLoadingState).main = MainLoading.instance\r\n    //     }\r\n    //     // console.log(`main:${(this.state as MainGameState).main}`);\r\n    //     // console.log(`lobby:${(this.state as MainLobbyState).main}`);\r\n    //     // console.log(`loading:${(this.state as MainLoadingState).main}`);\r\n    // }\r\n}\r\n\r\n\r\nexport class GameState extends Context { };\r\nexport class LobbyState extends Context { };\r\nexport class PlayerState extends Context { };\r\nexport class ViewState extends Context { };\r\nexport class MessageState extends Context { };\r\n// export const GameState = new Context();\r\n// export const LobbyState = new Context();\r\n// export const PlayerState = new Context();\r\n// export const ViewState = new Context();\r\n// export const MessageState = new Context();\r\n\r\n// export const TestState = new Context();\r\n// export default new Context();\r\n"]}
{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Plug/DelayTime.ts"],"names":["DelayTime","BaseSingleton","EventMng","CommandType","WebSocketEvent","NotificationType","StartDT","_time","Promise","resolve","reject","DtID","setTimeout","clearTimeout","index","connetDelay","indexOf","splice","push","StartDT_NotClear","StopAllDT","count","length","shift","SetGameHeartrate","setSecond","HeartrateNum","setInterval","getInstance","mapEvnet","get","Pulic","emit","WebSocketSendCommand","sschk","StopGameHeartrate","clearInterval"],"mappings":";;;sGASqBA,S;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAPdC,MAAAA,a;;AACAC,MAAAA,Q;;AACEC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,c,iBAAAA,c;;AACAC,MAAAA,gB,iBAAAA,gB;;;;;;;AAET;yBACqBL,S,GAAN,MAAMA,SAAN,SAAwB;AAAA;AAAA,2CAAxB,CAAmD;AAAA;AAAA;;AAAA,+CACjC,EADiC;;AAAA,gDAEvC,CAFuC;AAAA;;AAGxDM,QAAAA,OAAO,CAACC,KAAD,EAAgB;AAAA;;AAAA;AACzB;AAEA,mBAAO,IAAIC,OAAJ,CAAkB,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC1C,kBAAIC,IAAI,GAAGC,UAAU,CAAC,MAAM;AACxBH,gBAAAA,OAAO;AACPI,gBAAAA,YAAY,CAACF,IAAD,CAAZ,CAFwB,CAGxB;;AACA,oBAAIG,KAAK,GAAG,KAAI,CAACC,WAAL,CAAiBC,OAAjB,CAAyBL,IAAzB,CAAZ;;AACA,oBAAIG,KAAK,IAAI,CAAC,CAAd,EAAiB;AACb,kBAAA,KAAI,CAACC,WAAL,CAAiBE,MAAjB,CAAwBH,KAAK,GAAG,CAAhC,EAAmCA,KAAnC;AACH,iBAPuB,CAQxB;;AACH,eAToB,EASlBP,KAAK,GAAG,IATU,CAArB;;AAUA,cAAA,KAAI,CAACQ,WAAL,CAAiBG,IAAjB,CAAsBP,IAAtB;AACH,aAZM,CAAP;AAHyB;AAgB5B;;AACKQ,QAAAA,gBAAgB,CAACZ,KAAD,EAAgB;AAAA;;AAAA;AAClC;AAEA,mBAAO,IAAIC,OAAJ,CAAkB,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC1C,kBAAIC,IAAI,GAAGC,UAAU,CAAC,MAAM;AACxBH,gBAAAA,OAAO;AACPI,gBAAAA,YAAY,CAACF,IAAD,CAAZ,CAFwB,CAGxB;;AACA,oBAAIG,KAAK,GAAG,MAAI,CAACC,WAAL,CAAiBC,OAAjB,CAAyBL,IAAzB,CAAZ;;AACA,oBAAIG,KAAK,IAAI,CAAC,CAAd,EAAiB;AACb,kBAAA,MAAI,CAACC,WAAL,CAAiBE,MAAjB,CAAwBH,KAAK,GAAG,CAAhC,EAAmCA,KAAnC;AACH,iBAPuB,CAQxB;;AACH,eAToB,EASlBP,KAAK,GAAG,IATU,CAArB;AAUH,aAXM,CAAP;AAHkC;AAerC;;AACDa,QAAAA,SAAS,GAAG;AACR,cAAIC,KAAK,GAAG,KAAKN,WAAL,CAAiBO,MAA7B;;AACA,eAAK,IAAIR,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGO,KAA5B,EAAmCP,KAAK,EAAxC,EAA4C;AACxC,gBAAIH,IAAI,GAAG,KAAKI,WAAL,CAAiBQ,KAAjB,EAAX;AACAV,YAAAA,YAAY,CAACF,IAAD,CAAZ;AACH;AACJ;;AAEDa,QAAAA,gBAAgB,CAACC,SAAD,EAAoB;AAChC,eAAKC,YAAL,GAAoBC,WAAW,CAAC,MAAM;AAClC;AAEA;AAAA;AAAA,sCAASC,WAAT,CAAqBC,QAArB,CAA8BC,GAA9B,CAAkC;AAAA;AAAA,sDAAiBC,KAAnD,EAA0DC,IAA1D,CAA+D;AAAA;AAAA,kDAAeC,oBAA9E,EAAoG;AAAA;AAAA,4CAAYC,KAAhH,EAAuH,EAAvH;AACH,WAJ8B,EAI5BT,SAAS,GAAG,IAJgB,CAA/B;AAKH;;AACDU,QAAAA,iBAAiB,GAAG;AAChBC,UAAAA,aAAa,CAAC,KAAKV,YAAN,CAAb;AACH;;AArD6D,O","sourcesContent":["//#region \r\n\r\nimport BaseSingleton from \"../Patten/Singleton/BaseSingleton\";\r\nimport EventMng from \"../Script/Manager/EventMng\";\r\nimport { CommandType } from \"../Script/Enum/CommandType\";\r\nimport { WebSocketEvent } from \"../Script/Enum/WebSocketEvent\";\r\nimport { NotificationType } from \"../Script/Enum/NotificationType\";\r\n\r\n//#endregion\r\nexport default class DelayTime extends BaseSingleton<DelayTime>() {\r\n    connetDelay: Array<number> = []\r\n    HeartrateNum: number = 0;\r\n    async StartDT(_time: number) {\r\n        // console.log(this.connetDelay);\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            let DtID = setTimeout(() => {\r\n                resolve()\r\n                clearTimeout(DtID)\r\n                // for (let index = 0; index < this.connetDelay.length; index++) {\r\n                let index = this.connetDelay.indexOf(DtID)\r\n                if (index != -1) {\r\n                    this.connetDelay.splice(index - 1, index)\r\n                }\r\n                // }\r\n            }, _time * 1000)\r\n            this.connetDelay.push(DtID)\r\n        })\r\n    }\r\n    async StartDT_NotClear(_time: number) {\r\n        // console.log(this.connetDelay);\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            let DtID = setTimeout(() => {\r\n                resolve()\r\n                clearTimeout(DtID)\r\n                // for (let index = 0; index < this.connetDelay.length; index++) {\r\n                let index = this.connetDelay.indexOf(DtID)\r\n                if (index != -1) {\r\n                    this.connetDelay.splice(index - 1, index)\r\n                }\r\n                // }\r\n            }, _time * 1000)\r\n        })\r\n    }\r\n    StopAllDT() {\r\n        let count = this.connetDelay.length\r\n        for (let index = 0; index < count; index++) {\r\n            let DtID = this.connetDelay.shift()\r\n            clearTimeout(DtID)\r\n        }\r\n    }\r\n\r\n    SetGameHeartrate(setSecond: number) {\r\n        this.HeartrateNum = setInterval(() => {\r\n            // console.error(\"送心跳\");\r\n\r\n            EventMng.getInstance.mapEvnet.get(NotificationType.Pulic).emit(WebSocketEvent.WebSocketSendCommand, CommandType.sschk, {})\r\n        }, setSecond * 1000)\r\n    }\r\n    StopGameHeartrate() {\r\n        clearInterval(this.HeartrateNum)\r\n    }\r\n}"]}
{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Plug/MyMath.ts"],"names":["MyMath","add","value1","value2","lenght","Math","round","minus","multiply","pow","divide","value","length","val","split","toString","Number","toPrecision","formatAdd00","getPoint","random","addNum","getlen"],"mappings":";;;iBACMA,M;;;;;;;;;;;AAAAA,MAAAA,M,GAAN,MAAMA,MAAN,CAAa;AACT;AACJ;AACA;AACIC,QAAAA,GAAG,CAACC,MAAD,EAAiBC,MAAjB,EAAiCC,MAAjC,EAAkD;AACjD,iBAAOC,IAAI,CAACC,KAAL,CAAWJ,MAAM,GAAG,IAAT,GAAgBC,MAAM,GAAG,IAApC,IAA4C,IAAnD;AACH;AACD;AACJ;AACA;;;AACII,QAAAA,KAAK,CAACL,MAAD,EAAiBC,MAAjB,EAAiCC,MAAjC,EAAkD;AAEnD,iBAAO,CAAEF,MAAM,GAAG,IAAV,GAAmBC,MAAM,GAAG,IAA7B,IAAsC,IAA7C;AACH;AACD;AACJ;AACA;;;AACIK,QAAAA,QAAQ,CAACN,MAAD,EAAiBC,MAAjB,EAAiCC,MAAjC,EAAkD;AACtD,iBAAOC,IAAI,CAACC,KAAL,CAAWJ,MAAM,GAAG,IAAT,IAAiBC,MAAM,GAAG,IAA1B,CAAX,IAA8CE,IAAI,CAACI,GAAL,CAAS,IAAT,EAAe,CAAf,CAArD;AACH;AACD;AACJ;AACA;;;AACIC,QAAAA,MAAM,CAACR,MAAD,EAAiBC,MAAjB,EAAiCC,MAAjC,EAAkD;AACpD,iBAAQF,MAAM,GAAG,IAAV,IAAmBC,MAAM,GAAG,IAA5B,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIG,QAAAA,KAAK,CAACK,KAAD,EAAgBC,MAAhB,EAA4C;AAAA,cAA5BA,MAA4B;AAA5BA,YAAAA,MAA4B,GAAX,CAAW;AAAA;;AAE7C,cAAIC,GAAG,GAAGF,KAAV;AAEA,cAAIG,KAAK,GAAGD,GAAG,CAACE,QAAJ,GAAeD,KAAf,CAAqB,GAArB,CAAZ;;AAEA,cAAIA,KAAK,CAACF,MAAN,GAAe,CAAf,IAAoBE,KAAK,CAAC,CAAD,CAAL,CAASF,MAAT,GAAkBA,MAA1C,EAAkD;AAC9C,mBAAOI,MAAM,CAACH,GAAG,CAACI,WAAJ,CAAgBH,KAAK,CAAC,CAAD,CAAL,CAASF,MAAT,GAAkBA,MAAlC,CAAD,CAAb;AACH,WAFD,MAGK,OAAOD,KAAP;AACR;;AACDO,QAAAA,WAAW,CAACL,GAAD,EAA+B;AACtC,cAAI,OAAOA,GAAP,IAAc,QAAlB,EAA4BA,GAAG,GAAGA,GAAG,CAACE,QAAJ,EAAN;AAC5B,cAAII,QAAQ,GAAGN,GAAG,CAACC,KAAJ,CAAU,GAAV,CAAf;AACA,cAAIM,MAAM,GAAG,CAAb;AACA,cAAIC,MAAM,GAAG,EAAb;;AACA,cAAIF,QAAQ,CAACP,MAAT,GAAkB,CAAtB,EAAwB;AACxB;AACI,kBAAIU,MAAM,GAAGH,QAAQ,CAAC,CAAD,CAAR,CAAYP,MAAzB;;AACA,kBAAIU,MAAM,IAAI,CAAd,EAAiB;AACb;AACAD,gBAAAA,MAAM,GAAG,GAAT;AACA,uBAAOR,GAAG,GAAGQ,MAAb;AACH,eAJD,MAKK,OAAOR,GAAP;AACR,aATD,MAUK;AAAC;AACF;AACAQ,YAAAA,MAAM,GAAG,KAAT;AACA,mBAAOR,GAAG,GAAGQ,MAAb;AACH;AAEJ;;AAhEQ,O;;yBAkEE,IAAIrB,MAAJ,E","sourcesContent":["\r\nclass MyMath {\r\n    /**\r\n    * 加法\r\n    */\r\n    add(value1: number, value2: number, lenght?: number) {\r\n        return Math.round(value1 * 1000 + value2 * 1000) / 1000\r\n    }\r\n    /**\r\n   * 減法\r\n   */\r\n    minus(value1: number, value2: number, lenght?: number) {\r\n\r\n        return ((value1 * 1000) - (value2 * 1000)) / 1000\r\n    }\r\n    /**\r\n   * 乘法\r\n   */\r\n    multiply(value1: number, value2: number, lenght?: number) {\r\n        return Math.round(value1 * 1000 * (value2 * 1000)) / Math.pow(1000, 2)\r\n    }\r\n    /**\r\n   * 除法\r\n   */\r\n    divide(value1: number, value2: number, lenght?: number) {\r\n        return (value1 * 1000) / (value2 * 1000)\r\n    }\r\n    /**\r\n     * 四捨五入法\r\n     * @param value \r\n     * @param length \r\n     * @returns \r\n     */\r\n    round(value: number, length: number = 4): number {\r\n\r\n        let val = value\r\n\r\n        let split = val.toString().split('.')\r\n\r\n        if (split.length > 1 && split[1].length > length) {\r\n            return Number(val.toPrecision(split[0].length + length));\r\n        }\r\n        else return value\r\n    }\r\n    formatAdd00(val: string | number): string {\r\n        if (typeof val != \"string\") val = val.toString();\r\n        let getPoint = val.split('.')\r\n        let random = 0;\r\n        let addNum = \"\";\r\n        if (getPoint.length > 1)//代表有小數點\r\n        {\r\n            let getlen = getPoint[1].length\r\n            if (getlen == 1) {\r\n                // random = Math.floor(Math.random() * 10);\r\n                addNum = \"0\";\r\n                return val + addNum\r\n            }\r\n            else return val\r\n        }\r\n        else {//沒有小數點\r\n            // random = Math.floor(Math.random() * 100);\r\n            addNum = \".00\";\r\n            return val + addNum\r\n        }\r\n\r\n    }\r\n}\r\nexport default new MyMath();"]}
{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Plug/jscrypto-1.0.3/bin/pre_publish.js"],"names":["path","require","fs","packageJson","distDir","join","__dirname","copyFileToPublish","fileName","srcPath","destPath","existsSync","copyFileSync","dependencies","devDependencies","scripts","writeFileSync","JSON","stringify","srcBinFile","distBinDir","distBinFile","rmdirSync","recursive","mkdirSync"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,cAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,cAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,cAAME,WAAW,GAAGF,OAAO,CAAC,iBAAD,CAA3B;;AAEA,cAAMG,OAAO,GAAGJ,IAAI,CAACK,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,MAA3B,CAAhB;;AAEA,cAAMC,iBAAiB,GAAIC,QAAD,IAAc;AACtC,gBAAMC,OAAO,GAAGT,IAAI,CAACK,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2BE,QAA3B,CAAhB;AACA,gBAAME,QAAQ,GAAGV,IAAI,CAACK,IAAL,CAAUD,OAAV,EAAmBI,QAAnB,CAAjB;;AACA,gBAAGN,EAAE,CAACS,UAAH,CAAcF,OAAd,CAAH,EAA0B;AACxBP,cAAAA,EAAE,CAACU,YAAH,CAAgBH,OAAhB,EAAyBC,QAAzB;AACD;AACF,WAND;;AAQAH,UAAAA,iBAAiB,CAAC,WAAD,CAAjB;AACAA,UAAAA,iBAAiB,CAAC,QAAD,CAAjB;AACAA,UAAAA,iBAAiB,CAAC,cAAD,CAAjB;AACAA,UAAAA,iBAAiB,CAAC,SAAD,CAAjB;AAEA,cAAG,OAAOJ,WAAW,CAACU,YAAnB,KAAoC,WAAvC,EAAoD,OAAOV,WAAW,CAACU,YAAnB;AACpD,cAAG,OAAOV,WAAW,CAACW,eAAnB,KAAuC,WAA1C,EAAuD,OAAOX,WAAW,CAACW,eAAnB;AACvD,cAAG,OAAOX,WAAW,CAACY,OAAnB,KAA+B,WAAlC,EAA+C,OAAOZ,WAAW,CAACY,OAAnB;AAE/Cb,UAAAA,EAAE,CAACc,aAAH,CAAiBhB,IAAI,CAACK,IAAL,CAAUD,OAAV,EAAmB,cAAnB,CAAjB,EAAqDa,IAAI,CAACC,SAAL,CAAef,WAAf,EAA4B,IAA5B,EAAkC,CAAlC,CAArD;AAEA,cAAMgB,UAAU,GAAGnB,IAAI,CAACK,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,KAA3B,EAAkC,QAAlC,CAAnB;AACA,cAAMc,UAAU,GAAGpB,IAAI,CAACK,IAAL,CAAUD,OAAV,EAAmB,KAAnB,CAAnB;AACA,cAAMiB,WAAW,GAAGrB,IAAI,CAACK,IAAL,CAAUD,OAAV,EAAmB,KAAnB,EAA0B,QAA1B,CAApB;;AACA,cAAGF,EAAE,CAACS,UAAH,CAAcS,UAAd,CAAH,EAA6B;AAC3BlB,YAAAA,EAAE,CAACoB,SAAH,CAAaF,UAAb,EAAyB;AAACG,cAAAA,SAAS,EAAE;AAAZ,aAAzB;AACD;;AACDrB,UAAAA,EAAE,CAACsB,SAAH,CAAaJ,UAAb;AACAlB,UAAAA,EAAE,CAACU,YAAH,CAAgBO,UAAhB,EAA4BE,WAA5B","sourcesContent":["const path = require(\"path\");\nconst fs = require(\"fs\");\nconst packageJson = require(\"../package.json\");\n\nconst distDir = path.join(__dirname, \"..\", \"dist\");\n\nconst copyFileToPublish = (fileName) => {\n  const srcPath = path.join(__dirname, \"..\", fileName);\n  const destPath = path.join(distDir, fileName);\n  if(fs.existsSync(srcPath)){\n    fs.copyFileSync(srcPath, destPath);\n  }\n};\n\ncopyFileToPublish(\"README.md\");\ncopyFileToPublish(\"API.md\");\ncopyFileToPublish(\"REFERENCE.md\");\ncopyFileToPublish(\"LICENSE\");\n\nif(typeof packageJson.dependencies !== \"undefined\") delete packageJson.dependencies;\nif(typeof packageJson.devDependencies !== \"undefined\") delete packageJson.devDependencies;\nif(typeof packageJson.scripts !== \"undefined\") delete packageJson.scripts;\n\nfs.writeFileSync(path.join(distDir, \"package.json\"), JSON.stringify(packageJson, null, 2));\n\nconst srcBinFile = path.join(__dirname, \"..\", \"bin\", \"cli.js\");\nconst distBinDir = path.join(distDir, \"bin\");\nconst distBinFile = path.join(distDir, \"bin\", \"cli.js\");\nif(fs.existsSync(distBinDir)){\n  fs.rmdirSync(distBinDir, {recursive: true});\n}\nfs.mkdirSync(distBinDir);\nfs.copyFileSync(srcBinFile, distBinFile);\n"]}
{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Plug/jscrypto-1.0.3/src/RIPEMD160.ts"],"names":["RIPEMD160","f1","x","y","z","f2","f3","f4","f5","rotl","n","Hasher","Word32Array","_zl","_zr","_sl","_sr","_hl","_hr","constructor","props","_props","hash","_hash","clone","_doReset","_doProcessBlock","words","offset","i","offsetI","wordsOffsetI","H","hl","hr","zl","zr","sl","sr","al","bl","cl","dl","el","ar","br","cr","dr","er","t","_doFinalize","data","_data","dataWords","nBitsTotal","_nBytes","nBitsLeft","nSigBytes","length","_process","Hi","blockSize","_blockSize","nBytes","message","finalize"],"mappings":"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","sourcesContent":["/** @preserve\n(c) 2012 by Cédric Mesnil. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification,\n are permitted provided that the following conditions are met:\n \n- Redistributions of source code must retain the above copyright notice,\n  this list of conditions and the following disclaimer.\n- Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n \nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\nIN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport {Hasher, HasherProps} from \"./lib/algorithm/Hasher\";\nimport {Word32Array} from \"./lib/Word32Array\";\n\nexport interface RIPEMD160Props extends HasherProps {\n  hash: Word32Array;\n}\n\n// Constants table\nconst _zl = new Word32Array([\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13,\n]);\n\nconst _zr = new Word32Array([\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11,\n]);\n\nconst _sl = new Word32Array([\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6,  8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6,\n]);\n\nconst _sr = new Word32Array([\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11,\n]);\n\nconst _hl =  new Word32Array([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\nconst _hr =  new Word32Array([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\nfunction f1(x: number, y: number, z: number) {\n  return ((x) ^ (y) ^ (z));\n  \n}\n\nfunction f2(x: number, y: number, z: number) {\n  return (((x)&(y)) | ((~x)&(z)));\n}\n\nfunction f3(x: number, y: number, z: number) {\n  return (((x) | (~(y))) ^ (z));\n}\n\nfunction f4(x: number, y: number, z: number) {\n  return (((x) & (z)) | ((y)&(~(z))));\n}\n\nfunction f5(x: number, y: number, z: number) {\n  return ((x) ^ ((y) |(~(z))));\n  \n}\n\nfunction rotl(x: number, n: number) {\n  return (x<<n) | (x>>>(32-n));\n}\n\nexport class RIPEMD160 extends Hasher {\n  protected _props?: Partial<RIPEMD160Props>;\n  private _hash: Word32Array = new Word32Array([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n  \n  public constructor(props?: RIPEMD160Props) {\n    super(props);\n    this._props = props;\n    if(props && typeof props.hash !== \"undefined\"){\n      this._hash = props.hash.clone();\n    }\n  }\n  \n  protected _doReset() {\n    this._hash = new Word32Array([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n  }\n  \n  protected _doProcessBlock(words: number[], offset: number) {\n    // Swap endian\n    for(let i = 0; i < 16; i++) {\n      // Shortcuts\n      const offsetI = offset + i;\n      const wordsOffsetI = words[offsetI];\n    \n      // Swap\n      words[offsetI] = (\n        (((wordsOffsetI << 8)  | (wordsOffsetI >>> 24)) & 0x00ff00ff) |\n        (((wordsOffsetI << 24) | (wordsOffsetI >>> 8))  & 0xff00ff00)\n      );\n    }\n    // Shortcut\n    const H  = this._hash.words;\n    const hl = _hl.words;\n    const hr = _hr.words;\n    const zl = _zl.words;\n    const zr = _zr.words;\n    const sl = _sl.words;\n    const sr = _sr.words;\n  \n    // Working variables\n    let al: number;\n    let bl: number;\n    let cl: number;\n    let dl: number;\n    let el: number;\n    let ar: number;\n    let br: number;\n    let cr: number;\n    let dr: number;\n    let er: number;\n  \n    ar = al = H[0];\n    br = bl = H[1];\n    cr = cl = H[2];\n    dr = dl = H[3];\n    er = el = H[4];\n    // Computation\n    let t: number;\n    for(let i = 0; i < 80; i += 1){\n      t = (al +  words[offset+zl[i]])|0;\n      if (i<16){\n        t +=  f1(bl,cl,dl) + hl[0];\n      } else if (i<32) {\n        t +=  f2(bl,cl,dl) + hl[1];\n      } else if (i<48) {\n        t +=  f3(bl,cl,dl) + hl[2];\n      } else if (i<64) {\n        t +=  f4(bl,cl,dl) + hl[3];\n      } else {// if (i<80) {\n        t +=  f5(bl,cl,dl) + hl[4];\n      }\n      t = t|0;\n      t =  rotl(t,sl[i]);\n      t = (t+el)|0;\n      al = el;\n      el = dl;\n      dl = rotl(cl, 10);\n      cl = bl;\n      bl = t;\n    \n      t = (ar + words[offset+zr[i]])|0;\n      if (i<16){\n        t +=  f5(br,cr,dr) + hr[0];\n      } else if (i<32) {\n        t +=  f4(br,cr,dr) + hr[1];\n      } else if (i<48) {\n        t +=  f3(br,cr,dr) + hr[2];\n      } else if (i<64) {\n        t +=  f2(br,cr,dr) + hr[3];\n      } else {// if (i<80) {\n        t +=  f1(br,cr,dr) + hr[4];\n      }\n      t = t|0;\n      t =  rotl(t,sr[i]) ;\n      t = (t+er)|0;\n      ar = er;\n      er = dr;\n      dr = rotl(cr, 10);\n      cr = br;\n      br = t;\n    }\n    // Intermediate hash value\n    t    = (H[1] + cl + dr)|0;\n    H[1] = (H[2] + dl + er)|0;\n    H[2] = (H[3] + el + ar)|0;\n    H[3] = (H[4] + al + br)|0;\n    H[4] = (H[0] + bl + cr)|0;\n    H[0] =  t;\n  }\n  \n  protected _doFinalize(): Word32Array {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n  \n    const nBitsTotal = this._nBytes * 8;\n    const nBitsLeft = data.nSigBytes * 8;\n  \n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n      (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n      (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n    );\n    data.nSigBytes = (dataWords.length + 1) * 4;\n  \n    // Hash final blocks\n    this._process();\n  \n    // Shortcuts\n    const hash = this._hash;\n    const H = hash.words;\n  \n    // Swap endian\n    for (let i = 0; i < 5; i++) {\n      // Shortcut\n      const Hi = H[i];\n    \n      // Swap\n      H[i] = (((Hi << 8)  | (Hi >>> 24)) & 0x00ff00ff) |\n        (((Hi << 24) | (Hi >>> 8))  & 0xff00ff00);\n    }\n  \n    // Return final computed hash\n    return hash;\n  }\n  \n  public clone(){\n    const props = {hash: this._hash, blockSize: this._blockSize, data: this._data, nBytes: this._nBytes};\n    return new RIPEMD160(props);\n  }\n  \n  public static hash(message: Word32Array|string, props?: RIPEMD160Props){\n    return new RIPEMD160(props).finalize(message);\n  }\n}\n"]}
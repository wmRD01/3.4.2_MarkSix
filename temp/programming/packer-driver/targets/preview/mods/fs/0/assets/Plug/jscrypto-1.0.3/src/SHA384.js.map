{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Plug/jscrypto-1.0.3/src/SHA384.ts"],"names":["SHA384","Word64","Word64Array","SHA512","constructor","props","_props","hash","_hash","clone","_doReset","_doFinalize","call","nSigBytes","blockSize","_blockSize","data","_data","nBytes","_nBytes","message","finalize"],"mappings":";;;2DASaA,M;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AATLC,MAAAA,M,iBAAAA,M;AAAQC,MAAAA,W,iBAAAA,W;;AACRC,MAAAA,M,iBAAAA,M;;;;;;;wBAQKH,M,GAAN,MAAMA,MAAN;AAAA;AAAA,4BAA4B;AAS1BI,QAAAA,WAAW,CAACC,KAAD,EAA+B;AAC/C,gBAAMA,KAAN;;AAD+C;;AAAA,yCAPlB;AAAA;AAAA,0CAAgB,CAC7C;AAAA;AAAA,gCAAW,UAAX,EAAuB,UAAvB,CAD6C,EACT;AAAA;AAAA,gCAAW,UAAX,EAAuB,UAAvB,CADS,EAE7C;AAAA;AAAA,gCAAW,UAAX,EAAuB,UAAvB,CAF6C,EAET;AAAA;AAAA,gCAAW,UAAX,EAAuB,UAAvB,CAFS,EAG7C;AAAA;AAAA,gCAAW,UAAX,EAAuB,UAAvB,CAH6C,EAGT;AAAA;AAAA,gCAAW,UAAX,EAAuB,UAAvB,CAHS,EAI7C;AAAA;AAAA,gCAAW,UAAX,EAAuB,UAAvB,CAJ6C,EAIT;AAAA;AAAA,gCAAW,UAAX,EAAuB,UAAvB,CAJS,CAAhB,CAOkB;;AAE/C,eAAKC,MAAL,GAAcD,KAAd;;AACA,cAAGA,KAAK,IAAI,OAAOA,KAAK,CAACE,IAAb,KAAsB,WAAlC,EAA8C;AAC5C,iBAAKC,KAAL,GAAaH,KAAK,CAACE,IAAN,CAAWE,KAAX,EAAb;AACD;AACF;;AAESC,QAAAA,QAAQ,GAAG;AACnB,eAAKF,KAAL,GAAa;AAAA;AAAA,0CAAgB,CAC3B;AAAA;AAAA,gCAAW,UAAX,EAAuB,UAAvB,CAD2B,EACS;AAAA;AAAA,gCAAW,UAAX,EAAuB,UAAvB,CADT,EAE3B;AAAA;AAAA,gCAAW,UAAX,EAAuB,UAAvB,CAF2B,EAES;AAAA;AAAA,gCAAW,UAAX,EAAuB,UAAvB,CAFT,EAG3B;AAAA;AAAA,gCAAW,UAAX,EAAuB,UAAvB,CAH2B,EAGS;AAAA;AAAA,gCAAW,UAAX,EAAuB,UAAvB,CAHT,EAI3B;AAAA;AAAA,gCAAW,UAAX,EAAuB,UAAvB,CAJ2B,EAIS;AAAA;AAAA,gCAAW,UAAX,EAAuB,UAAvB,CAJT,CAAhB,CAAb;AAMD;;AAESG,QAAAA,WAAW,GAAgB;AACnC,cAAMJ,IAAI,GAAG,MAAMI,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAb;;AACAL,UAAAA,IAAI,CAACM,SAAL,IAAkB,EAAlB;AACA,iBAAON,IAAP;AACD;;AAEME,QAAAA,KAAK,GAAE;AACZ,cAAMJ,KAAK,GAAG;AAACE,YAAAA,IAAI,EAAE,KAAKC,KAAZ;AAAmBM,YAAAA,SAAS,EAAE,KAAKC,UAAnC;AAA+CC,YAAAA,IAAI,EAAE,KAAKC,KAA1D;AAAiEC,YAAAA,MAAM,EAAE,KAAKC;AAA9E,WAAd;AACA,iBAAO,IAAInB,MAAJ,CAAWK,KAAX,CAAP;AACD;;AAEiB,eAAJE,IAAI,CAACa,OAAD,EAA8Bf,KAA9B,EAAkD;AAClE,iBAAO,IAAIL,MAAJ,CAAWK,KAAX,EAAkBgB,QAAlB,CAA2BD,OAA3B,CAAP;AACD;;AAvCgC,O","sourcesContent":["import {Word64, Word64Array} from \"./lib/Word64Array\";\nimport {SHA512} from \"./SHA512\";\nimport type {HasherProps} from \"./lib/algorithm/Hasher\";\nimport type {Word32Array} from \"./lib/Word32Array\";\n\nexport interface SHA384Props extends HasherProps {\n  hash: Word64Array;\n}\n\nexport class SHA384 extends SHA512 {\n  protected _props?: Partial<SHA384Props>;\n  protected _hash: Word64Array = new Word64Array([\n    new Word64(0xcbbb9d5d, 0xc1059ed8), new Word64(0x629a292a, 0x367cd507),\n    new Word64(0x9159015a, 0x3070dd17), new Word64(0x152fecd8, 0xf70e5939),\n    new Word64(0x67332667, 0xffc00b31), new Word64(0x8eb44a87, 0x68581511),\n    new Word64(0xdb0c2e0d, 0x64f98fa7), new Word64(0x47b5481d, 0xbefa4fa4)\n  ]);\n  \n  public constructor(props?: Partial<SHA384Props>) {\n    super(props);\n    this._props = props;\n    if(props && typeof props.hash !== \"undefined\"){\n      this._hash = props.hash.clone();\n    }\n  }\n  \n  protected _doReset() {\n    this._hash = new Word64Array([\n      new Word64(0xcbbb9d5d, 0xc1059ed8), new Word64(0x629a292a, 0x367cd507),\n      new Word64(0x9159015a, 0x3070dd17), new Word64(0x152fecd8, 0xf70e5939),\n      new Word64(0x67332667, 0xffc00b31), new Word64(0x8eb44a87, 0x68581511),\n      new Word64(0xdb0c2e0d, 0x64f98fa7), new Word64(0x47b5481d, 0xbefa4fa4)\n    ]);\n  }\n  \n  protected _doFinalize(): Word32Array {\n    const hash = super._doFinalize.call(this);\n    hash.nSigBytes -= 16;\n    return hash;\n  }\n  \n  public clone(){\n    const props = {hash: this._hash, blockSize: this._blockSize, data: this._data, nBytes: this._nBytes};\n    return new SHA384(props);\n  }\n  \n  public static hash(message: Word32Array|string, props?: SHA384Props){\n    return new SHA384(props).finalize(message);\n  }\n}\n"]}
{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Plug/jscrypto-1.0.3/src/lib/algorithm/cipher/pad/ISO10126.ts"],"names":["pad","data","blockSize","blockSizeBytes","nPaddingBytes","nSigBytes","concat","random","unpad","words","Word32Array","ISO10126"],"mappings":";;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,GAAT,CAAaC,IAAb,EAAgCC,SAAhC,EAAkD;AAChD;AACA,QAAMC,cAAc,GAAGD,SAAS,GAAG,CAAnC,CAFgD,CAIhD;;AACA,QAAME,aAAa,GAAGD,cAAc,GAAGF,IAAI,CAACI,SAAL,GAAiBF,cAAxD,CALgD,CAOhD;;AACAF,IAAAA,IAAI,CACDK,MADH,CACU;AAAA;AAAA,oCAAYC,MAAZ,CAAmBH,aAAa,GAAG,CAAnC,CADV,EAEGE,MAFH,CAEU;AAAA;AAAA,oCAAgB,CAACF,aAAa,IAAI,EAAlB,CAAhB,EAAuC,CAAvC,CAFV;AAGD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,WAASI,KAAT,CAAeP,IAAf,EAAiC;AAC/B;AACA,QAAMG,aAAa,GAAGH,IAAI,CAACQ,KAAL,CAAYR,IAAI,CAACI,SAAL,GAAiB,CAAlB,KAAyB,CAApC,IAAyC,IAA/D,CAF+B,CAI/B;;AACAJ,IAAAA,IAAI,CAACI,SAAL,IAAkBD,aAAlB;AACD;;;;;;;;;;;;;;;;AArCOM,MAAAA,W,iBAAAA,W;;;;;;;0BAuCKC,Q,GAAgB;AAC3BX,QAAAA,GAD2B;AAE3BQ,QAAAA;AAF2B,O","sourcesContent":["import {Word32Array} from \"../../../Word32Array\";\nimport type {Pad} from \"./type\";\n\n/**\n * ISO10126 padding strategy\n *\n * @param {Word32Array} data The data to pad.\n * @param {number} blockSize The multiple that the data should be padded to.\n * @example\n *   ISO10126.pad(wordArray, 4);\n */\nfunction pad(data: Word32Array, blockSize: number){\n  // Shortcut\n  const blockSizeBytes = blockSize * 4;\n  \n  // Count padding bytes\n  const nPaddingBytes = blockSizeBytes - data.nSigBytes % blockSizeBytes;\n  \n  // Pad\n  data\n    .concat(Word32Array.random(nPaddingBytes - 1))\n    .concat(new Word32Array([nPaddingBytes << 24], 1));\n}\n\n/**\n * Unpads data that had been padded with ISO10126 padding strategy.\n *\n * @param {Word32Array} data The data to unpad.\n * @example\n *   ISO10126.unpad(wordArray);\n */\nfunction unpad(data: Word32Array){\n  // Get number of padding bytes from last byte\n  const nPaddingBytes = data.words[(data.nSigBytes - 1) >>> 2] & 0xff;\n  \n  // Remove padding\n  data.nSigBytes -= nPaddingBytes;\n}\n\nexport const ISO10126: Pad = {\n  pad,\n  unpad,\n};\n"]}
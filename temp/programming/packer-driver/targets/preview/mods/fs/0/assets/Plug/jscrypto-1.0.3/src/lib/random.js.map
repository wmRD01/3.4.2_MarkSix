{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Plug/jscrypto-1.0.3/src/lib/random.ts"],"names":["makeRandFunction","window","c","crypto","msCrypto","console","warn","rand","Math","floor","random","Error","getRandomValues","Uint32Array","global","randomBytes","readInt32LE","require","__non_webpack_require__","isIE"],"mappings":";;;;;AAeA,WAASA,gBAAT,GAA0C;AACxC,QAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,UAAMC,CAAC,GAAGD,MAAM,CAACE,MAAP,IAAiBF,MAAM,CAACG,QAAlC;;AACA,UAAI,CAACF,CAAL,EAAQ;AACN,YAAG;AAAA;AAAA,0BAAK,GAAL,EAAU,EAAV,CAAH,EAAiB;AACfG,UAAAA,OAAO,CAACC,IAAR,CAAa,gGAAb;AACA,iBAAO,SAASC,IAAT,GAAe;AACpB,mBAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,GAAzC;AACD,WAFD;AAGD;;AACD,cAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACD,aAAO,SAASJ,IAAT,GAAe;AACpB,eAAQL,CAAD,CAAcU,eAAd,CAA8B,IAAIC,WAAJ,CAAgB,CAAhB,CAA9B,EAAkD,CAAlD,CAAP;AACD,OAFD;AAGD,KAdD,MAeK,IAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACX,MAA5C,EAAoD;AACvD,aAAO,SAASI,IAAT,GAAe;AACpB,eAASO,MAAM,CAACX,MAAT,CAA2CY,WAA3C,CAAuD,CAAvD,EAA0DC,WAA1D,EAAP;AACD,OAFD;AAGD,KAJI,MAKA,IAAG,OAAOC,OAAP,KAAmB,UAAtB,EAAiC;AACpC,aAAO,SAASV,IAAT,GAAe;AACpB;AACA;AACA;AACA,eAAQW,uBAAuB,CAAC,QAAD,CAAxB,CAAkDH,WAAlD,CAA8D,CAA9D,EAAiEC,WAAjE,EAAP;AACD,OALD;AAMD;;AACD,UAAM,IAAIL,KAAJ,CAAU,8BAAV,CAAN;AACD;;;;;;;;;;;;AA7COQ,MAAAA,I,iBAAAA,I;;;;;;;wBA+CKT,M,GAASV,gBAAgB,E","sourcesContent":["import {isIE} from \"./browser\";\n\ninterface WindowEx extends Window {\n  /**\n   * Native (experimental IE 11) crypto from window (Browser)\n   */\n  msCrypto?: Crypto;\n}\n\n/**\n * @ignore\n */\ndeclare let window: WindowEx;\ntype NodeCrypto = { randomBytes: (size: number) => { readInt32LE: () => number } };\n\nfunction makeRandFunction(): () => number {\n  if (typeof window !== \"undefined\") {\n    const c = window.crypto || window.msCrypto;\n    if (!c) {\n      if(isIE(\"<\", 11)){\n        console.warn(\"IE <= 10 uses insecure random generator. Please consider to use IE11 or another modern browser\");\n        return function rand(){\n          return Math.floor(Math.random() * 512) % 256;\n        };\n      }\n      throw new Error(\"Crypto module not found\");\n    }\n    return function rand(){\n      return (c as Crypto).getRandomValues(new Uint32Array(1))[0];\n    };\n  }\n  else if (typeof global !== \"undefined\" && global.crypto) {\n    return function rand(){\n      return ((global.crypto as unknown) as NodeCrypto).randomBytes(4).readInt32LE();\n    };\n  }\n  else if(typeof require === \"function\"){\n    return function rand(){\n      // Prevent webpack to automatically require(\"crypto\").\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return (__non_webpack_require__(\"crypto\") as NodeCrypto).randomBytes(4).readInt32LE();\n    }\n  }\n  throw new Error(\"Unable to find crypto module\");\n}\n\nexport const random = makeRandFunction();\n"]}
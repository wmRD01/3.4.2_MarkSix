{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Plug/jscrypto-1.0.3/test/specs/SHA1.js"],"names":["expect","require","Word32Array","SHA1","describe","it","hash","toString","to","be","sha1","i","update","finalize","message","expectedResult","clone"],"mappings":"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","sourcesContent":["const expect = require(\"expect.js\");\nconst {Word32Array, SHA1} = require(\"../../test/build\");\n\ndescribe(\"sha1\", function(){\n  it(\"digest '' as expected\", function(){\n    expect(SHA1.hash(\"\").toString()).to.be(\"da39a3ee5e6b4b0d3255bfef95601890afd80709\");\n  });\n  it(\"digest 'a' as expected\", function(){\n    expect(SHA1.hash(\"a\").toString()).to.be(\"86f7e437faa5a7fce15d1ddcb9eaeaea377667b8\");\n  });\n  it(\"digest 'abc' as expected\", function(){\n    expect(SHA1.hash(\"abc\").toString()).to.be(\"a9993e364706816aba3e25717850c26c9cd0d89d\");\n  });\n  it(\"digest 'message digest' as expected\", function(){\n    expect(SHA1.hash(\"message digest\").toString()).to.be(\"c12252ceda8be8994d5fa0290a47231c1d16aae3\");\n  });\n  it(\"digest 'abcdefghijklmnopqrstuvwxyz' as expected\", function(){\n    expect(SHA1.hash(\"abcdefghijklmnopqrstuvwxyz\").toString()).to.be(\"32d10c7b8cf96570ca04ce37f2a19d84240d3a89\");\n  });\n  it(\"digest 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789' as expected\", function(){\n    expect(SHA1.hash(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\").toString()).to.be(\"761c457bf73b14d27e9e9265c46f4b4dda11f940\");\n  });\n  it(\"digest '12345678901234567890123456789012345678901234567890123456789012345678901234567890' as expected\", function(){\n    expect(SHA1.hash(\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\").toString()).to.be(\"50abf5706a150990a08b2c5ea40fa0e585554732\");\n  });\n  \n  it(\"update long message\", function(){\n    const sha1 = new SHA1();\n    for(let i=0;i<100;i++){\n      sha1.update(\"12345678901234567890123456789012345678901234567890\");\n    }\n    \n    expect(sha1.finalize().toString()).to.be(\"85e4c4b3933d5553ebf82090409a9d90226d845c\");\n  });\n  \n  it(\"input integrity\", function(){\n    const message = new Word32Array([0x12345678]);\n    const expectedResult = message.toString();\n    SHA1.hash(message);\n    expect(message.toString()).to.be(expectedResult);\n  });\n  \n  it(\"clone\", function(){\n    const sha1 = new SHA1();\n    \n    expect(SHA1.hash(\"a\").toString()).to.be(sha1.update(\"a\").clone().finalize().toString());\n    expect(SHA1.hash(\"ab\").toString()).to.be(sha1.update(\"b\").clone().finalize().toString());\n    expect(SHA1.hash(\"abc\").toString()).to.be(sha1.update(\"c\").clone().finalize().toString());\n  });\n  \n  it(\"shortcut\", function(){\n    expect(SHA1.hash(\"\").toString()).to.be(new SHA1().finalize(\"\").toString());\n  });\n});\n"]}
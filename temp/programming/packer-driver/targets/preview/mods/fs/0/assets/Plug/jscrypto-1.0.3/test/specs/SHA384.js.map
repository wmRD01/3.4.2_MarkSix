{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Plug/jscrypto-1.0.3/test/specs/SHA384.js"],"names":["expect","require","Word32Array","SHA384","describe","it","hash","toString","to","be","sha384","i","update","finalize","clone","message","expectedResult"],"mappings":"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","sourcesContent":["const expect = require(\"expect.js\");\nconst {Word32Array, SHA384} = require(\"../../test/build\");\n\ndescribe(\"sha384\", function(){\n  it(\"digest '' as expected\", function(){\n    expect(SHA384.hash(\"\").toString()).to.be(\"38b060a751ac96384cd9327eb1b1e36a21fdb71114be07434c0cc7bf63f6e1da274edebfe76f65fbd51ad2f14898b95b\");\n  });\n  it(\"digest 'The quick brown fox jumps over the lazy dog' as expected\", function(){\n    expect(SHA384.hash(\"The quick brown fox jumps over the lazy dog\").toString()).to.be(\"ca737f1014a48f4c0b6dd43cb177b0afd9e5169367544c494011e3317dbf9a509cb1e5dc1e85a941bbee3d7f2afbc9b1\");\n  });\n  it(\"digest 'The quick brown fox jumps over the lazy dog.' as expected\", function(){\n    expect(SHA384.hash(\"The quick brown fox jumps over the lazy dog.\").toString()).to.be(\"ed892481d8272ca6df370bf706e4d7bc1b5739fa2177aae6c50e946678718fc67a7af2819a021c2fc34e91bdb63409d7\");\n  });\n  \n  it(\"update long message\", function(){\n    const sha384 = new SHA384();\n    for(let i=0;i<100;i++){\n      sha384.update(\"12345678901234567890123456789012345678901234567890\");\n    }\n    \n    expect(sha384.finalize().toString()).to.be(\"297a519246d6f639a4020119e1f03fc8d77171647b2ff75ea4125b7150fed0cdcc93f8dca1c3c6a624d5e88d780d82cd\");\n  });\n  \n  it(\"clone\", function(){\n    const sha384 = new SHA384();\n    \n    expect(SHA384.hash(\"a\").toString()).to.be(sha384.update(\"a\").clone().finalize().toString());\n    expect(SHA384.hash(\"ab\").toString()).to.be(sha384.update(\"b\").clone().finalize().toString());\n    expect(SHA384.hash(\"abc\").toString()).to.be(sha384.update(\"c\").clone().finalize().toString());\n  });\n  \n  it(\"input integrity\", function(){\n    const message = new Word32Array([0x12345678]);\n    const expectedResult = message.toString();\n    SHA384.hash(message);\n    expect(message.toString()).to.be(expectedResult);\n  });\n  \n  it(\"shortcut\", function(){\n    expect(SHA384.hash(\"\").toString()).to.be(new SHA384().finalize(\"\").toString());\n  });\n});\n"]}
{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Plug/jscrypto-1.0.3/test/specs/encoder/Utf16.js"],"names":["expect","require","Utf16","Utf16LE","Word32Array","describe","it","expectedValue","stringify","to","be","toString","parse"],"mappings":"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","sourcesContent":["const expect = require(\"expect.js\");\nconst {\n  Utf16,\n  Utf16LE,\n  Word32Array,\n} = require(\"../../../test/build\");\n\ndescribe(\"encoder/Utf16\", function(){\n  it(\"test stringify 1\", function(){\n    const expectedValue = \"z\";\n    expect(Utf16.stringify(new Word32Array([0x007a0000], 2))).to.be(expectedValue);\n  });\n  \n  it(\"test stringify 2\", function(){\n    const expectedValue = \"Ê∞¥\";\n    expect(Utf16.stringify(new Word32Array([0x6c340000], 2))).to.be(expectedValue);\n  });\n  \n  it(\"test stringify 3\", function(){\n    const expectedValue = \"êÄÄ\";\n    expect(Utf16.stringify(new Word32Array([0xd800dc00], 4))).to.be(expectedValue);\n  });\n  \n  it(\"test stringify 4\", function(){\n    const expectedValue = \"ùÑû\";\n    expect(Utf16.stringify(new Word32Array([0xd834dd1e], 4))).to.be(expectedValue);\n  });\n  \n  it(\"test stringify 5\", function(){\n    const expectedValue = \"ÙèøΩ\";\n    expect(Utf16.stringify(new Word32Array([0xdbffdffd], 4))).to.be(expectedValue);\n  });\n  \n  it(\"test stringify LE\", function(){\n    const expectedValue = \"ÙèøΩ\";\n    expect(Utf16LE.stringify(new Word32Array([0xffdbfddf], 4))).to.be(expectedValue);\n  });\n  \n  it(\"test parse 1\", function(){\n    const expectedValue = new Word32Array([0x007a0000], 2).toString();\n    expect(Utf16.parse(\"z\").toString()).to.be(expectedValue);\n  });\n  \n  it(\"test parse 2\", function(){\n    const expectedValue = new Word32Array([0x6c340000], 2).toString();\n    expect(Utf16.parse(\"Ê∞¥\").toString()).to.be(expectedValue);\n  });\n  \n  it(\"test parse 3\", function(){\n    const expectedValue = new Word32Array([0xd800dc00], 4).toString();\n    expect(Utf16.parse(\"êÄÄ\").toString()).to.be(expectedValue);\n  });\n  \n  it(\"test parse 4\", function(){\n    const expectedValue = new Word32Array([0xd834dd1e], 4).toString();\n    expect(Utf16.parse(\"ùÑû\").toString()).to.be(expectedValue);\n  });\n  \n  it(\"test parse 5\", function(){\n    const expectedValue = new Word32Array([0xdbffdffd], 4).toString();\n    expect(Utf16.parse(\"ÙèøΩ\").toString()).to.be(expectedValue);\n  });\n  \n  it(\"test parse LE\", function(){\n    const expectedValue = new Word32Array([0xffdbfddf], 4).toString();\n    expect(Utf16LE.parse(\"ÙèøΩ\").toString()).to.be(expectedValue);\n  });\n});\n"]}
{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Plug/jscrypto-1.0.3/test/specs/pad/ISO10126.js"],"names":["expect","require","pad","ISO10126","Word32Array","describe","data","random","before","nBytes","words","i","push","after","it","toString","to","be","unpad"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,cAAMA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACA,cAAM;AAACC,YAAAA,GAAG,EAAE;AAACC,cAAAA;AAAD,aAAN;AAAkBC,YAAAA;AAAlB,cAAiCH,OAAO,CAAC,qBAAD,CAA9C;;AAEAI,UAAAA,QAAQ,CAAC,cAAD,EAAiB,YAAU;AACjC,gBAAMC,IAAI,GAAG,EAAb;AACAA,YAAAA,IAAI,CAACC,MAAL,GAAcH,WAAW,CAACG,MAA1B;AAEAC,YAAAA,MAAM,CAAC,YAAU;AACfJ,cAAAA,WAAW,CAACG,MAAZ,GAAqB,UAASE,MAAT,EAAgB;AACnC,oBAAMC,KAAK,GAAG,EAAd;;AACA,qBAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,MAAd,EAAqBE,CAAC,IAAE,CAAxB,EAA0B;AACxBD,kBAAAA,KAAK,CAACE,IAAN,CAAW,CAAC,UAAD,CAAX;AACD;;AACD,uBAAO,IAAIR,WAAJ,CAAgBM,KAAhB,EAAuBD,MAAvB,CAAP;AACD,eAND;AAOD,aARK,CAAN;AAUAI,YAAAA,KAAK,CAAC,YAAU;AACdT,cAAAA,WAAW,CAACG,MAAZ,GAAqBD,IAAI,CAACC,MAA1B;AACD,aAFI,CAAL;AAIAO,YAAAA,EAAE,CAAC,UAAD,EAAa,YAAU;AACvB,kBAAMR,IAAI,GAAG,IAAIF,WAAJ,CAAgB,CAAC,UAAD,CAAhB,EAA8B,CAA9B,CAAb;AACAD,cAAAA,QAAQ,CAACD,GAAT,CAAaI,IAAb,EAAmB,CAAnB;AAEAN,cAAAA,MAAM,CAACM,IAAI,CAACS,QAAL,EAAD,CAAN,CAAwBC,EAAxB,CAA2BC,EAA3B,CAA8B,IAAIb,WAAJ,CAAgB,CAAC,UAAD,EAAa,UAAb,CAAhB,EAA0CW,QAA1C,EAA9B;AACD,aALC,CAAF;AAOAD,YAAAA,EAAE,CAAC,gBAAD,EAAmB,YAAU;AAC7B,kBAAMR,IAAI,GAAG,IAAIF,WAAJ,CAAgB,CAAC,UAAD,EAAa,UAAb,CAAhB,EAA0C,CAA1C,CAAb;AACAD,cAAAA,QAAQ,CAACD,GAAT,CAAaI,IAAb,EAAmB,CAAnB;AAEAN,cAAAA,MAAM,CAACM,IAAI,CAACS,QAAL,EAAD,CAAN,CAAwBC,EAAxB,CAA2BC,EAA3B,CAA8B,IAAIb,WAAJ,CAAgB,CAAC,UAAD,EAAa,UAAb,CAAhB,EAA0CW,QAA1C,EAA9B;AACD,aALC,CAAF;AAOAD,YAAAA,EAAE,CAAC,YAAD,EAAe,YAAU;AACzB,kBAAMR,IAAI,GAAG,IAAIF,WAAJ,CAAgB,CAAC,UAAD,EAAa,UAAb,CAAhB,CAAb;AACAD,cAAAA,QAAQ,CAACe,KAAT,CAAeZ,IAAf;AAEAN,cAAAA,MAAM,CAACM,IAAI,CAACS,QAAL,EAAD,CAAN,CAAwBC,EAAxB,CAA2BC,EAA3B,CAA8B,IAAIb,WAAJ,CAAgB,CAAC,UAAD,CAAhB,EAA8B,CAA9B,EAAiCW,QAAjC,EAA9B;AACD,aALC,CAAF;AAMD,WAtCO,CAAR","sourcesContent":["const expect = require(\"expect.js\");\nconst {pad: {ISO10126}, Word32Array} = require(\"../../../test/build\");\n\ndescribe(\"pad/ISO10126\", function(){\n  const data = {};\n  data.random = Word32Array.random;\n  \n  before(function(){\n    Word32Array.random = function(nBytes){\n      const words = [];\n      for(let i=0;i<nBytes;i+=4){\n        words.push([0x11223344]);\n      }\n      return new Word32Array(words, nBytes);\n    };\n  });\n  \n  after(function(){\n    Word32Array.random = data.random;\n  });\n  \n  it(\"test pad\", function(){\n    const data = new Word32Array([0xdddddd00], 3);\n    ISO10126.pad(data, 2);\n    \n    expect(data.toString()).to.be(new Word32Array([0xdddddd11, 0x22334405]).toString());\n  });\n  \n  it(\"test pad clamp\", function(){\n    const data = new Word32Array([0xdddddddd, 0xdddddddd], 3);\n    ISO10126.pad(data, 2);\n    \n    expect(data.toString()).to.be(new Word32Array([0xdddddd11, 0x22334405]).toString());\n  });\n  \n  it(\"test unpad\", function(){\n    const data = new Word32Array([0xdddddd11, 0x22334405]);\n    ISO10126.unpad(data);\n    \n    expect(data.toString()).to.be(new Word32Array([0xdddddd00], 3).toString());\n  });\n});\n"]}
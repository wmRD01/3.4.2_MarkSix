{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/Api/GPGAPI/RequestGPG.ts"],"names":["Request","Method","Get","Headers","setMethod","_method","method","setHeaders","_headers","headers","setToken","str","Authorization","setBody","_body","body","deletContentType","setContentType","type","fetchData","_url","callback","console","log","Promise","resolve","reject","data","fetch","then","response","json","catch","err","split","length","ContentType","Json","base","CertifiedEmail","MyInfo","Nickname","DrawHistory","DrawUpcoming","UploadAvatar","NeedToken","ValidateContactInfo","RankList","SendRegisterVerification","NotNeedToken","Body","APIUrl","API","RequestGPG"],"mappings":"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","sourcesContent":["export namespace RequestGPG {\r\n\r\n    export class Request {\r\n        method: Method = Method.Get;\r\n        headers: Headers = new Headers();\r\n        body: string | FormData\r\n        setMethod(_method: Method) {\r\n            this.method = _method;\r\n            return this\r\n        }\r\n        setHeaders(_headers: Headers) {\r\n            this.headers = _headers;\r\n            return this\r\n        }\r\n        setToken(str: string) {\r\n            this.headers.Authorization = str\r\n            return this\r\n        }\r\n        setBody(_body: string | FormData) {\r\n            this.body = _body;\r\n            return this\r\n        }\r\n\r\n        deletContentType() {\r\n            delete this.headers[\"Content-Type\"]\r\n            return this\r\n        }\r\n        setContentType(type: ContentType) {\r\n            this.headers[\"Content-Type\"] = type;\r\n            return this\r\n        }\r\n        async fetchData(_url: string, callback: Function) {\r\n            // console.log(_url);\r\n            console.log(this);\r\n            // console.log(_url.split(\"?\"));\r\n            // console.log(_url.split(\"?\")[0].split(\"/\"));\r\n            // console.log(_url.split(\"?\")[0].split(\"/\")[_url.split(\"?\")[0].split(\"/\").length]);\r\n            return new Promise<void>((resolve, reject) => {\r\n                let data;\r\n                fetch(_url, this)\r\n                    .then(response => response.json())\r\n                    .then(response => data = response)\r\n                    .catch(err => reject)\r\n                    .then(response => console.log(`資料名稱：${_url.split(\"?\")[0].split(\"/\")[_url.split(\"?\")[0].split(\"/\").length - 1]}`))\r\n                    .then(response => console.log(`資料內容`, data))\r\n                    .then(response => callback(data))\r\n                    .then(resolve)\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n    class Headers {\r\n\r\n        [x: string]: string;\r\n        \"Content-Type\": string = ContentType.Json;\r\n        \"Accept\": string = \"application/json;charset=UTF-8\"\r\n        \"Authorization\": string = \"\"\r\n    }\r\n\r\n    export namespace Body {\r\n        export namespace NeedToken {\r\n            export class base {\r\n                sign: string;\r\n            }\r\n\r\n            export class CertifiedEmail extends base {\r\n                verifyCode: string;\r\n                email: string;\r\n            }\r\n            export class MyInfo extends base {\r\n                [x: string]: string;\r\n            }\r\n            export class Nickname extends base {\r\n                nickname: string;\r\n            }\r\n            export class DrawHistory extends base {\r\n                [x: string]: string;\r\n                \"top\": string;\r\n            }\r\n            export class DrawUpcoming extends base {\r\n                [x: string]: string;\r\n            }\r\n            export class UploadAvatar extends base {\r\n                file: File;\r\n            }\r\n\r\n        }\r\n        export namespace NotNeedToken {\r\n            // export class EmailSign {\r\n            //     [x: string]: string;\r\n            //     verifyCode: string;\r\n            //     email: string;\r\n            // }\r\n            export class ValidateContactInfo {\r\n                Phone: string\r\n                Email: string\r\n            }\r\n            export class RankList {\r\n\r\n            }\r\n            export class SendRegisterVerification {\r\n                Locale: string = \"zh-TW\";\r\n                Phone: string;\r\n                Email: string;\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n    export enum ContentType {\r\n        Default = \"\",\r\n        Json = \"application/json, text/plain, */*\",\r\n        FormData = \"multipart/form-data\",\r\n    }\r\n\r\n    export enum Method {\r\n        Get = \"Get\",\r\n        POST = \"POST\",\r\n    }\r\n\r\n    export enum APIUrl {\r\n        playAPI = \"https://play-api.ceis.tw\",\r\n        ids = \"https://ids.ceis.tw\"\r\n    }\r\n    export enum API {\r\n        UploadAvatar = \"/Member/UploadAvatar\",\r\n        CertifiedEmall = \"/Member/CertifiedEmail\",\r\n        MyInfo = \"/Member/MyInfo\",\r\n        Nickname = \"/Member/Nickname\",\r\n        SendRegisterVerification = \"/Token/SendRegisterVerification\",\r\n        ValidateContactInfo = \"/Token/ValidateContactInfo\",\r\n        DrawHistory = \"/Mark6/Draw_History\",\r\n        DrawUpcoming = \"/Mark6/Draw_Upcoming\",\r\n        TopScore =\"/Mark6/Top_Score\",\r\n    }\r\n}\r\n\r\n"]}
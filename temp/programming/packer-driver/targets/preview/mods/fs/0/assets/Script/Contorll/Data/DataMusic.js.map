{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/Data/DataMusic.ts"],"names":["DataMusic","NodePool","sys","ItemType","Map","is_open_music","_is_open_music","value","localStorage","setItem","gameString","MusicBoolean","String","is_open_effect","_is_open_effect","EffectBoolean","volMusic","_volMusic","MusicVolume","toString","volEffect","_volEffect","EffectVolume"],"mappings":";;;gCAQqBA,S;;;;;;;;;AARCC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,G,OAAAA,G;;;;;;;iBAC3BC,Q;AAAAA,QAAAA,Q;AAAAA,QAAAA,Q;AAAAA,QAAAA,Q;AAAAA,QAAAA,Q;SAAAA,Q,KAAAA,Q;;yBAOgBH,S,GAAN,MAAMA,SAAN,CAAgB;AAAA;AAAA,mDACW,IAAIC,QAAJ,EADX;;AAAA;;AAAA,gDAGwB,IAAIG,GAAJ,EAHxB;;AAAA;;AAAA,kDAMS,IANT;;AAAA,mDAeU,IAfV;;AAAA,6CAwBG,EAxBH;;AAAA,8CAgCI,EAhCJ;AAAA;;AAOA,YAAbC,aAAa,GAAG;AAC1B,iBAAO,KAAKC,cAAZ;AACH;;AAC0B,YAAbD,aAAa,CAACE,KAAD,EAAiB;AACxC,eAAKD,cAAL,GAAsBC,KAAtB,CADwC,CAExC;;AACAL,UAAAA,GAAG,CAACM,YAAJ,CAAiBC,OAAjB,CAAyB,KAAKC,UAAL,GAAkBP,QAAQ,CAACQ,YAApD,EAAkEC,MAAM,CAAC,KAAKN,cAAN,CAAxE;AACH;;AAE2B,YAAdO,cAAc,GAAG;AAC3B,iBAAO,KAAKC,eAAZ;AACH;;AAC2B,YAAdD,cAAc,CAACN,KAAD,EAAiB;AACzC,eAAKO,eAAL,GAAuBP,KAAvB;AACAL,UAAAA,GAAG,CAACM,YAAJ,CAAiBC,OAAjB,CAAyB,KAAKC,UAAL,GAAkBP,QAAQ,CAACY,aAApD,EAAmEH,MAAM,CAAC,KAAKE,eAAN,CAAzE;AACH;;AAGkB,YAARE,QAAQ,GAAG;AAClB,iBAAO,KAAKC,SAAZ;AACH;;AACqB,YAARD,QAAQ,CAACT,KAAD,EAAgB;AAClC,eAAKU,SAAL,GAAiBV,KAAjB;AACAL,UAAAA,GAAG,CAACM,YAAJ,CAAiBC,OAAjB,CAAyB,KAAKC,UAAL,GAAkBP,QAAQ,CAACe,WAApD,EAAiE,KAAKD,SAAL,CAAeE,QAAf,EAAjE;AACH;;AAEmB,YAATC,SAAS,GAAG;AACnB,iBAAO,KAAKC,UAAZ;AACH;;AACsB,YAATD,SAAS,CAACb,KAAD,EAAgB;AACnC,eAAKc,UAAL,GAAkBd,KAAlB;AACAL,UAAAA,GAAG,CAACM,YAAJ,CAAiBC,OAAjB,CAAyB,KAAKC,UAAL,GAAkBP,QAAQ,CAACmB,YAApD,EAAkE,KAAKD,UAAL,CAAgBF,QAAhB,EAAlE;AACH;;AAvC0B,O","sourcesContent":["import { AudioSource, NodePool, sys } from \"cc\";\r\nenum ItemType {\r\n    MusicBoolean = \"_MusicBoolean\",\r\n    EffectBoolean = \"_EffectBoolean\",\r\n    MusicVolume = \"_MusicVolume\",\r\n    EffectVolume = \"_EffectVolume\",\r\n\r\n}\r\nexport default class DataMusic {\r\n    protected audioSourcePool: NodePool = new NodePool();\r\n    protected audio_Music: AudioSource;\r\n    protected audio_Effect: Map<string, AudioSource> = new Map();\r\n    protected gameString: string\r\n\r\n    protected _is_open_music: boolean = true;\r\n    protected get is_open_music() {\r\n        return this._is_open_music;\r\n    }\r\n    protected set is_open_music(value: boolean) {\r\n        this._is_open_music = value\r\n        // console.error(value);\r\n        sys.localStorage.setItem(this.gameString + ItemType.MusicBoolean, String(this._is_open_music))\r\n    }\r\n    protected _is_open_effect: boolean = true;\r\n    protected get is_open_effect() {\r\n        return this._is_open_effect;\r\n    }\r\n    protected set is_open_effect(value: boolean) {\r\n        this._is_open_effect = value\r\n        sys.localStorage.setItem(this.gameString + ItemType.EffectBoolean, String(this._is_open_effect))\r\n    }\r\n\r\n    protected _volMusic: number = .8;\r\n    public get volMusic() {\r\n        return this._volMusic;\r\n    }\r\n    protected set volMusic(value: number) {\r\n        this._volMusic = value\r\n        sys.localStorage.setItem(this.gameString + ItemType.MusicVolume, this._volMusic.toString())\r\n    }\r\n    protected _volEffect: number = .3;\r\n    public get volEffect() {\r\n        return this._volEffect;\r\n    }\r\n    protected set volEffect(value: number) {\r\n        this._volEffect = value\r\n        sys.localStorage.setItem(this.gameString + ItemType.EffectVolume, this._volEffect.toString())\r\n    }\r\n}"]}
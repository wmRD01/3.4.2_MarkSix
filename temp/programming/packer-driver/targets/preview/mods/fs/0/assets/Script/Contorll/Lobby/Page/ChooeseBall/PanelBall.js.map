{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/Lobby/Page/ChooeseBall/PanelBall.ts"],"names":["instantiate","Label","Layout","Node","Prefab","_decorator","DelayTime","AssetType","CheckLoadingType","CommandType","LangType","LobbyStateEvent","WebSocketEvent","AssetMng","ButtonMng","BallData","CheckLoading","BaseComponent","SocketSetting","bet","PanelLoading","PanelSystemMessage","ccclass","property","PanelBall","Map","start","waitStateCheck","Sprite","labelState","node","active","tipBox","remide","labelContent","removeAllChildren","HorLayout","isEnd","string","t","Game","replace","MaxCount","toString","V","Valign","layout","layoutItem","addChild","H","Halign","count","totalCount","_node","ballItem","_class","getComponent","mapBallNumber","set","init","cancel","addEvent","button","label","getInstance","StartDT","index","children","length","enabled","forEach","element","getOrg","eventEmit","ChangeBallButtonState","ChangeConfirmState","setEvent","UpDateBall","reProcessing","AttackBall","onConfirmAttack","NextIssueID","reset","onEnable","StartConnect","onDisable","CloseWebSocket","onTestReset","onRandomNumber","e","customEventData","onResetChooese","arr","random","Math","floor","indexOf","onChooeseBall","push","isConfirm","convert","Number","tempChoose","splice","get","isFullBall","fullResetBallColor","choose","ballNumber","enabledBall","isChoose","backPosition","Attack","instance","showSingleConfirm","len","shift","sort","a","b","BallChooeseAction","onSendCheckAttack","_bet","betCode","WebSocketSendCommand","bool","watiWebSocket","Promise","resolve","reject","checkState","isWebSocketOpen","inter","setInterval","clearInterval","data","console","log","closeLoading","labelIssueID","drawIssue"],"mappings":"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","sourcesContent":["import { Button, color, EventTouch, instantiate, Label, Layout, Node, Prefab, random, Sprite, Vec3, _decorator } from 'cc';\r\nimport DelayTime from '../../../../../Plug/DelayTime';\r\nimport { AssetType } from '../../../../Enum/AssetType';\r\nimport { CheckLoadingType } from '../../../../Enum/CheckLoadingType';\r\nimport { CommandType } from '../../../../Enum/CommandType';\r\nimport { LangType } from '../../../../Enum/LangType';\r\nimport { LobbyStateEvent } from '../../../../Enum/LobbyStateEvent';\r\nimport { WebSocketEvent } from '../../../../Enum/WebSocketEvent';\r\nimport AssetMng from '../../../../Manager/AssetMng';\r\nimport ButtonMng from '../../../../Manager/ButtonMng';\r\nimport BallData from '../../../../Model/BallData';\r\nimport CheckLoading from '../../../../Model/CheckLoading';\r\nimport BaseComponent from '../../../../Model/ComponentBase';\r\nimport SocketSetting from '../../../../Socket/SocketSetting';\r\nimport * as RP from '../../../Api/ResponeCommand';\r\nimport { bet } from '../../../Api/SendCommand';\r\nimport PanelLoading from '../../../NoClearNode/PanelLoading';\r\nimport PanelSystemMessage from '../../../NoClearNode/PanelSystemMessage';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('PanelBall')\r\nexport default class PanelBall extends BaseComponent {\r\n    @property(Node)\r\n    HorLayout: Node;\r\n    @property(Node)\r\n    labelContent: Node;\r\n    @property(Prefab)\r\n    layoutItem: Prefab;\r\n    @property(Prefab)\r\n    ballItem: Prefab;\r\n    @property(Label)\r\n    labelIssueID: Label\r\n    @property(Label)\r\n    labelState: Label\r\n    @property(Node)\r\n    tipBox: Node\r\n    @property(Node)\r\n    remide: Node\r\n\r\n    Halign: number = 10;\r\n    Valign: number = 5;\r\n    totalCount: number = 49\r\n    mapBallNumber: Map<number, BallData> = new Map()\r\n\r\n    isChoose: number[] = []\r\n    tempChoose: number[] = []\r\n    /**選擇球數最大值 */\r\n    MaxCount: number = 6\r\n    isConfirm: boolean;\r\n    isFullBall: boolean;\r\n    websocket: Node;\r\n\r\n\r\n    async start() {\r\n        await AssetMng.waitStateCheck(AssetType.Sprite)\r\n        this.labelState.node.active = true;\r\n        this.tipBox.active = false;\r\n        this.remide.active = false;\r\n        this.labelContent.removeAllChildren()\r\n        this.HorLayout.removeAllChildren()\r\n        let isEnd = false\r\n        this.labelState.string = SocketSetting.t(\"041\", LangType.Game).replace(\"$0\", this.MaxCount.toString())\r\n        for (let V = 0; V < this.Valign; V++) {\r\n            let layout = instantiate(this.layoutItem)\r\n            this.HorLayout.addChild(layout)\r\n            for (let H = 1; H <= this.Halign; H++) {\r\n                let count = (V * this.Halign) + H\r\n                if (count > this.totalCount) {\r\n                    isEnd = true\r\n                    break;\r\n                }\r\n                let _node = instantiate(this.ballItem)\r\n                let _class = _node.getComponent(BallData)\r\n                this.mapBallNumber.set(count, _class)\r\n                layout.addChild(_node)\r\n                _class.init(count).cancel()\r\n                ButtonMng.addEvent(this, \"onChooeseBall\", _class.button, count.toString())\r\n                this.labelContent.addChild(_class.label.node)\r\n            }\r\n\r\n        }\r\n        await DelayTime.getInstance.StartDT(.016)\r\n        for (let index = 0; index < this.HorLayout.children.length; index++) {\r\n            //球往上飛所以不能讓他自動排版\r\n            this.HorLayout.children[index].getComponent(Layout).enabled = false\r\n\r\n        }\r\n        this.mapBallNumber.forEach(element => {\r\n            element.getOrg()\r\n        });\r\n        this.eventEmit(LobbyStateEvent.ChangeBallButtonState, true)\r\n        this.eventEmit(LobbyStateEvent.ChangeConfirmState, false)\r\n        this.setEvent(LobbyStateEvent.UpDateBall, this.reProcessing)\r\n        this.setEvent(LobbyStateEvent.AttackBall, this.onConfirmAttack)\r\n        this.setEvent(LobbyStateEvent.NextIssueID, this.reset)\r\n    }\r\n    onEnable() {\r\n        this.eventEmit(LobbyStateEvent.ChangeConfirmState, false)\r\n        this.eventEmit(WebSocketEvent.StartConnect)\r\n\r\n    }\r\n    onDisable() {\r\n        this.eventEmit(WebSocketEvent.CloseWebSocket)\r\n    }\r\n    async reset() {\r\n        this.eventEmit(WebSocketEvent.CloseWebSocket)\r\n        this.onTestReset(null)\r\n        await DelayTime.getInstance.StartDT(.5);\r\n        this.eventEmit(WebSocketEvent.StartConnect)\r\n    }\r\n\r\n    onRandomNumber(e: EventTouch, customEventData?: string) {\r\n        this.onResetChooese(null)\r\n        let arr = []\r\n        while (arr.length < this.MaxCount) {\r\n            let random = 1 + Math.floor((Math.random() * (this.totalCount)))\r\n            if (arr.indexOf(random) == -1) {\r\n                this.onChooeseBall(null, random.toString())\r\n                arr.push(random)\r\n            }\r\n        }\r\n    }\r\n    onChooeseBall(e: EventTouch, customEventData?: string) {\r\n        if (this.isConfirm) return\r\n        let convert = Number(customEventData)\r\n        /**如果已經被選過的球 */\r\n        if (this.tempChoose.indexOf(convert) > -1) {\r\n            this.tempChoose.splice(this.tempChoose.indexOf(convert), 1)[0];\r\n            this.mapBallNumber.get(convert).cancel()\r\n            if (this.isFullBall) {\r\n                this.tipBox.active = false\r\n                this.fullResetBallColor(true)\r\n                this.eventEmit(LobbyStateEvent.ChangeConfirmState, false)\r\n            }\r\n            if (this.tempChoose.length == 0)\r\n                this.labelState.string = SocketSetting.t(\"041\", LangType.Game).replace(\"$0\", this.MaxCount.toString())\r\n            else\r\n                this.labelState.string = SocketSetting.t(\"042\", LangType.Game).replace(\"$0\", this.tempChoose.length.toString())\r\n            return\r\n        }\r\n        /**如果選號已滿 */\r\n        if (this.tempChoose.length >= this.MaxCount) return\r\n        /**紀錄球號 */\r\n        this.tempChoose.push(convert)\r\n        this.mapBallNumber.get(convert).choose()\r\n        this.labelState.string = SocketSetting.t(\"042\", LangType.Game).replace(\"$0\", this.tempChoose.length.toString())\r\n        if (this.tempChoose.length === this.MaxCount) {\r\n            this.isFullBall = true;\r\n            this.tipBox.active = true;\r\n            this.eventEmit(LobbyStateEvent.ChangeConfirmState, true)\r\n            this.mapBallNumber.forEach(element => {\r\n                //代表沒被選種\r\n                if (this.tempChoose.indexOf(element.ballNumber) == -1) {\r\n                    element.enabledBall(false)\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n    onTestReset(e: EventTouch, customEventData?: string) {\r\n        this.eventEmit(LobbyStateEvent.ChangeBallButtonState, true)\r\n        this.isChoose = []\r\n        this.tempChoose = []\r\n        /**選擇球數最大值 */\r\n        this.isConfirm = false\r\n        this.isFullBall = false\r\n        this.mapBallNumber.forEach(element => {\r\n            element.cancel()\r\n            element.backPosition()\r\n        })\r\n\r\n    }\r\n    onResetChooese(e: EventTouch, customEventData?: string) {\r\n        if (this.isConfirm) return\r\n        if (this.tempChoose.length === this.MaxCount) {\r\n            this.mapBallNumber.forEach(element => {\r\n                element.cancel()\r\n            })\r\n        }\r\n        else {\r\n            for (let index = 0; index < this.tempChoose.length; index++) {\r\n                this.mapBallNumber.get(this.tempChoose[index]).cancel()\r\n            }\r\n        }\r\n        this.tempChoose = []\r\n        this.eventEmit(LobbyStateEvent.ChangeConfirmState, false)\r\n        this.tipBox.active = false\r\n        this.labelState.string = SocketSetting.t(\"041\", LangType.Game).replace(\"$0\", this.MaxCount.toString())\r\n    }\r\n    async Attack() {\r\n        if (this.isConfirm) {\r\n            PanelSystemMessage.instance.showSingleConfirm(SocketSetting.t(\"038\", LangType.Game))\r\n            return\r\n        }\r\n        if (this.tempChoose.length < this.MaxCount) {\r\n            PanelSystemMessage.instance.showSingleConfirm(SocketSetting.t(\"039\", LangType.Game))\r\n            return\r\n        }\r\n        this.labelState.node.active = false;\r\n        this.tipBox.active = false\r\n        this.remide.active = true;\r\n        let len = this.tempChoose.length\r\n        for (let index = 0; index < len; index++) {\r\n            this.isChoose.push(this.tempChoose.shift())\r\n        }\r\n        this.isChoose.sort((a, b) => a - b)\r\n\r\n        for (let index = 0; index < this.isChoose.length; index++) {\r\n            this.mapBallNumber.get(this.isChoose[index]).cancel()\r\n            this.eventEmit(LobbyStateEvent.BallChooeseAction, this.mapBallNumber.get(this.isChoose[index]).node, index)\r\n            await DelayTime.getInstance.StartDT(.1);\r\n        }\r\n\r\n\r\n        /**打leo的com */\r\n        this.tempChoose = []\r\n        this.isConfirm = true\r\n    }\r\n    onSendCheckAttack(e?: EventTouch, customEventData?: string) {\r\n        const _bet = new bet()\r\n        _bet.betCode = this.tempChoose\r\n        this.eventEmit(WebSocketEvent.WebSocketSendCommand, CommandType.bet, _bet)\r\n    }\r\n    onConfirmAttack(e?: EventTouch, customEventData?: string) {\r\n        this.eventEmit(LobbyStateEvent.ChangeBallButtonState, false)\r\n        this.Attack()\r\n        PanelSystemMessage.instance.showSingleConfirm(SocketSetting.t(\"037\", LangType.Game))\r\n    }\r\n    fullResetBallColor(bool: boolean) {\r\n        this.mapBallNumber.forEach(element => {\r\n            element.enabledBall(bool)\r\n        })\r\n        this.isFullBall = !bool;\r\n    }\r\n    watiWebSocket() {\r\n        return new Promise<void>((resolve, reject) => {\r\n            if (CheckLoading.getInstance.checkState(CheckLoadingType.isWebSocketOpen)) {\r\n                resolve()\r\n                return\r\n            }\r\n            let inter = setInterval(() => {\r\n                if (CheckLoading.getInstance.checkState(CheckLoadingType.isWebSocketOpen)) {\r\n                    clearInterval(inter)\r\n                    resolve()\r\n                }\r\n            }, 100)\r\n        })\r\n    }\r\n\r\n    reProcessing(data: RP.ln | RP.bet) {\r\n        console.log(data);\r\n        this.onResetChooese(null)\r\n        if (data.betCode != null) {\r\n            if (this.isFullBall) {\r\n                PanelLoading.instance.closeLoading()\r\n                return\r\n            }\r\n            for (let index = 0; index < data.betCode.length; index++) {\r\n                this.onChooeseBall(null, data.betCode[index].toString())\r\n            }\r\n            this.Attack()\r\n            PanelSystemMessage.instance.showSingleConfirm(SocketSetting.t(\"038\", LangType.Game))\r\n            this.eventEmit(LobbyStateEvent.ChangeBallButtonState, false)\r\n        }\r\n        this.labelIssueID.string = `第${data.drawIssue}期`;\r\n        PanelLoading.instance.closeLoading()\r\n    }\r\n\r\n}\r\n"]}
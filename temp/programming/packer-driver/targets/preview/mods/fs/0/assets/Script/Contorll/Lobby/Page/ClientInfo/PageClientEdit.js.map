{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/Lobby/Page/ClientInfo/PageClientEdit.ts"],"names":["Button","Node","Sprite","_decorator","NotificationType","LobbyStateEvent","EventMng","BaseComponent","Player","RequestGPG","MyEditBox","PublicModel","PanelLoading","ButtonMng","EditMenu","ccclass","property","PageClientEdit","onLoad","getInstance","mapEvnet","get","Panel","on","EditNickname","onEditNickname","EditPhone","onEditPhone","EditEmail","onEditEmail","editNicName","string","editEmail","editPhone","reset","onCancel","spriteBG","node","active","textLabel","parent","btnsFunction","addEvent","buttonConfirm","motifyNickName","checkName","instance","openLoading","body","Body","NeedToken","Nickname","nickname","sign","convertSign","console","log","Request","setMethod","Method","POST","setBody","JSON","stringify","setToken","gpgToken","fetchData","APIUrl","playAPI","API","responseNickname","bind","response","Status","Code","emit","EditUpdate","clearEvent","error","onValidateContactInfoPhone","NotNeedToken","ValidateContactInfo","Phone","ids","responseValidateContactInfo","onValidateContactInfoEmail","checkEmail","Email","sendBody","SendRegisterVerification","responseSendRegisterVerification","activeVerificationCode","buttonVerificationCode","certifiedEmall","checkVerification","editVerificationCode","CertifiedEmail","email","verifyCode","CertifiedEmall","responseCertifiedEmall","closeLoading","bool","checkEmailRegular","_string","strEmail","emailRule","search","str","length","test","checkNicknameCondition"],"mappings":"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","sourcesContent":["import { Button, EventTouch, Label, Node, Sprite, SpriteFrame, _decorator } from 'cc';\r\nimport { NotificationType } from '../../../../Enum/NotificationType';\r\nimport { LobbyStateEvent } from '../../../../Enum/LobbyStateEvent';\r\nimport EventMng from '../../../../Manager/EventMng';\r\nimport BaseComponent from '../../../../Model/ComponentBase';\r\nimport Player from '../../../../Model/Player';\r\nimport { RequestGPG } from '../../../Api/GPGAPI/RequestGPG';\r\nimport { ResponseGPG } from '../../../Api/GPGAPI/ResponseGPG';\r\nimport { MyEditBox } from '../../../../../Plug/MyEditBox';\r\nimport PublicModel from '../../../../Model/PublicModel';\r\nimport CreateFileSprite from '../../../../Model/CreateFileSprite';\r\nimport PanelLoading from '../../../NoClearNode/PanelLoading';\r\nimport ButtonMng from '../../../../Manager/ButtonMng';\r\nimport { EditMenu } from '../../../../Enum/EditMenu';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('PageClientEdit')\r\nexport default class PageClientEdit extends BaseComponent {\r\n    @property(MyEditBox)\r\n    editNicName: MyEditBox;\r\n    @property(MyEditBox)\r\n    editPhone: MyEditBox;\r\n    @property(MyEditBox)\r\n    editEmail: MyEditBox;\r\n    @property(MyEditBox)\r\n    editVerificationCode: MyEditBox;\r\n\r\n    @property(Button)\r\n    buttonVerificationCode: Button\r\n\r\n    @property(Button)\r\n    buttonConfirm: Button\r\n\r\n    @property(Node)\r\n    btnsFunction: Node\r\n    @property(Sprite)\r\n\r\n    onLoad() {\r\n        super.onLoad()\r\n        EventMng.getInstance.mapEvnet.get(NotificationType.Panel).on(LobbyStateEvent.EditNickname, this.onEditNickname, this)\r\n        EventMng.getInstance.mapEvnet.get(NotificationType.Panel).on(LobbyStateEvent.EditPhone, this.onEditPhone, this)\r\n        EventMng.getInstance.mapEvnet.get(NotificationType.Panel).on(LobbyStateEvent.EditEmail, this.onEditEmail, this)\r\n        this.editNicName.string = \"\"\r\n        this.editEmail.string = \"\"\r\n        this.editPhone.string = \"\"\r\n        this.reset()\r\n    }\r\n    onCancel() {\r\n\r\n    }\r\n    //#region  Nickname\r\n    /**送出修改NickName */\r\n    private onEditNickname() {\r\n        this.editNicName.spriteBG.node.active = true\r\n        this.editNicName.textLabel.node.parent.active = true;\r\n        this.btnsFunction.active = true\r\n        ButtonMng.addEvent(this, \"motifyNickName\", this.buttonConfirm)\r\n    }\r\n\r\n    async motifyNickName() {\r\n        if (!this.checkName(this.editNicName.string)) return;\r\n        PanelLoading.instance.openLoading(\"資料更新中\")\r\n        const body = new RequestGPG.Body.NeedToken.Nickname()\r\n        body.nickname = this.editNicName.string\r\n        body.sign = PublicModel.getInstance.convertSign(body, RequestGPG.Body.NeedToken.Nickname)\r\n        console.log(body);\r\n        await new RequestGPG.Request()\r\n            .setMethod(RequestGPG.Method.POST)\r\n            .setBody(JSON.stringify(body))\r\n            .setToken(Player.getInstance.gpgToken)\r\n            .fetchData(`${RequestGPG.APIUrl.playAPI}${RequestGPG.API.Nickname}`, this.responseNickname.bind(this))\r\n    }\r\n    /**驗證碼發送是否成功 */\r\n    responseNickname(response: ResponseGPG.Nickname.DataClass) {\r\n        console.log(\"Nickname\", response)\r\n\r\n        if (response.Status.Code == \"0\") {\r\n            EventMng.getInstance.mapEvnet.get(NotificationType.Panel).emit(LobbyStateEvent.EditUpdate, this.editNicName.string, EditMenu.Nickname)\r\n            ButtonMng.clearEvent(this.buttonConfirm);\r\n            this.reset()\r\n        }\r\n        else {\r\n            console.error(\"資料有問題\");\r\n        }\r\n    }\r\n    //#endregion\r\n    //#region ValidateContactInfo\r\n    /**進行發送驗證碼時，必須先通過確認手機是否被註冊過 */\r\n    async onValidateContactInfoPhone() {\r\n        /**確認信箱 */\r\n        //TODO 製作手機驗證(整理好後再回頭製作)\r\n        const body = new RequestGPG.Body.NotNeedToken.ValidateContactInfo()\r\n        body.Phone = this.editPhone.string;\r\n        await new RequestGPG.Request()\r\n            .setMethod(RequestGPG.Method.POST)\r\n            .setBody(JSON.stringify(body))\r\n            .fetchData(`${RequestGPG.APIUrl.ids}${RequestGPG.API.ValidateContactInfo}`, this.responseValidateContactInfo.bind(this))\r\n    }\r\n    async onValidateContactInfoEmail() {\r\n        /**確認信箱格式 */\r\n        if (!this.checkEmail(this.editEmail.string)) return;\r\n        const body = new RequestGPG.Body.NotNeedToken.ValidateContactInfo()\r\n        body.Email = this.editEmail.string;\r\n        await new RequestGPG.Request()\r\n            .setMethod(RequestGPG.Method.POST)\r\n            .setBody(JSON.stringify(body))\r\n            .fetchData(`${RequestGPG.APIUrl.ids}${RequestGPG.API.ValidateContactInfo}`, this.responseValidateContactInfo.bind(this))\r\n    }\r\n    async responseValidateContactInfo(response: ResponseGPG.ValidateContactInfo.DataClass) {\r\n        console.log(\"ValidateContactInfo\", response)\r\n        /**代表此已經綁定過不可以綁定! */\r\n        if (response.Status.Code == \"0\") {\r\n            console.log(\"已存在請重新換組\");\r\n            return;\r\n        }\r\n        else {\r\n            console.log(\"恭喜信箱不存在，可繼續註冊\");\r\n            //*要改成手動送驗證碼\r\n            const sendBody = new RequestGPG.Body.NotNeedToken.SendRegisterVerification()\r\n            if (this.editEmail.string != \"\")\r\n                sendBody.Email = this.editEmail.string\r\n            if (this.editPhone.string != \"\")\r\n                sendBody.Phone = this.editPhone.string\r\n            await new RequestGPG.Request()\r\n                .setMethod(RequestGPG.Method.POST)\r\n                .setBody(JSON.stringify(sendBody))\r\n                .fetchData(`${RequestGPG.APIUrl.ids}${RequestGPG.API.SendRegisterVerification}`, this.responseSendRegisterVerification.bind(this))\r\n        }\r\n\r\n    }\r\n    /**驗證碼發送是否成功 */\r\n    responseSendRegisterVerification(response: ResponseGPG.SendRegisterVerification.DataClass) {\r\n        console.log(\"SendRegisterVerification\", response)\r\n        if (response.Status.Code == \"0\") {\r\n            console.log(\"送出驗證碼囉\");\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n    //#endregion\r\n    //#region Phone\r\n    private onEditPhone() {\r\n        this.editPhone.spriteBG.node.active = true\r\n        this.editPhone.textLabel.node.parent.active = true;\r\n        this.activeVerificationCode(true)\r\n        this.btnsFunction.active = true\r\n        ButtonMng.addEvent(this, \"onValidateContactInfoPhone\", this.buttonVerificationCode)\r\n        ButtonMng.addEvent(this, \"創立修改手機的\", this.buttonConfirm)\r\n    }\r\n    //TODO 修改手機的方法\r\n    //#endregion\r\n    //#region Email\r\n\r\n    private onEditEmail() {\r\n        this.editEmail.spriteBG.node.active = true\r\n        this.editEmail.textLabel.node.parent.active = true;\r\n        this.activeVerificationCode(true)\r\n        this.btnsFunction.active = true\r\n        ButtonMng.addEvent(this, \"onValidateContactInfoEmail\", this.buttonVerificationCode)\r\n        ButtonMng.addEvent(this, \"certifiedEmall\", this.buttonConfirm)\r\n\r\n\r\n    }\r\n    /**送出前須確認驗證碼的正確性，但前題是他必須得先需要註冊信箱時才會接這個function */\r\n    async certifiedEmall() {\r\n        if (!this.checkVerification(this.editVerificationCode.string)) return;\r\n        if (!this.checkEmail(this.editEmail.string)) return;\r\n        /**確認信箱格式 */\r\n        const body = new RequestGPG.Body.NeedToken.CertifiedEmail()\r\n        body.email = this.editEmail.string\r\n        body.verifyCode = this.editVerificationCode.string\r\n        body.sign = PublicModel.getInstance.convertSign(body, RequestGPG.Body.NeedToken.CertifiedEmail)\r\n        console.log(body);\r\n\r\n        await new RequestGPG.Request()\r\n            .setMethod(RequestGPG.Method.POST)\r\n            .setToken(Player.getInstance.gpgToken)\r\n            .setBody(JSON.stringify(body))\r\n            .fetchData(`${RequestGPG.APIUrl.playAPI}${RequestGPG.API.CertifiedEmall}`, this.responseCertifiedEmall.bind(this))\r\n    }\r\n\r\n    /**是否修改信箱成功 */\r\n    responseCertifiedEmall(response: ResponseGPG.CertifiedEmall.DataClass) {\r\n        console.log(\"CertifiedEmall\", response)\r\n        if (response.Status.Code == \"0\") {\r\n            console.log(\"過關惹\");\r\n            EventMng.getInstance.mapEvnet.get(NotificationType.Panel).emit(LobbyStateEvent.EditUpdate, this.editEmail.string, EditMenu.Email)\r\n            ButtonMng.clearEvent(this.buttonConfirm);\r\n            this.reset()\r\n        }\r\n        else {\r\n            //TODO顯示錯誤訊息\r\n            PanelLoading.instance.closeLoading()\r\n        }\r\n    }\r\n    //#endregion\r\n    private activeVerificationCode(bool: boolean) {\r\n        this.editVerificationCode.spriteBG.node.active = bool\r\n        this.editVerificationCode.textLabel.node.parent.active = bool;\r\n        this.buttonVerificationCode.node.active = bool\r\n\r\n        // if (!bool)\r\n        // this.btnsFunction.position = PublicModel.getInstance.to2DConvertOtherNodeSpaceAR(this.btnsFunction, this.editEmail.spriteBG.node)\r\n    }\r\n    private reset() {\r\n        this.editNicName.spriteBG.node.active = false\r\n        this.editNicName.textLabel.node.parent.active = false;\r\n        this.editEmail.spriteBG.node.active = false\r\n        this.editEmail.textLabel.node.parent.active = false;\r\n        this.editPhone.spriteBG.node.active = false\r\n        this.editPhone.textLabel.node.parent.active = false;\r\n        this.activeVerificationCode(false)\r\n        this.btnsFunction.active = false;\r\n        this.buttonVerificationCode.node.active = false;\r\n        this.editEmail.string = \"\";\r\n        this.editNicName.string = \"\";\r\n        this.editNicName.string = \"\";\r\n        this.editVerificationCode.string = \"\";\r\n    }\r\n    /**確認信箱格式 */\r\n    checkEmailRegular(_string: string) {\r\n        //please input the test email to see is valid\r\n        var strEmail = _string;\r\n\r\n        //Regular expression Testing\r\n        var emailRule = /^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z]+$/;\r\n\r\n        //validate ok or not\r\n        if (strEmail.search(emailRule) != -1) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n    checkName(str: string) {\r\n        if (str.length == 0) {\r\n            console.error(\"請輸入文字\");\r\n            return false;\r\n        }\r\n        if (/\\s/.test(str)) {\r\n            console.error(\"文字有空白\");\r\n            return false;\r\n        }\r\n        if (PublicModel.getInstance.checkNicknameCondition(str)) {\r\n            console.error(\"出現非法文字\");\r\n            return false;\r\n        }\r\n        if (str.length < 2 || str.length > 16) {\r\n            console.error(\"長度須為2~16\");\r\n            return false;;\r\n        }\r\n        return true\r\n    }\r\n    /**\r\n     * \r\n     * @param str 信箱\r\n     */\r\n    checkEmail(str: string) {\r\n        if (str.length == 0) {\r\n            console.error(\"請輸入文字\");\r\n            return false;\r\n        }\r\n        if (/\\s/.test(str)) {\r\n            console.error(\"文字有空白\");\r\n            return false;\r\n        }\r\n        if (!this.checkEmailRegular(str)) {\r\n            console.error(\"出現非法文字\");\r\n            return false;\r\n        }\r\n        return true\r\n    }\r\n    /**\r\n     * @param verification 驗證碼  \r\n     */\r\n    checkVerification(str: string) {\r\n        if (str.length == 0) {\r\n            console.error(\"請輸入數字\");\r\n            return false;\r\n        }\r\n        if (/\\s/.test(str)) {\r\n            console.error(\"文字有空白\");\r\n            return false;\r\n        }\r\n        if (str.length != 6) {\r\n            console.error(\"驗證碼最少六碼\");\r\n            return false;\r\n        }\r\n        return true\r\n    }\r\n}\r\n"]}
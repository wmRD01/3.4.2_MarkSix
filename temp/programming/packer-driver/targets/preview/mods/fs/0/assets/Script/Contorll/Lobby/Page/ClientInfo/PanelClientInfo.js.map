{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/Lobby/Page/ClientInfo/PanelClientInfo.ts"],"names":["assetManager","Label","Sprite","SpriteFrame","_decorator","BaseComponent","Player","RequestGPG","CryptoES","EventMng","EvnetType","LobbyStateEvent","PublicData","ccclass","property","PanelClientInfo","start","show","isNeedUpdata","isLoading","getInstance","mapEvnet","get","Panel","on","ActivePanelClientInfo","activePanel","ChangePlayerPicture","onChangePlayerPicture","UpDataPlayer","onUpdataPlayer","testGet","repon","console","log","onEnable","body","Body","NeedToken","MyInfo","sign","MD5","gpgApi","toString","convert","URLSearchParams","Request","setToken","gpgToken","fetchData","APIUrl","playAPI","API","responseMyInfo","bind","onDisable","onActivePanel","e","customEventData","hide","emit","spritePlayer","spriteFrame","ActivePanelClientEdit","bool","response","gpgInfo","loadRemote","data","photo","headPhoto","err","image","error","message","createWithImage","labelNickName","string","nickName","labelPhone","phoneNumber","labelEmail","email","_spriteFrame"],"mappings":"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","sourcesContent":["import { assetManager, EventTouch, ImageAsset, Label, Sprite, SpriteFrame, sys, _decorator } from 'cc';\r\nimport BaseComponent from '../../../../Model/ComponentBase';\r\nimport Player from '../../../../Model/Player';\r\nimport { RequestGPG } from '../../../Api/GPGAPI/RequestGPG';\r\nimport { ResponseGPG } from '../../../Api/GPGAPI/ResponseGPG';\r\nimport CryptoES from 'crypto-es';\r\nimport EventMng from '../../../../Manager/EventMng';\r\nimport { EvnetType } from '../../../../Enum/EvnetType';\r\nimport { LobbyStateEvent } from '../../../../Enum/LobbyStateEvent';\r\nimport PublicData from '../../../../Model/PublicData';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('PanelClientInfo')\r\nexport default class PanelClientInfo extends BaseComponent {\r\n    isNeedUpdata: boolean = true;\r\n    isLoading: boolean = false;\r\n    @property(Sprite)\r\n    spritePlayer: Sprite;\r\n    @property(Label)\r\n    labelPhone: Label\r\n    @property(Label)\r\n    labelNickName: Label\r\n    @property(Label)\r\n    labelEmail: Label\r\n\r\n    @property(Label)\r\n    tempText: Label;\r\n\r\n    async start() {\r\n        this.show()\r\n        this.isNeedUpdata = true;\r\n        this.isLoading = false;\r\n        EventMng.getInstance.mapEvnet.get(EvnetType.Panel).on(LobbyStateEvent.ActivePanelClientInfo, this.activePanel, this)\r\n        EventMng.getInstance.mapEvnet.get(EvnetType.Panel).on(LobbyStateEvent.ChangePlayerPicture, this.onChangePlayerPicture, this)\r\n        EventMng.getInstance.mapEvnet.get(EvnetType.Panel).on(LobbyStateEvent.UpDataPlayer, this.onUpdataPlayer, this)\r\n        // console.log(sys.browserType, sys.os);\r\n        // console.log(md5(\"12315235\"));\r\n\r\n    }\r\n    testGet(repon) {\r\n        console.log(repon);\r\n\r\n    }\r\n    async onEnable() {\r\n        if (!this.isNeedUpdata || this.isLoading) return;\r\n        this.isLoading = true\r\n        const body = new RequestGPG.Body.NeedToken.MyInfo()\r\n        body.sign = CryptoES.MD5(PublicData.getInstance.gpgApi).toString()\r\n        let convert = new URLSearchParams(body).toString()\r\n        await new RequestGPG.Request()\r\n            .setToken(Player.getInstance.gpgToken)\r\n            .fetchData(`${RequestGPG.APIUrl.playAPI}${RequestGPG.API.MyInfo}?${convert}`, this.responseMyInfo.bind(this))\r\n\r\n        this.isLoading = false\r\n    }\r\n    onDisable() {\r\n\r\n    }\r\n    onActivePanel(e: EventTouch, customEventData?: string) {\r\n        this.hide()\r\n        EventMng.getInstance.mapEvnet.get(EvnetType.Panel).emit(LobbyStateEvent.ChangePlayerPicture, this.spritePlayer.spriteFrame)\r\n        EventMng.getInstance.mapEvnet.get(EvnetType.Panel).emit(LobbyStateEvent.ActivePanelClientEdit, true)\r\n    }\r\n    onUpdataPlayer() {\r\n        this.isNeedUpdata = true\r\n    }\r\n    activePanel(bool: boolean) {\r\n        bool ? this.show() : this.hide()\r\n    }\r\n    async responseMyInfo(response: ResponseGPG.MyInfo.DataClass) {\r\n        console.log(\"MyInfo\", response)\r\n        Player.getInstance.gpgInfo = response;\r\n        // response.data.photo\r\n        assetManager.loadRemote(response.data.photo.headPhoto, (err, image: ImageAsset) => {\r\n            if (err) {\r\n                console.error(err.message);\r\n                return\r\n            }\r\n            EventMng.getInstance.mapEvnet.get(EvnetType.Panel).emit(LobbyStateEvent.ChangePlayerPicture, SpriteFrame.createWithImage(image))\r\n            this.isNeedUpdata = false;\r\n        })\r\n        this.labelNickName.string = response.data.nickName\r\n        this.labelPhone.string = response.data.phoneNumber\r\n        this.labelEmail.string = response.data.email\r\n\r\n    }\r\n    onChangePlayerPicture(_spriteFrame: SpriteFrame) {\r\n        this.spritePlayer.spriteFrame = _spriteFrame\r\n    }\r\n\r\n\r\n}\r\n\r\n"]}
{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/Lobby/Page/ClientInfo/PanelClientInfo.ts"],"names":["assetManager","Label","Sprite","SpriteFrame","_decorator","BaseComponent","Player","RequestGPG","EventMng","NotificationType","LobbyStateEvent","PublicData","PanelLoading","PublicModel","ccclass","property","PanelClientInfo","start","show","isNeedUpdate","isLoading","getInstance","mapEvnet","get","Panel","on","ActivePanelClientInfo","activePanel","ChangePlayerPicture","onChangePlayerPicture","UpDatePlayer","onUpdatePlayer","onEnable","instance","closeLoading","startDelay","body","Body","NeedToken","MyInfo","sign","convertMD5","gpgApi","convert","URLSearchParams","toString","Request","setToken","gpgToken","fetchData","APIUrl","playAPI","API","responseMyInfo","bind","onDisable","onActivePanel","e","customEventData","hide","emit","spritePlayer","spriteFrame","ActivePanelClientEdit","bool","response","console","log","gpgInfo","loadRemote","data","photo","headPhoto","err","image","error","message","createWithImage","stopDelay","setTimeout","labelNickName","string","nickName","labelPhone","phoneNumber","labelEmail","email","_spriteFrame"],"mappings":"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","sourcesContent":["import { assetManager, EventTouch, ImageAsset, Label, Sprite, SpriteFrame, sys, _decorator } from 'cc';\r\nimport BaseComponent from '../../../../Model/ComponentBase';\r\nimport Player from '../../../../Model/Player';\r\nimport { RequestGPG } from '../../../Api/GPGAPI/RequestGPG';\r\nimport { ResponseGPG } from '../../../Api/GPGAPI/ResponseGPG';\r\nimport CryptoES from 'crypto-es';\r\nimport EventMng from '../../../../Manager/EventMng';\r\nimport { NotificationType } from '../../../../Enum/NotificationType';\r\nimport { LobbyStateEvent } from '../../../../Enum/LobbyStateEvent';\r\nimport PublicData from '../../../../Model/PublicData';\r\nimport PanelLoading from '../../../NoClearNode/PanelLoading';\r\nimport PublicModel from '../../../../Model/PublicModel';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('PanelClientInfo')\r\nexport default class PanelClientInfo extends BaseComponent {\r\n    isNeedUpdate: boolean = true;\r\n    isLoading: boolean = false;\r\n    @property(Sprite)\r\n    spritePlayer: Sprite;\r\n    @property(Label)\r\n    labelPhone: Label\r\n    @property(Label)\r\n    labelNickName: Label\r\n    @property(Label)\r\n    labelEmail: Label\r\n    labelBetCount: Label;\r\n    labelPointCount: Label;\r\n    labelRank: Label;\r\n\r\n\r\n    async start() {\r\n        this.show()\r\n        this.isNeedUpdate = true;\r\n        this.isLoading = false;\r\n        EventMng.getInstance.mapEvnet.get(NotificationType.Panel).on(LobbyStateEvent.ActivePanelClientInfo, this.activePanel, this)\r\n        EventMng.getInstance.mapEvnet.get(NotificationType.Panel).on(LobbyStateEvent.ChangePlayerPicture, this.onChangePlayerPicture, this)\r\n        EventMng.getInstance.mapEvnet.get(NotificationType.Panel).on(LobbyStateEvent.UpDatePlayer, this.onUpdatePlayer, this)\r\n        // console.log(sys.browserType, sys.os);\r\n        // console.log(md5(\"12315235\"));\r\n\r\n    }\r\n\r\n    async onEnable() {\r\n        if (!this.isNeedUpdate || this.isLoading) {\r\n            PanelLoading.instance.closeLoading()\r\n            return;\r\n        }\r\n        this.isLoading = true\r\n        this.startDelay()\r\n        const body = new RequestGPG.Body.NeedToken.MyInfo()\r\n        body.sign = PublicModel.getInstance.convertMD5(PublicData.getInstance.gpgApi)\r\n        let convert = new URLSearchParams(body).toString()\r\n        await new RequestGPG.Request()\r\n            .setToken(Player.getInstance.gpgToken)\r\n            .fetchData(`${RequestGPG.APIUrl.playAPI}${RequestGPG.API.MyInfo}?${convert}`, this.responseMyInfo.bind(this))\r\n\r\n        this.isLoading = false\r\n    }\r\n    onDisable() {\r\n\r\n    }\r\n    onActivePanel(e: EventTouch, customEventData?: string) {\r\n        this.hide()\r\n        EventMng.getInstance.mapEvnet.get(NotificationType.Panel).emit(LobbyStateEvent.ChangePlayerPicture, this.spritePlayer.spriteFrame)\r\n        EventMng.getInstance.mapEvnet.get(NotificationType.Panel).emit(LobbyStateEvent.ActivePanelClientEdit, true)\r\n    }\r\n    onUpdatePlayer() {\r\n        this.isNeedUpdate = true\r\n    }\r\n    activePanel(bool: boolean) {\r\n        bool ? this.show() : this.hide()\r\n    }\r\n    async responseMyInfo(response: ResponseGPG.MyInfo.DataClass) {\r\n        console.log(\"MyInfo\", response)\r\n        Player.getInstance.gpgInfo = response;\r\n\r\n        // response.data.photo\r\n\r\n        // console.log(Player.getInstance.gpgInfo);\r\n        assetManager.loadRemote(response.data.photo.headPhoto, (err, image: ImageAsset) => {\r\n\r\n            if (err) {\r\n                console.error(err.message);\r\n                return\r\n            }\r\n\r\n            EventMng.getInstance.mapEvnet.get(NotificationType.Panel).emit(LobbyStateEvent.ChangePlayerPicture, SpriteFrame.createWithImage(image))\r\n            this.isNeedUpdate = false;\r\n            if (this.stopDelay() < 1)\r\n                setTimeout(PanelLoading.instance.closeLoading.bind(PanelLoading.instance), 1000);\r\n            else\r\n                PanelLoading.instance.closeLoading()\r\n\r\n        })\r\n        this.labelNickName.string = response.data.nickName\r\n        this.labelPhone.string = response.data.phoneNumber\r\n        this.labelEmail.string = response.data.email\r\n    }\r\n    onChangePlayerPicture(_spriteFrame: SpriteFrame) {\r\n        this.spritePlayer.spriteFrame = _spriteFrame\r\n    }\r\n\r\n\r\n}\r\n\r\n"]}
{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/Lobby/Page/Home/PanelHome.ts"],"names":["Marquee","Timer","Button","Component","instantiate","Label","Node","Prefab","UITransform","_decorator","NotificationType","LobbyStateEvent","PageAction","EventMng","BaseComponent","PublicModel","RequestGPG","Player","PublicData","PanelLoading","BallData","PanelSystemMessage","SocketSetting","LangType","DEV","ccclass","property","PanelHome","onLoad","marquee","labelMarquee","addComponent","timer","labelTime","setBGNode","timeBG","getInstance","gpgToken","handleURLData","window","location","href","token","setEvent","NextIssueID","reset","onEnable","start","onDisable","isChangeIssueID","instance","closeLoading","requestMyInfo","requestDrawHistory","requestDrawUpcoming","requesMyScore","testtotoel","loopTimer","setInterval","requestDrawUpcomingLoop","bind","loopTime","Promise","resolve","reject","body","Body","NeedToken","DrawHistory","top","sign","convertSign","convert","URLSearchParams","toString","Request","setToken","fetchData","gpgUrlPlayApi","API","responseDrawHistory","response","data","lastDrawCodeLayout","removeAllChildren","getDate","labelLastDrawIssueID","string","issueID","getday","convertDateDay","openDate","split","labelLastDrawDay","index","drawCode","length","_node","isResetPos","specialBallItem","ballItem","addChild","_class","getComponent","init","Number","cancel","labelContent","label","node","DrawUpcoming","convertMD5","gpgApi","responseDrawUpcoming","today","labelCurrentDrawIssueID","currentIssueID","Date_A","Date","Date_B","serverNowTime","countTime","Date_C","console","log","setTimer","getTime","error","MyScore","sDate","getFullYear","getMonth","eDate","getMonthAllDay","My_Score","responseMyScore","labelMonth","labelMyPoint","totalScore","MyInfo","showSingleConfirm","t","Game","checkIssueID","clearInterval","eventEmit","onGoPage","e","customEventData","isNaN","ChangePointPage","mapEvnet","get","Page","emit","ChangeTo","_url","undefined","arr","obj","Object","cut","bindLabel","rightBorder","parent","width","startMarque","message","updateRenderData","leftBorder","resetPos","isAction","update","dt","currentPos","getPosition","x","setPosition","speed","y","z","bg","active","setTimeNoTimer","str","num","timeUp","formatMillisecond"],"mappings":";;;2SA+SMA,O,EAwCAC,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAvVGC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,S,OAAAA,S;AAAuBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAiBC,MAAAA,U,OAAAA,U;;AAClFC,MAAAA,gB,iBAAAA,gB;;AACAC,MAAAA,e,iBAAAA,e;;AACAC,MAAAA,U,iBAAAA,U;;AACFC,MAAAA,Q;;AACAC,MAAAA,a;;AAEAC,MAAAA,W;;AACEC,MAAAA,U,iBAAAA,U;;AACFC,MAAAA,M;;AAEAC,MAAAA,U;;AACAC,MAAAA,Y;;AAEAC,MAAAA,Q;;AACAC,MAAAA,kB;;AACAC,MAAAA,a;;AACEC,MAAAA,Q,kBAAAA,Q;;AACAC,MAAAA,G,UAAAA,G;;;;;;;OAIH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBjB,U;;yBAETkB,S,WADpBF,OAAO,CAAC,WAAD,C,UAEHC,QAAQ,CAACpB,IAAD,C,UAERoB,QAAQ,CAACpB,IAAD,C,UAERoB,QAAQ,CAACpB,IAAD,C,UAGRoB,QAAQ,CAACnB,MAAD,C,UAGRmB,QAAQ,CAACrB,KAAD,C,UAERqB,QAAQ,CAACrB,KAAD,C,UAERqB,QAAQ,CAACrB,KAAD,C,UAERqB,QAAQ,CAACrB,KAAD,C,WAERqB,QAAQ,CAACrB,KAAD,C,WAERqB,QAAQ,CAACrB,KAAD,C,WAERqB,QAAQ,CAACrB,KAAD,C,WAERqB,QAAQ,CAACrB,KAAD,C,WAERqB,QAAQ,CAACrB,KAAD,C,WAERqB,QAAQ,CAACrB,KAAD,C,WAERqB,QAAQ,CAACrB,KAAD,C,WAERqB,QAAQ,CAACrB,KAAD,C,WAERqB,QAAQ,CAACxB,MAAD,C,WAERwB,QAAQ,CAACxB,MAAD,C,WAERwB,QAAQ,CAACxB,MAAD,C,WAERwB,QAAQ,CAACpB,IAAD,C,qCA1Cb,MACqBqB,SADrB;AAAA;AAAA,0CACqD;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,8CAgD5B,CAhD4B;;AAAA,4CAiD9B,EAjD8B;AAAA;;AAmDjDC,QAAAA,MAAM,GAAG;AACL,eAAKC,OAAL,GAAe,KAAKC,YAAL,CAAkBC,YAAlB,CAA+B/B,OAA/B,CAAf;AACA,eAAKgC,KAAL,GAAa,KAAKC,SAAL,CAAeF,YAAf,CAA4B9B,KAA5B,CAAb;AACA,eAAK+B,KAAL,CAAWE,SAAX,CAAqB,KAAKC,MAA1B;AACA;;AACA;AAAA;AAAA,gCAAOC,WAAP,CAAmBC,QAAnB,GAA+B,KAAKC,aAAL,CAAmBC,MAAM,CAACC,QAAP,CAAgBC,IAAnC,CAAD,CAAuDC,KAArF;AACA,eAAKC,QAAL,CAAc;AAAA;AAAA,kDAAgBC,WAA9B,EAA2C,KAAKC,KAAhD;AACH;;AACKC,QAAAA,QAAQ,GAAG;AAAA;;AAAA;AACb,YAAA,KAAI,CAACD,KAAL;AADa;AAEhB;;AACDE,QAAAA,KAAK,GAAG,CACJ;AACA;AACH;;AAEDC,QAAAA,SAAS,GAAG,CAEX;;AACKH,QAAAA,KAAK,GAAG;AAAA;;AAAA;AACV,gBAAI,MAAI,CAACI,eAAT,EAA0B;AACtB;AAAA;AAAA,gDAAaC,QAAb,CAAsBC,YAAtB;AACA;AACH;;AACD,kBAAM,MAAI,CAACC,aAAL,EAAN;AACA,kBAAM,MAAI,CAACC,kBAAL,EAAN;AACA,kBAAM,MAAI,CAACC,mBAAL,EAAN;AACA,kBAAM,MAAI,CAACC,aAAL,EAAN;AACA;AAAA;AAAA,8CAAaL,QAAb,CAAsBC,YAAtB;;AACA,gBAAI,MAAI,CAACF,eAAT,EAA0B;AACtB,cAAA,MAAI,CAACO,UAAL,GAAkB,CAAlB;AACA,cAAA,MAAI,CAACC,SAAL,GAAiBC,WAAW,CAAC,MAAI,CAACC,uBAAL,CAA6BC,IAA7B,CAAkC,MAAlC,CAAD,EAA0C,MAAI,CAACC,QAAL,GAAgB,IAA1D,CAA5B;AACH;AAbS;AAcb,SApFgD,CAqFjD;;;AACMR,QAAAA,kBAAkB,GAAG;AAAA;;AAAA;AACvB,mBAAO,IAAIS,OAAJ;AAAA,2CAAkB,WAAOC,OAAP,EAAgBC,MAAhB,EAA2B;AAChD,oBAAMC,IAAI,GAAG,IAAI;AAAA;AAAA,8CAAWC,IAAX,CAAgBC,SAAhB,CAA0BC,WAA9B,EAAb;AACAH,gBAAAA,IAAI,CAACI,GAAL,GAAW,GAAX;AACAJ,gBAAAA,IAAI,CAACK,IAAL,GAAY;AAAA;AAAA,gDAAYlC,WAAZ,CAAwBmC,WAAxB,CAAoCN,IAApC,EAA0C;AAAA;AAAA,8CAAWC,IAAX,CAAgBC,SAAhB,CAA0BC,WAApE,CAAZ;AACA,oBAAII,OAAO,GAAG,IAAIC,eAAJ,CAAoBR,IAApB,EAA0BS,QAA1B,EAAd;AACA,sBAAM,IAAI;AAAA;AAAA,8CAAWC,OAAf,GACDC,QADC,CACQ;AAAA;AAAA,sCAAOxC,WAAP,CAAmBC,QAD3B,EAEDwC,SAFC,MAEY;AAAA;AAAA,8CAAWzC,WAAX,CAAuB0C,aAFnC,GAEmD;AAAA;AAAA,8CAAWC,GAAX,CAAeX,WAFlE,SAEiFI,OAFjF,EAE4F,MAAI,CAACQ,mBAAL,CAAyBpB,IAAzB,CAA8B,MAA9B,CAF5F,CAAN;AAGAG,gBAAAA,OAAO;AACV,eATM;;AAAA;AAAA;AAAA;AAAA,gBAAP;AADuB;AAW1B;;AACDiB,QAAAA,mBAAmB,CAACC,QAAD,EAA+C;AAC9D,cAAIA,QAAQ,CAACC,IAAb,EAAmB;AACf,iBAAKC,kBAAL,CAAwBC,iBAAxB;AACA,gBAAIC,OAAO,GAAGJ,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAd;AACA,iBAAKI,oBAAL,CAA0BC,MAA1B,cAAuCF,OAAO,CAACG,OAAR,CAAgBd,QAAhB,EAAvC;AAEA;AACA;;AAEA,gBAAIe,MAAM,GAAG;AAAA;AAAA,4CAAYrD,WAAZ,CAAwBsD,cAAxB,CAAuCL,OAAO,CAACM,QAA/C,EAAyDC,KAAzD,CAA+D,GAA/D,EAAoE,CAApE,CAAb;AACA,iBAAKC,gBAAL,CAAsBN,MAAtB,GAAkCE,MAAlC;;AACA,iBAAK,IAAIK,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGT,OAAO,CAACU,QAAR,CAAiBC,MAA7C,EAAqDF,KAAK,EAA1D,EAA8D;AAC1D,kBAAIG,KAAW,SAAf;;AACA,kBAAIC,UAAmB,GAAG,IAA1B;;AACA,kBAAIJ,KAAK,IAAI,CAAb,EAAgB;AACZG,gBAAAA,KAAK,GAAG,KAAKE,eAAb;AACAD,gBAAAA,UAAU,GAAG,KAAb;AACH,eAHD,MAIK;AACDD,gBAAAA,KAAK,GAAG7F,WAAW,CAAC,KAAKgG,QAAN,CAAnB;AACA,qBAAKjB,kBAAL,CAAwBkB,QAAxB,CAAiCJ,KAAjC;AACH;;AACD,kBAAIK,MAAM,GAAGL,KAAK,CAACM,YAAN;AAAA;AAAA,uCAAb;;AAEAD,cAAAA,MAAM,CAACE,IAAP,CAAYC,MAAM,CAACpB,OAAO,CAACU,QAAR,CAAiBD,KAAjB,CAAD,CAAlB,EAA6CI,UAA7C,EAAyDQ,MAAzD;;AACA,mBAAKC,YAAL,CAAkBN,QAAlB,CAA2BC,MAAM,CAACM,KAAP,CAAaC,IAAxC;AACH;AACJ;AACJ,SA9HgD,CA+HjD;AACA;;;AACMvD,QAAAA,mBAAmB,GAAG;AAAA;;AAAA;AACxB,mBAAO,IAAIQ,OAAJ;AAAA,4CAAkB,WAAOC,OAAP,EAAgBC,MAAhB,EAA2B;AAChD,oBAAMC,IAAI,GAAG,IAAI;AAAA;AAAA,8CAAWC,IAAX,CAAgBC,SAAhB,CAA0B2C,YAA9B,EAAb;AACA7C,gBAAAA,IAAI,CAACK,IAAL,GAAY;AAAA;AAAA,gDAAYlC,WAAZ,CAAwB2E,UAAxB,CAAmC;AAAA;AAAA,8CAAW3E,WAAX,CAAuB4E,MAA1D,CAAZ;AACA,oBAAIxC,OAAO,GAAG,IAAIC,eAAJ,CAAoBR,IAApB,EAA0BS,QAA1B,EAAd;AACA,sBAAM,IAAI;AAAA;AAAA,8CAAWC,OAAf,GACDC,QADC,CACQ;AAAA;AAAA,sCAAOxC,WAAP,CAAmBC,QAD3B,EAEDwC,SAFC,MAEY;AAAA;AAAA,8CAAWzC,WAAX,CAAuB0C,aAFnC,GAEmD;AAAA;AAAA,8CAAWC,GAAX,CAAe+B,YAFlE,SAEkFtC,OAFlF,EAE6F,MAAI,CAACyC,oBAAL,CAA0BrD,IAA1B,CAA+B,MAA/B,CAF7F,CAAN;AAGAG,gBAAAA,OAAO;AACV,eARM;;AAAA;AAAA;AAAA;AAAA,gBAAP;AADwB;AAU3B;;AACDkD,QAAAA,oBAAoB,CAAChC,QAAD,EAAgD;AAChE,cAAII,OAAO,GAAGJ,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAd;AACA;AAAA;AAAA,wCAAW9C,WAAX,CAAuB8E,KAAvB,GAA+B7B,OAAO,CAACM,QAAvC;AACA,eAAKwB,uBAAL,CAA6B5B,MAA7B,cAA2CF,OAAO,CAACG,OAAT,CAAkBd,QAAlB,EAA1C;AACA,eAAK0C,cAAL,GAAsB/B,OAAO,CAACG,OAA9B,CAJgE,CAKhE;AACA;;AAEA,cAAI6B,MAAM,GAAG,IAAIC,IAAJ,CAASjC,OAAO,CAACM,QAAjB,CAAb;AACA,cAAI4B,MAAM,GAAG,CAAb;AACA,cAAI/F,GAAJ,EACI;AACA+F,YAAAA,MAAM,GAAG,IAAID,IAAJ,CAASjC,OAAO,CAACmC,aAAjB,CAAT,CAFJ,KAII;AACAD,YAAAA,MAAM,GAAG,IAAID,IAAJ,CAASjC,OAAO,CAACmC,aAAjB,CAAT,CAf4D,CAgBhE;;AACA,cAAIC,SAAS,GAAGJ,MAAM,GAAGE,MAAzB;AACA,cAAIG,MAAM,GAAG,IAAIJ,IAAJ,CAASG,SAAT,CAAb;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EApBgE,CAqBhE;;AACA,eAAK1F,KAAL,CAAW6F,QAAX,CAAoBH,MAAM,CAACI,OAAP,EAApB;;AACA,cAAIL,SAAS,GAAG,CAAhB,EAAmB;AACfE,YAAAA,OAAO,CAACI,KAAR,CAAc,eAAd;AACA,iBAAK9E,eAAL,GAAuB,IAAvB;AACA;AACH;AACJ,SAxKgD,CAyKjD;AAEA;;;AACMM,QAAAA,aAAa,GAAG;AAAA;;AAAA;AAClB,mBAAO,IAAIO,OAAJ;AAAA,4CAAkB,WAAOC,OAAP,EAAgBC,MAAhB,EAA2B;AAChD,oBAAMC,IAAI,GAAG,IAAI;AAAA;AAAA,8CAAWC,IAAX,CAAgBC,SAAhB,CAA0B6D,OAA9B,EAAb;AACA,oBAAM3C,OAAO,GAAG,IAAIiC,IAAJ,CAAS;AAAA;AAAA,8CAAWlF,WAAX,CAAuB8E,KAAhC,CAAhB;AACAjD,gBAAAA,IAAI,CAACgE,KAAL,GAAgB5C,OAAO,CAAC6C,WAAR,EAAhB,UAAyC7C,OAAO,CAAC8C,QAAR,KAAqB,CAA9D;AACAlE,gBAAAA,IAAI,CAACmE,KAAL,GAAgB/C,OAAO,CAAC6C,WAAR,EAAhB,UAAyC7C,OAAO,CAAC8C,QAAR,KAAqB,CAA9D,UAAmE;AAAA;AAAA,gDAAY/F,WAAZ,CAAwBiG,cAAxB,CAAuC;AAAA;AAAA,8CAAWjG,WAAX,CAAuB8E,KAA9D,CAAnE;AACAjD,gBAAAA,IAAI,CAACK,IAAL,GAAY;AAAA;AAAA,gDAAYlC,WAAZ,CAAwBmC,WAAxB,CAAoCN,IAApC,EAA0C;AAAA;AAAA,8CAAWC,IAAX,CAAgBC,SAAhB,CAA0B6D,OAApE,CAAZ;AACA,oBAAIxD,OAAO,GAAG,IAAIC,eAAJ,CAAoBR,IAApB,EAA0BS,QAA1B,EAAd;AACA,sBAAM,IAAI;AAAA;AAAA,8CAAWC,OAAf,GACDC,QADC,CACQ;AAAA;AAAA,sCAAOxC,WAAP,CAAmBC,QAD3B,EAEDwC,SAFC,MAEY;AAAA;AAAA,8CAAWzC,WAAX,CAAuB0C,aAFnC,GAEmD;AAAA;AAAA,8CAAWC,GAAX,CAAeuD,QAFlE,SAE8E9D,OAF9E,EAEyF,MAAI,CAAC+D,eAAL,CAAqB3E,IAArB,CAA0B,MAA1B,CAFzF,CAAN;AAGAG,gBAAAA,OAAO;AACV,eAXM;;AAAA;AAAA;AAAA;AAAA,gBAAP;AADkB;AAarB;;AACDwE,QAAAA,eAAe,CAACtD,QAAD,EAA4C;AACvD,cAAMI,OAAO,GAAG,IAAIiC,IAAJ,CAAS;AAAA;AAAA,wCAAWlF,WAAX,CAAuB8E,KAAhC,CAAhB;AACA,eAAKsB,UAAL,CAAgBjD,MAAhB,UAA6BF,OAAO,CAAC8C,QAAR,KAAqB,CAAlD,aAAyD9C,OAAO,CAAC8C,QAAR,KAAqB,CAA9E,UAAmF;AAAA;AAAA,0CAAY/F,WAAZ,CAAwBiG,cAAxB,CAAuC;AAAA;AAAA,wCAAWjG,WAAX,CAAuB8E,KAA9D,CAAnF;;AACA,cAAIjC,QAAQ,CAACC,IAAb,EAAmB;AACfyC,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB3C,QAApB;AACA,iBAAKwD,YAAL,CAAkBlD,MAAlB,GAA2BN,QAAQ,CAACC,IAAT,CAAcwD,UAAd,CAAyBhE,QAAzB,EAA3B;AACH,WAHD,MAIK;AACD,iBAAK+D,YAAL,CAAkBlD,MAAlB,GAA2B,GAA3B;AACH;AACJ,SApMgD,CAqMjD;AACA;;;AACMnC,QAAAA,aAAa,GAAG;AAAA;AAClB,mBAAO,IAAIU,OAAJ;AAAA,4CAAkB,WAAOC,OAAP,EAAgBC,MAAhB,EAA2B;AAChD,oBAAMC,IAAI,GAAG,IAAI;AAAA;AAAA,8CAAWC,IAAX,CAAgBC,SAAhB,CAA0BwE,MAA9B,EAAb;AACA1E,gBAAAA,IAAI,CAACK,IAAL,GAAY;AAAA;AAAA,gDAAYlC,WAAZ,CAAwB2E,UAAxB,CAAmC;AAAA;AAAA,8CAAW3E,WAAX,CAAuB4E,MAA1D,CAAZ;AACA,oBAAIxC,OAAO,GAAG,IAAIC,eAAJ,CAAoBR,IAApB,EAA0BS,QAA1B,EAAd;AACA,sBAAM,IAAI;AAAA;AAAA,8CAAWC,OAAf,GACDC,QADC,CACQ;AAAA;AAAA,sCAAOxC,WAAP,CAAmBC,QAD3B,EAEDwC,SAFC,MAEY;AAAA;AAAA,8CAAWzC,WAAX,CAAuB0C,aAFnC,GAEmD;AAAA;AAAA,8CAAWC,GAAX,CAAe4D,MAFlE,SAE4EnE,OAF5E,EAEwFS,QAAD,IAA4C;AACjI0C,kBAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB3C,QAAtB;AACA0C,kBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,sBAAI,CAAC3C,QAAD,IAAa,CAACA,QAAQ,CAACC,IAA3B,EAAiC;AAC7B;AAAA;AAAA,kEAAmBhC,QAAnB,CAA4B0F,iBAA5B,CAA8C;AAAA;AAAA,wDAAcC,CAAd,CAAgB,QAAhB,EAA0B;AAAA;AAAA,8CAASC,IAAnC,CAA9C;AACH,mBAFD,MAGK/E,OAAO;AACf,iBATC,CAAN;AAUH,eAdM;;AAAA;AAAA;AAAA;AAAA,gBAAP;AADkB;AAgBrB,SAvNgD,CAyNjD;AACA;;;AACMJ,QAAAA,uBAAuB,GAAG;AAAA;;AAAA;AAC5B,gBAAMM,IAAI,GAAG,IAAI;AAAA;AAAA,0CAAWC,IAAX,CAAgBC,SAAhB,CAA0B2C,YAA9B,EAAb;AACA7C,YAAAA,IAAI,CAACK,IAAL,GAAY;AAAA;AAAA,4CAAYlC,WAAZ,CAAwB2E,UAAxB,CAAmC;AAAA;AAAA,0CAAW3E,WAAX,CAAuB4E,MAA1D,CAAZ;AACA,gBAAIxC,OAAO,GAAG,IAAIC,eAAJ,CAAoBR,IAApB,EAA0BS,QAA1B,EAAd;AACA,kBAAM,IAAI;AAAA;AAAA,0CAAWC,OAAf,GACDC,QADC,CACQ;AAAA;AAAA,kCAAOxC,WAAP,CAAmBC,QAD3B,EAEDwC,SAFC,MAEY;AAAA;AAAA,0CAAWzC,WAAX,CAAuB0C,aAFnC,GAEmD;AAAA;AAAA,0CAAWC,GAAX,CAAe+B,YAFlE,SAEkFtC,OAFlF,EAE6F,MAAI,CAACuE,YAAL,CAAkBnF,IAAlB,CAAuB,MAAvB,CAF7F,CAAN;AAJ4B;AAO/B;;AACDmF,QAAAA,YAAY,CAAC9D,QAAD,EAAgD;AACxD0C,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYpG,GAAZ;AACAmG,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpE,UAAjB;;AAEA,cAAIhC,GAAJ,EAAS;AAEL,iBAAKgC,UAAL;;AACA,gBAAI,KAAKA,UAAL,IAAmB,CAAvB,EAA0B;AACtBmE,cAAAA,OAAO,CAACI,KAAR,CAAc,WAAd;AACA,mBAAK9E,eAAL,GAAuB,KAAvB;AACA+F,cAAAA,aAAa,CAAC,KAAKvF,SAAN,CAAb;AACA,mBAAKwF,SAAL,CAAe;AAAA;AAAA,sDAAgBrG,WAA/B;AACH;;AAED;AACH;;AAGD,cAAI,KAAKwE,cAAL,IAAuBnC,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBM,OAA5C,EAAqD;AACjDmC,YAAAA,OAAO,CAACI,KAAR,CAAc,WAAd;AACA,iBAAK9E,eAAL,GAAuB,KAAvB;AACA+F,YAAAA,aAAa,CAAC,KAAKvF,SAAN,CAAb;AACA,iBAAKwF,SAAL,CAAe;AAAA;AAAA,oDAAgBrG,WAA/B;AACH;AACJ,SA5PgD,CA6PjD;;;AACAsG,QAAAA,QAAQ,CAACC,CAAD,EAAgBC,eAAhB,EAA0C;AAC9C,cAAIxD,KAAK,GAAGwD,eAAe,CAACxD,KAAhB,CAAsB,GAAtB,CAAZ;AACA,cAAIyD,KAAK,CAAC5C,MAAM,CAACb,KAAK,CAAC,CAAD,CAAN,CAAP,CAAT,EACI+B,OAAO,CAACI,KAAR,CAAc,eAAd;AACJ,eAAKkB,SAAL,CAAe;AAAA;AAAA,kDAAgBK,eAA/B,EAAgD,IAAhD,EAAsD1D,KAAK,CAAC,CAAD,CAA3D;AACA;AAAA;AAAA,oCAASxD,WAAT,CAAqBmH,QAArB,CAA8BC,GAA9B,CAAkC;AAAA;AAAA,oDAAiBC,IAAnD,EAAyDC,IAAzD,CAA8D;AAAA;AAAA,wCAAWC,QAAzE,EAAmFlD,MAAM,CAACb,KAAK,CAAC,CAAD,CAAN,CAAzF;AACH;;AACDtD,QAAAA,aAAa,CAACsH,IAAD,EAAe;AACxB;AACA;AACA;AAEA,cAAIA,IAAI,CAAChE,KAAL,CAAW,GAAX,EAAgB,CAAhB,KAAsBiE,SAA1B,EAAqC,OAAOA,SAAP;;AAErC,cAAIC,GAAG,GAAGF,IAAI,CAAChE,KAAL,CAAW,GAAX,EAAgB,CAAhB,EAAmBA,KAAnB,CAAyB,GAAzB,CAAV;;AACA,cAAImE,GAAG,GAAG,IAAIC,MAAJ,EAAV;;AACA,eAAK,IAAIlE,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGgE,GAAG,CAAC9D,MAAhC,EAAwCF,KAAK,EAA7C,EAAiD;AAC7C,gBAAImE,GAAG,GAAGH,GAAG,CAAChE,KAAD,CAAH,CAAWF,KAAX,CAAiB,GAAjB,CAAV;AACAmE,YAAAA,GAAG,CAACE,GAAG,CAAC,CAAD,CAAJ,CAAH,GAAcA,GAAG,CAAC,CAAD,CAAjB;AACH,WAZuB,CAaxB;;;AACA,iBAAOF,GAAP;AACH;;AApRgD,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuR/C/J,MAAAA,O,GAAN,MAAMA,OAAN,SAAsBG,SAAtB,CAAgC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,yCAMZ,GANY;AAAA;;AAO5ByB,QAAAA,MAAM,GAAG;AACL,eAAKsI,SAAL,GAAiB,KAAKrD,IAAL,CAAUN,YAAV,CAAuBlG,KAAvB,CAAjB;AACA,eAAK8J,WAAL,GAAmB,KAAKD,SAAL,CAAerD,IAAf,CAAoBuD,MAApB,CAA2B7D,YAA3B,CAAwC/F,WAAxC,EAAqD6J,KAArD,GAA6D,EAAhF,CAFK,CAE6E;AACrF;;AACDC,QAAAA,WAAW,CAACC,OAAD,EAAkB;AACzB,eAAKL,SAAL,CAAe3E,MAAf,GAAwBgF,OAAxB;AACA,eAAKL,SAAL,CAAeM,gBAAf,CAAgC,IAAhC;AACA,eAAKC,UAAL,GAAkB,EAAE,KAAKP,SAAL,CAAe3D,YAAf,CAA4B/F,WAA5B,EAAyC6J,KAAzC,GAAiD,EAAnD,CAAlB;AACA,eAAKK,QAAL;AACA,eAAKC,QAAL,GAAgB,IAAhB;AACH;;AACDC,QAAAA,MAAM,CAACC,EAAD,EAAa;AAEf,cAAI,KAAKF,QAAT,EAAmB;AACf,gBAAIG,UAAU,GAAG,KAAKZ,SAAL,CAAerD,IAAf,CAAoBkE,WAApB,EAAjB;;AACA,gBAAID,UAAU,CAACE,CAAX,GAAe,KAAKP,UAAxB,EAAoC;AAChC,mBAAKC,QAAL;AACAI,cAAAA,UAAU,GAAG,KAAKZ,SAAL,CAAerD,IAAf,CAAoBkE,WAApB,EAAb;AACH,aALc,CAMf;AAEA;AACA;;;AACA,iBAAKb,SAAL,CAAerD,IAAf,CAAoBoE,WAApB,CAAgCH,UAAU,CAACE,CAAX,GAAgBH,EAAE,GAAG,KAAKK,KAA1D,EAAkEJ,UAAU,CAACK,CAA7E,EAAgFL,UAAU,CAACM,CAA3F;AAEH;AACJ;;AACDV,QAAAA,QAAQ,GAAG;AACP,cAAII,UAAU,GAAG,KAAKZ,SAAL,CAAerD,IAAf,CAAoBkE,WAApB,EAAjB;AACA,eAAKb,SAAL,CAAerD,IAAf,CAAoBoE,WAApB,CAAgC,KAAKd,WAArC,EAAkDW,UAAU,CAACK,CAA7D,EAAgEL,UAAU,CAACM,CAA3E;AACH;;AArC2B,O;AAwC1BnL,MAAAA,K,GAAN,MAAMA,KAAN,SAAoBE,SAApB,CAA8B;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAK1ByB,QAAAA,MAAM,GAAG;AACL,eAAKsI,SAAL,GAAiB,KAAKrD,IAAL,CAAUN,YAAV,CAAuBlG,KAAvB,CAAjB;AACA,eAAK6J,SAAL,CAAe3E,MAAf,GAAwB,EAAxB;AACH;;AACD1C,QAAAA,KAAK,GAAG;AACJ,eAAK4E,SAAL,GAAiB,CAAjB;AACA,eAAKkD,QAAL,GAAgB,KAAhB;AACA,eAAKU,EAAL,CAAQC,MAAR,GAAiB,IAAjB;AACH;;AACDC,QAAAA,cAAc,CAACC,GAAD,EAAc;AACxB,eAAKtB,SAAL,CAAe3E,MAAf,GAAwBiG,GAAxB;AACH;;AACD3D,QAAAA,QAAQ,CAAC4D,GAAD,EAAc;AAClB,eAAK5I,KAAL;AACA,eAAK4E,SAAL,GAAiBgE,GAAjB;AACA,eAAKd,QAAL,GAAgB,IAAhB;AACH;;AACDzI,QAAAA,SAAS,CAAC+D,KAAD,EAAc;AACnB,eAAKoF,EAAL,GAAUpF,KAAV;AACH;;AACDyF,QAAAA,MAAM,GAAG;AACL,eAAK7I,KAAL;AACA,eAAKqH,SAAL,CAAe3E,MAAf,GAAwB,QAAxB;AACA,eAAK8F,EAAL,CAAQC,MAAR,GAAiB,KAAjB;AACH;;AAEDV,QAAAA,MAAM,CAACC,EAAD,EAAa;AACf,cAAI,KAAKF,QAAT,EAAmB;AACf,iBAAKlD,SAAL,IAAmBoD,EAAE,GAAG,IAAxB;;AACA,gBAAI,KAAKpD,SAAL,GAAiB,CAArB,EAAwB;AACpB,mBAAKiE,MAAL;AACA;AACH;;AACD,iBAAKxB,SAAL,CAAe3E,MAAf,GAAwB;AAAA;AAAA,4CAAYnD,WAAZ,CAAwBuJ,iBAAxB,CAA0C,KAAKlE,SAA/C,EAA0D,IAA1D,CAAxB;AACH;AACJ;;AAxCyB,O","sourcesContent":["import { Button, Component, EventTouch, instantiate, Label, Node, Prefab, UITransform, v3, _decorator } from 'cc';\r\nimport { NotificationType } from '../../../../Enum/NotificationType';\r\nimport { LobbyStateEvent } from '../../../../Enum/LobbyStateEvent';\r\nimport { PageAction } from '../../../../Enum/PageAction';\r\nimport EventMng from '../../../../Manager/EventMng';\r\nimport BaseComponent from '../../../../Model/ComponentBase';\r\nimport PageControll from '../../PageControll';\r\nimport PublicModel from '../../../../Model/PublicModel';\r\nimport { RequestGPG } from '../../../Api/GPGAPI/RequestGPG';\r\nimport Player from '../../../../Model/Player';\r\nimport { ResponseGPG } from '../../../Api/GPGAPI/ResponseGPG';\r\nimport PublicData from '../../../../Model/PublicData';\r\nimport PanelLoading from '../../../NoClearNode/PanelLoading';\r\nimport { URLVlaue } from '../../../Api/SendCommand';\r\nimport BallData from '../../../../Model/BallData';\r\nimport PanelSystemMessage from '../../../NoClearNode/PanelSystemMessage';\r\nimport SocketSetting from '../../../../Socket/SocketSetting';\r\nimport { LangType } from '../../../../Enum/LangType';\r\nimport { DEV } from 'cc/env';\r\n\r\n\r\n\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('PanelHome')\r\nexport default class PanelHome extends BaseComponent {\r\n    @property(Node)\r\n    lastDrawCodeLayout: Node\r\n    @property(Node)\r\n    labelContent: Node;\r\n    @property(Node)\r\n    timeBG: Node;\r\n\r\n    @property(Prefab)\r\n    ballItem: Prefab\r\n\r\n    @property(Label)\r\n    labelTime: Label;\r\n    @property(Label)\r\n    labelCurrentTitle: Label;\r\n    @property(Label)\r\n    labelCurrentDrawIssueID: Label;\r\n    @property(Label)\r\n    labelLastDrawIssueID: Label;\r\n    @property(Label)\r\n    labelLastDrawDay: Label;\r\n    @property(Label)\r\n    labelMarquee: Label;\r\n    @property(Label)\r\n    labelMonth: Label;\r\n    @property(Label)\r\n    labelPointTitle: Label;\r\n    @property(Label)\r\n    labelMyPoint: Label;\r\n    @property(Label)\r\n    labelDetail: Label;\r\n    @property(Label)\r\n    labelGiftTitle1: Label\r\n    @property(Label)\r\n    labelGiftTitle2: Label\r\n    @property(Button)\r\n    btnMoreDraw: Button;\r\n    @property(Button)\r\n    btnPointDetail: Button;\r\n    @property(Button)\r\n    btnGoChooese: Button;\r\n    @property(Node)\r\n    specialBallItem: Node\r\n    marquee: Marquee;\r\n    timer: Timer;\r\n    isChangeIssueID: boolean;\r\n    currentIssueID: number;\r\n    loopTimer: number;\r\n    testtotoel: number = 0;\r\n    loopTime: number = 60\r\n\r\n    onLoad() {\r\n        this.marquee = this.labelMarquee.addComponent(Marquee)\r\n        this.timer = this.labelTime.addComponent(Timer);\r\n        this.timer.setBGNode(this.timeBG);\r\n        /**取TOKEN */\r\n        Player.getInstance.gpgToken = (this.handleURLData(window.location.href) as URLVlaue).token\r\n        this.setEvent(LobbyStateEvent.NextIssueID, this.reset)\r\n    }\r\n    async onEnable() {\r\n        this.reset()\r\n    }\r\n    start() {\r\n        // this.marquee.startMarque(\"HIHIHI\")\r\n        // this.timer.setTime(100)\r\n    }\r\n\r\n    onDisable() {\r\n\r\n    }\r\n    async reset() {\r\n        if (this.isChangeIssueID) {\r\n            PanelLoading.instance.closeLoading()\r\n            return;\r\n        }\r\n        await this.requestMyInfo()\r\n        await this.requestDrawHistory()\r\n        await this.requestDrawUpcoming()\r\n        await this.requesMyScore()\r\n        PanelLoading.instance.closeLoading()\r\n        if (this.isChangeIssueID) {\r\n            this.testtotoel = 0\r\n            this.loopTimer = setInterval(this.requestDrawUpcomingLoop.bind(this), this.loopTime * 1000)\r\n        }\r\n    }\r\n    //#region  DrawHistory\r\n    async requestDrawHistory() {\r\n        return new Promise<void>(async (resolve, reject) => {\r\n            const body = new RequestGPG.Body.NeedToken.DrawHistory()\r\n            body.top = \"1\"\r\n            body.sign = PublicModel.getInstance.convertSign(body, RequestGPG.Body.NeedToken.DrawHistory)\r\n            let convert = new URLSearchParams(body).toString()\r\n            await new RequestGPG.Request()\r\n                .setToken(Player.getInstance.gpgToken)\r\n                .fetchData(`${PublicData.getInstance.gpgUrlPlayApi}${RequestGPG.API.DrawHistory}?${convert}`, this.responseDrawHistory.bind(this))\r\n            resolve();\r\n        })\r\n    }\r\n    responseDrawHistory(response?: ResponseGPG.DrawHistory.DataClass) {\r\n        if (response.data) {\r\n            this.lastDrawCodeLayout.removeAllChildren()\r\n            let getDate = response.data[0]\r\n            this.labelLastDrawIssueID.string = `第${getDate.issueID.toString()}期`\r\n\r\n            /**不需要week日 */\r\n            // console.log(PublicModel.getInstance.convertDate(getDate.openDate).split(\"(\")[0]);\r\n\r\n            let getday = PublicModel.getInstance.convertDateDay(getDate.openDate).split(\"(\")[0]\r\n            this.labelLastDrawDay.string = `${getday}開獎結果`\r\n            for (let index = 0; index < getDate.drawCode.length; index++) {\r\n                let _node: Node;\r\n                let isResetPos: boolean = true;\r\n                if (index == 6) {\r\n                    _node = this.specialBallItem;\r\n                    isResetPos = false;\r\n                }\r\n                else {\r\n                    _node = instantiate(this.ballItem)\r\n                    this.lastDrawCodeLayout.addChild(_node);\r\n                }\r\n                let _class = _node.getComponent(BallData);\r\n\r\n                _class.init(Number(getDate.drawCode[index]), isResetPos).cancel()\r\n                this.labelContent.addChild(_class.label.node);\r\n            }\r\n        }\r\n    }\r\n    //#endregion\r\n    //#region  DrawUpcoming\r\n    async requestDrawUpcoming() {\r\n        return new Promise<void>(async (resolve, reject) => {\r\n            const body = new RequestGPG.Body.NeedToken.DrawUpcoming()\r\n            body.sign = PublicModel.getInstance.convertMD5(PublicData.getInstance.gpgApi)\r\n            let convert = new URLSearchParams(body).toString()\r\n            await new RequestGPG.Request()\r\n                .setToken(Player.getInstance.gpgToken)\r\n                .fetchData(`${PublicData.getInstance.gpgUrlPlayApi}${RequestGPG.API.DrawUpcoming}?${convert}`, this.responseDrawUpcoming.bind(this))\r\n            resolve()\r\n        })\r\n    }\r\n    responseDrawUpcoming(response?: ResponseGPG.DrawUpcoming.DataClass) {\r\n        let getDate = response.data[0]\r\n        PublicData.getInstance.today = getDate.openDate\r\n        this.labelCurrentDrawIssueID.string = `第${(getDate.issueID).toString()}期`\r\n        this.currentIssueID = getDate.issueID\r\n        // this.timer.setTimeNoTimer(PublicModel.getInstance.convertDateTime(getDate.openDate))\r\n        // console.log(getDate.serverNowTime);\r\n\r\n        var Date_A = new Date(getDate.openDate);\r\n        var Date_B = 0;\r\n        if (DEV)\r\n            //@ts-ignore\r\n            Date_B = new Date(getDate.serverNowTime);\r\n        else\r\n            //@ts-ignore\r\n            Date_B = new Date(getDate.serverNowTime);\r\n        //@ts-ignore\r\n        var countTime = Date_A - Date_B\r\n        var Date_C = new Date(countTime);\r\n        console.log(countTime);\r\n        console.log(Date_C);\r\n        //TODO 如果時間到了該怎處理?\r\n        this.timer.setTimer(Date_C.getTime())\r\n        if (countTime < 0) {\r\n            console.error(\"時間到了，該開始搓報API\");\r\n            this.isChangeIssueID = true;\r\n            return\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n    //#region MyScore\r\n    async requesMyScore() {\r\n        return new Promise<void>(async (resolve, reject) => {\r\n            const body = new RequestGPG.Body.NeedToken.MyScore()\r\n            const getDate = new Date(PublicData.getInstance.today)\r\n            body.sDate = `${getDate.getFullYear()}-${getDate.getMonth() + 1}-01`\r\n            body.eDate = `${getDate.getFullYear()}-${getDate.getMonth() + 1}-${PublicModel.getInstance.getMonthAllDay(PublicData.getInstance.today)}`\r\n            body.sign = PublicModel.getInstance.convertSign(body, RequestGPG.Body.NeedToken.MyScore)\r\n            let convert = new URLSearchParams(body).toString()\r\n            await new RequestGPG.Request()\r\n                .setToken(Player.getInstance.gpgToken)\r\n                .fetchData(`${PublicData.getInstance.gpgUrlPlayApi}${RequestGPG.API.My_Score}?${convert}`, this.responseMyScore.bind(this))\r\n            resolve()\r\n        })\r\n    }\r\n    responseMyScore(response?: ResponseGPG.My_Score.DataClass) {\r\n        const getDate = new Date(PublicData.getInstance.today)\r\n        this.labelMonth.string = `(${getDate.getMonth() + 1}/1~${getDate.getMonth() + 1}/${PublicModel.getInstance.getMonthAllDay(PublicData.getInstance.today)})`\r\n        if (response.data) {\r\n            console.log(\"玩家紀錄\", response);\r\n            this.labelMyPoint.string = response.data.totalScore.toString();\r\n        }\r\n        else {\r\n            this.labelMyPoint.string = \"0\"\r\n        }\r\n    }\r\n    //#endregion\r\n    //#region  MyInfo\r\n    async requestMyInfo() {\r\n        return new Promise<void>(async (resolve, reject) => {\r\n            const body = new RequestGPG.Body.NeedToken.MyInfo()\r\n            body.sign = PublicModel.getInstance.convertMD5(PublicData.getInstance.gpgApi)\r\n            let convert = new URLSearchParams(body).toString()\r\n            await new RequestGPG.Request()\r\n                .setToken(Player.getInstance.gpgToken)\r\n                .fetchData(`${PublicData.getInstance.gpgUrlPlayApi}${RequestGPG.API.MyInfo}?${convert}`, (response: ResponseGPG.MyInfo.DataClass) => {\r\n                    console.log(\"MyInfo\", response)\r\n                    console.log(\"確認玩家token登入無異常\");\r\n                    if (!response || !response.data) {\r\n                        PanelSystemMessage.instance.showSingleConfirm(SocketSetting.t(\"E_0007\", LangType.Game))\r\n                    }\r\n                    else resolve()\r\n                })\r\n        })\r\n    }\r\n\r\n    //#endregion\r\n    //#region \r\n    async requestDrawUpcomingLoop() {\r\n        const body = new RequestGPG.Body.NeedToken.DrawUpcoming()\r\n        body.sign = PublicModel.getInstance.convertMD5(PublicData.getInstance.gpgApi)\r\n        let convert = new URLSearchParams(body).toString()\r\n        await new RequestGPG.Request()\r\n            .setToken(Player.getInstance.gpgToken)\r\n            .fetchData(`${PublicData.getInstance.gpgUrlPlayApi}${RequestGPG.API.DrawUpcoming}?${convert}`, this.checkIssueID.bind(this))\r\n    }\r\n    checkIssueID(response?: ResponseGPG.DrawUpcoming.DataClass) {\r\n        console.log(\"打拉打拉\");\r\n        console.log(DEV);\r\n        console.log(this.testtotoel);\r\n\r\n        if (DEV) {\r\n\r\n            this.testtotoel++\r\n            if (this.testtotoel == 3) {\r\n                console.error(\"終於換天拉!!!!\");\r\n                this.isChangeIssueID = false;\r\n                clearInterval(this.loopTimer)\r\n                this.eventEmit(LobbyStateEvent.NextIssueID)\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n\r\n        if (this.currentIssueID != response.data[0].issueID) {\r\n            console.error(\"終於換天拉!!!!\");\r\n            this.isChangeIssueID = false;\r\n            clearInterval(this.loopTimer)\r\n            this.eventEmit(LobbyStateEvent.NextIssueID)\r\n        }\r\n    }\r\n    //#endregion\r\n    onGoPage(e: EventTouch, customEventData?: string) {\r\n        let split = customEventData.split('-')\r\n        if (isNaN(Number(split[0])))\r\n            console.error(\"錯誤啦!!!是不是忘記設定\");\r\n        this.eventEmit(LobbyStateEvent.ChangePointPage, null, split[1])\r\n        EventMng.getInstance.mapEvnet.get(NotificationType.Page).emit(PageAction.ChangeTo, Number(split[0]))\r\n    }\r\n    handleURLData(_url: string) {\r\n        //  _url = \"https://play1.godplay.app/10001/index.html?loginType=web&token=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ0aW1lIjoxNjY4NzYyMjcwMDQ1LCJ1aWQiOiJYUGpST1oiLCJkYyI6IkdQRyIsImFnZW50SWQiOiJ0ckUzeW1XaURMYjIiLCJicmFuZElkIjoiR1BHIiwiYnJhbmRUaXRsZSI6IkdQRyIsImdhbWVJZCI6IjEwMDAxIiwiaWF0IjoxNjY4NzYyMjcwLCJleHAiOjE2Njg3NjU4NzB9.k_GVGPiQCjWxhFG3SGM2zoSy_ggN2cZXuUQ5GvqZib_0TCJ2ul9K5xbTKkgwm7OUw7nMCWLWlwERHc0MMF586SgjuQe9W7SoRSMaBtw_AkiKNn4S1NMvhemgNAdIyjL7I1Gg5xyT-x110RF73lF-yt-n6KKTP3TGkd7wR9_fPz8&record=https://backendsystem.godplay.app/wList&dc=GPG&agentId=trE3ymWiDLb2&GGID=1&lang=tw&forceExchange=true&providerlogo=true\"\r\n        // console.log(_url.split(\"?\")[1].split(\"&\"));\r\n        // console.log(_url.split(\"?\")[1]);\r\n\r\n        if (_url.split(\"?\")[1] == undefined) return undefined\r\n\r\n        let arr = _url.split(\"?\")[1].split(\"&\")\r\n        let obj = new Object()\r\n        for (let index = 0; index < arr.length; index++) {\r\n            let cut = arr[index].split(\"=\")\r\n            obj[cut[0]] = cut[1]\r\n        }\r\n        // console.log(obj);\r\n        return obj\r\n    }\r\n}\r\n\r\nclass Marquee extends Component {\r\n    bindLabel: Label;\r\n    leftBorder: number;\r\n    rightBorder: number;\r\n    isAction: boolean;\r\n    /**基本上100 OK */\r\n    speed: number = 100;\r\n    onLoad() {\r\n        this.bindLabel = this.node.getComponent(Label)\r\n        this.rightBorder = this.bindLabel.node.parent.getComponent(UITransform).width + 10//額外預留\r\n    }\r\n    startMarque(message: string) {\r\n        this.bindLabel.string = message\r\n        this.bindLabel.updateRenderData(true)\r\n        this.leftBorder = -(this.bindLabel.getComponent(UITransform).width + 10)\r\n        this.resetPos()\r\n        this.isAction = true;\r\n    }\r\n    update(dt: number) {\r\n\r\n        if (this.isAction) {\r\n            let currentPos = this.bindLabel.node.getPosition()\r\n            if (currentPos.x < this.leftBorder) {\r\n                this.resetPos()\r\n                currentPos = this.bindLabel.node.getPosition()\r\n            }\r\n            // console.log(currentPos.x);\r\n\r\n            // console.log(currentPos.x - (dt * this.speed));\r\n            // \r\n            this.bindLabel.node.setPosition(currentPos.x - (dt * this.speed), currentPos.y, currentPos.z)\r\n\r\n        }\r\n    }\r\n    resetPos() {\r\n        let currentPos = this.bindLabel.node.getPosition()\r\n        this.bindLabel.node.setPosition(this.rightBorder, currentPos.y, currentPos.z)\r\n    }\r\n}\r\n\r\nclass Timer extends Component {\r\n    bindLabel: Label;\r\n    countTime: number;\r\n    isAction: boolean;\r\n    bg: Node;\r\n    onLoad() {\r\n        this.bindLabel = this.node.getComponent(Label)\r\n        this.bindLabel.string = \"\"\r\n    }\r\n    reset() {\r\n        this.countTime = 0\r\n        this.isAction = false\r\n        this.bg.active = true\r\n    }\r\n    setTimeNoTimer(str: string) {\r\n        this.bindLabel.string = str\r\n    }\r\n    setTimer(num: number) {\r\n        this.reset()\r\n        this.countTime = num\r\n        this.isAction = true\r\n    }\r\n    setBGNode(_node: Node) {\r\n        this.bg = _node\r\n    }\r\n    timeUp() {\r\n        this.reset()\r\n        this.bindLabel.string = \"開獎中...\"\r\n        this.bg.active = false;\r\n    }\r\n\r\n    update(dt: number) {\r\n        if (this.isAction) {\r\n            this.countTime -= (dt * 1000)\r\n            if (this.countTime < 0) {\r\n                this.timeUp()\r\n                return\r\n            }\r\n            this.bindLabel.string = PublicModel.getInstance.formatMillisecond(this.countTime, true)\r\n        }\r\n    }\r\n\r\n\r\n}"]}
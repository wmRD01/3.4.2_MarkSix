{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/Lobby/Page/Home/PanelHome.ts"],"names":["Marquee","Timer","Button","Component","instantiate","Label","Node","Prefab","UITransform","_decorator","NotificationType","LobbyStateEvent","PageAction","EventMng","BaseComponent","PublicModel","RequestGPG","Player","PublicData","PanelLoading","BallData","PanelSystemMessage","SocketSetting","LangType","ccclass","property","PanelHome","onLoad","marquee","labelMarquee","addComponent","timer","labelTime","getInstance","gpgToken","handleURLData","window","location","href","token","onEnable","requestMyInfo","requestDrawHistory","requestDrawUpcoming","lastIssueID","currentIssueID","requesMyScore","instance","closeLoading","start","onDisable","Promise","resolve","reject","body","Body","NeedToken","DrawHistory","top","sign","convertSign","convert","URLSearchParams","toString","Request","setToken","fetchData","gpgUrlPlayApi","API","responseDrawHistory","bind","response","data","getDate","issueID","labelLastDrawIssueID","string","getday","convertDateDay","openDate","split","labelLastDrawDay","index","drawCode","length","_node","isResetPos","specialBallItem","ballItem","lastDrawCodeLayout","addChild","_class","getComponent","init","Number","cancel","labelContent","label","node","DrawUpcoming","convertMD5","gpgApi","responseDrawUpcoming","labelCurrentDrawIssueID","Date_A","Date","Date_B","serverNowTime","Date_C","setTimer","Math","abs","getTime","today","MyScore","sDate","getFullYear","getMonth","eDate","getMonthAllDay","My_Score","responseMyScore","labelMonth","console","log","labelMyPoint","totalScore","MyInfo","showSingleConfirm","t","Game","onGoPage","e","customEventData","isNaN","error","eventEmit","ChangePointPage","mapEvnet","get","Page","emit","ChangeTo","_url","undefined","arr","obj","Object","cut","bindLabel","rightBorder","parent","width","startMarque","message","updateRenderData","leftBorder","resetPos","isAction","update","dt","currentPos","getPosition","x","setPosition","speed","y","z","reset","countTime","setTimeNoTimer","str","num","formatMillisecond"],"mappings":"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","sourcesContent":["import { Button, Component, EventTouch, instantiate, Label, Node, Prefab, UITransform, v3, _decorator } from 'cc';\r\nimport { NotificationType } from '../../../../Enum/NotificationType';\r\nimport { LobbyStateEvent } from '../../../../Enum/LobbyStateEvent';\r\nimport { PageAction } from '../../../../Enum/PageAction';\r\nimport EventMng from '../../../../Manager/EventMng';\r\nimport BaseComponent from '../../../../Model/ComponentBase';\r\nimport PageControll from '../../PageControll';\r\nimport PublicModel from '../../../../Model/PublicModel';\r\nimport { RequestGPG } from '../../../Api/GPGAPI/RequestGPG';\r\nimport Player from '../../../../Model/Player';\r\nimport { ResponseGPG } from '../../../Api/GPGAPI/ResponseGPG';\r\nimport PublicData from '../../../../Model/PublicData';\r\nimport PanelLoading from '../../../NoClearNode/PanelLoading';\r\nimport { URLVlaue } from '../../../Api/SendCommand';\r\nimport BallData from '../../../../Model/BallData';\r\nimport PanelSystemMessage from '../../../NoClearNode/PanelSystemMessage';\r\nimport SocketSetting from '../../../../Socket/SocketSetting';\r\nimport { LangType } from '../../../../Enum/LangType';\r\n\r\n\r\n\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('PanelHome')\r\nexport default class PanelHome extends BaseComponent {\r\n    @property(Node)\r\n    lastDrawCodeLayout: Node\r\n    @property(Node)\r\n    labelContent: Node;\r\n\r\n    @property(Prefab)\r\n    ballItem: Prefab\r\n\r\n    @property(Label)\r\n    labelTime: Label;\r\n    @property(Label)\r\n    labelCurrentTitle: Label;\r\n    @property(Label)\r\n    labelCurrentDrawIssueID: Label;\r\n    @property(Label)\r\n    labelLastDrawIssueID: Label;\r\n    @property(Label)\r\n    labelLastDrawDay: Label;\r\n    @property(Label)\r\n    labelMarquee: Label;\r\n    @property(Label)\r\n    labelMonth: Label;\r\n    @property(Label)\r\n    labelPointTitle: Label;\r\n    @property(Label)\r\n    labelMyPoint: Label;\r\n    @property(Label)\r\n    labelDetail: Label;\r\n    @property(Label)\r\n    labelGiftTitle1: Label\r\n    @property(Label)\r\n    labelGiftTitle2: Label\r\n    @property(Button)\r\n    btnMoreDraw: Button;\r\n    @property(Button)\r\n    btnPointDetail: Button;\r\n    @property(Button)\r\n    btnGoChooese: Button;\r\n    @property(Node)\r\n    specialBallItem: Node\r\n    marquee: Marquee;\r\n    timer: Timer;\r\n    currentIssueID: number;\r\n    lastIssueID: number;\r\n    onLoad() {\r\n        this.marquee = this.labelMarquee.addComponent(Marquee)\r\n        this.timer = this.labelTime.addComponent(Timer);\r\n        /**取TOKEN */\r\n        Player.getInstance.gpgToken = (this.handleURLData(window.location.href) as URLVlaue).token\r\n\r\n    }\r\n    async onEnable() {\r\n        await this.requestMyInfo()\r\n        await this.requestDrawHistory()\r\n        await this.requestDrawUpcoming()\r\n        if (this.lastIssueID != this.currentIssueID) {\r\n            //TODO 製做我的積分\r\n            await this.requesMyScore()\r\n            /**代表更新最新一期 */\r\n            this.lastIssueID = this.currentIssueID;\r\n        }\r\n        PanelLoading.instance.closeLoading()\r\n    }\r\n    start() {\r\n        // this.marquee.startMarque(\"HIHIHI\")\r\n        // this.timer.setTime(100)\r\n    }\r\n\r\n    onDisable() {\r\n\r\n    }\r\n    //#region  DrawHistory\r\n    async requestDrawHistory() {\r\n        return new Promise<void>(async (resolve, reject) => {\r\n            const body = new RequestGPG.Body.NeedToken.DrawHistory()\r\n            body.top = \"1\"\r\n            body.sign = PublicModel.getInstance.convertSign(body, RequestGPG.Body.NeedToken.DrawHistory)\r\n            let convert = new URLSearchParams(body).toString()\r\n            await new RequestGPG.Request()\r\n                .setToken(Player.getInstance.gpgToken)\r\n                .fetchData(`${PublicData.getInstance.gpgUrlPlayApi}${RequestGPG.API.DrawHistory}?${convert}`, this.responseDrawHistory.bind(this))\r\n            resolve();\r\n        })\r\n    }\r\n    responseDrawHistory(response?: ResponseGPG.DrawHistory.DataClass) {\r\n        if (response.data) {\r\n            let getDate = response.data[0]\r\n            if (this.currentIssueID == getDate.issueID) return\r\n            this.currentIssueID = getDate.issueID;\r\n            this.labelLastDrawIssueID.string = `第${getDate.issueID.toString()}期`\r\n\r\n            /**不需要week日 */\r\n            // console.log(PublicModel.getInstance.convertDate(getDate.openDate).split(\"(\")[0]);\r\n\r\n            let getday = PublicModel.getInstance.convertDateDay(getDate.openDate).split(\"(\")[0]\r\n            this.labelLastDrawDay.string = `${getday}開獎結果`\r\n            for (let index = 0; index < getDate.drawCode.length; index++) {\r\n                let _node: Node;\r\n                let isResetPos: boolean = true;\r\n                if (index == 6) {\r\n                    _node = this.specialBallItem;\r\n                    isResetPos = false;\r\n                }\r\n                else {\r\n                    _node = instantiate(this.ballItem)\r\n                    this.lastDrawCodeLayout.addChild(_node);\r\n                }\r\n                let _class = _node.getComponent(BallData);\r\n\r\n                _class.init(Number(getDate.drawCode[index]), isResetPos).cancel()\r\n                this.labelContent.addChild(_class.label.node);\r\n            }\r\n        }\r\n    }\r\n    //#endregion\r\n    //#region  DrawUpcoming\r\n    async requestDrawUpcoming() {\r\n        return new Promise<void>(async (resolve, reject) => {\r\n            const body = new RequestGPG.Body.NeedToken.DrawUpcoming()\r\n            body.sign = PublicModel.getInstance.convertMD5(PublicData.getInstance.gpgApi)\r\n            let convert = new URLSearchParams(body).toString()\r\n            await new RequestGPG.Request()\r\n                .setToken(Player.getInstance.gpgToken)\r\n                .fetchData(`${PublicData.getInstance.gpgUrlPlayApi}${RequestGPG.API.DrawUpcoming}?${convert}`, this.responseDrawUpcoming.bind(this))\r\n            resolve()\r\n        })\r\n    }\r\n    responseDrawUpcoming(response?: ResponseGPG.DrawUpcoming.DataClass) {\r\n        let getDate = response.data[0]\r\n        this.labelCurrentDrawIssueID.string = `第${(getDate.issueID).toString()}期`\r\n        // this.timer.setTimeNoTimer(PublicModel.getInstance.convertDateTime(getDate.openDate))\r\n        var Date_A = new Date(getDate.openDate);\r\n        var Date_B = new Date(getDate.serverNowTime);\r\n        //@ts-ignore\r\n        var Date_C = new Date(Date_B - Date_A);\r\n        //TODO 如果時間到了該怎處理?\r\n        this.timer.setTimer(Math.abs(Date_C.getTime()))\r\n\r\n\r\n        PublicData.getInstance.today = getDate.openDate\r\n    }\r\n    //#endregion\r\n\r\n    //#region MyScore\r\n    async requesMyScore() {\r\n        return new Promise<void>(async (resolve, reject) => {\r\n            const body = new RequestGPG.Body.NeedToken.MyScore()\r\n            const getDate = new Date(PublicData.getInstance.today)\r\n            body.sDate = `${getDate.getFullYear()}-${getDate.getMonth() + 1}-01`\r\n            body.eDate = `${getDate.getFullYear()}-${getDate.getMonth() + 1}-${PublicModel.getInstance.getMonthAllDay(PublicData.getInstance.today)}`\r\n            body.sign = PublicModel.getInstance.convertSign(body, RequestGPG.Body.NeedToken.MyScore)\r\n            let convert = new URLSearchParams(body).toString()\r\n            await new RequestGPG.Request()\r\n                .setToken(Player.getInstance.gpgToken)\r\n                .fetchData(`${PublicData.getInstance.gpgUrlPlayApi}${RequestGPG.API.My_Score}?${convert}`, this.responseMyScore.bind(this))\r\n            resolve()\r\n        })\r\n    }\r\n    responseMyScore(response?: ResponseGPG.My_Score.DataClass) {\r\n        const getDate = new Date(PublicData.getInstance.today)\r\n        this.labelMonth.string = `(${getDate.getMonth() + 1}/1~${getDate.getMonth() + 1}/${PublicModel.getInstance.getMonthAllDay(PublicData.getInstance.today)})`\r\n        if (response.data) {\r\n            console.log(\"玩家紀錄\", response);\r\n            this.labelMyPoint.string = response.data.totalScore.toString();\r\n        }\r\n        else {\r\n            this.labelMyPoint.string = \"0\"\r\n        }\r\n    }\r\n    //#endregion\r\n    //#region  MyInfo\r\n    async requestMyInfo() {\r\n        return new Promise<void>(async (resolve, reject) => {\r\n            const body = new RequestGPG.Body.NeedToken.MyInfo()\r\n            body.sign = PublicModel.getInstance.convertMD5(PublicData.getInstance.gpgApi)\r\n            let convert = new URLSearchParams(body).toString()\r\n            await new RequestGPG.Request()\r\n                .setToken(Player.getInstance.gpgToken)\r\n                .fetchData(`${PublicData.getInstance.gpgUrlPlayApi}${RequestGPG.API.MyInfo}?${convert}`, (response: ResponseGPG.MyInfo.DataClass) => {\r\n                    console.log(\"MyInfo\", response)\r\n                    console.log(\"確認玩家token登入無異常\");\r\n                    if (!response || !response.data) {\r\n                        PanelSystemMessage.instance.showSingleConfirm(SocketSetting.t(\"E_0007\", LangType.Game))\r\n                    }\r\n                    else resolve()\r\n                })\r\n        })\r\n    }\r\n\r\n    //#endregion\r\n    onGoPage(e: EventTouch, customEventData?: string) {\r\n        let split = customEventData.split('-')\r\n        if (isNaN(Number(split[0])))\r\n            console.error(\"錯誤啦!!!是不是忘記設定\");\r\n        this.eventEmit(LobbyStateEvent.ChangePointPage, null, split[1])\r\n        EventMng.getInstance.mapEvnet.get(NotificationType.Page).emit(PageAction.ChangeTo, Number(split[0]))\r\n    }\r\n    handleURLData(_url: string) {\r\n        //  _url = \"https://play1.godplay.app/10001/index.html?loginType=web&token=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ0aW1lIjoxNjY4NzYyMjcwMDQ1LCJ1aWQiOiJYUGpST1oiLCJkYyI6IkdQRyIsImFnZW50SWQiOiJ0ckUzeW1XaURMYjIiLCJicmFuZElkIjoiR1BHIiwiYnJhbmRUaXRsZSI6IkdQRyIsImdhbWVJZCI6IjEwMDAxIiwiaWF0IjoxNjY4NzYyMjcwLCJleHAiOjE2Njg3NjU4NzB9.k_GVGPiQCjWxhFG3SGM2zoSy_ggN2cZXuUQ5GvqZib_0TCJ2ul9K5xbTKkgwm7OUw7nMCWLWlwERHc0MMF586SgjuQe9W7SoRSMaBtw_AkiKNn4S1NMvhemgNAdIyjL7I1Gg5xyT-x110RF73lF-yt-n6KKTP3TGkd7wR9_fPz8&record=https://backendsystem.godplay.app/wList&dc=GPG&agentId=trE3ymWiDLb2&GGID=1&lang=tw&forceExchange=true&providerlogo=true\"\r\n        // console.log(_url.split(\"?\")[1].split(\"&\"));\r\n        // console.log(_url.split(\"?\")[1]);\r\n\r\n        if (_url.split(\"?\")[1] == undefined) return undefined\r\n\r\n        let arr = _url.split(\"?\")[1].split(\"&\")\r\n        let obj = new Object()\r\n        for (let index = 0; index < arr.length; index++) {\r\n            let cut = arr[index].split(\"=\")\r\n            obj[cut[0]] = cut[1]\r\n        }\r\n        // console.log(obj);\r\n        return obj\r\n    }\r\n}\r\n\r\nclass Marquee extends Component {\r\n    bindLabel: Label;\r\n    leftBorder: number;\r\n    rightBorder: number;\r\n    isAction: boolean;\r\n    /**基本上100 OK */\r\n    speed: number = 100;\r\n    onLoad() {\r\n        this.bindLabel = this.node.getComponent(Label)\r\n        this.rightBorder = this.bindLabel.node.parent.getComponent(UITransform).width + 10//額外預留\r\n    }\r\n    startMarque(message: string) {\r\n        this.bindLabel.string = message\r\n        this.bindLabel.updateRenderData(true)\r\n        this.leftBorder = -(this.bindLabel.getComponent(UITransform).width + 10)\r\n        this.resetPos()\r\n        this.isAction = true;\r\n    }\r\n    update(dt: number) {\r\n\r\n        if (this.isAction) {\r\n            let currentPos = this.bindLabel.node.getPosition()\r\n            if (currentPos.x < this.leftBorder) {\r\n                this.resetPos()\r\n                currentPos = this.bindLabel.node.getPosition()\r\n            }\r\n            // console.log(currentPos.x);\r\n\r\n            // console.log(currentPos.x - (dt * this.speed));\r\n            // \r\n            this.bindLabel.node.setPosition(currentPos.x - (dt * this.speed), currentPos.y, currentPos.z)\r\n\r\n        }\r\n    }\r\n    resetPos() {\r\n        let currentPos = this.bindLabel.node.getPosition()\r\n        this.bindLabel.node.setPosition(this.rightBorder, currentPos.y, currentPos.z)\r\n    }\r\n}\r\n\r\nclass Timer extends Component {\r\n    bindLabel: Label;\r\n    countTime: number;\r\n    isAction: boolean\r\n    onLoad() {\r\n        this.bindLabel = this.node.getComponent(Label)\r\n        this.bindLabel.string = \"\"\r\n    }\r\n    reset() {\r\n        this.countTime = 0\r\n        this.isAction = false\r\n    }\r\n    setTimeNoTimer(str: string) {\r\n        this.bindLabel.string = str\r\n    }\r\n    setTimer(num: number) {\r\n        this.reset()\r\n        this.countTime = num\r\n        this.isAction = true\r\n    }\r\n\r\n    update(dt: number) {\r\n        if (this.isAction) {\r\n            this.countTime -= (dt * 1000)\r\n            if (this.countTime < 0) this.reset()\r\n            this.bindLabel.string = PublicModel.getInstance.formatMillisecond(this.countTime, true)\r\n        }\r\n    }\r\n\r\n\r\n}"]}
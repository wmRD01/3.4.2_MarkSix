{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/Lobby/Page/Point/PanelPageButton.ts"],"names":["Button","Node","Sprite","_decorator","AssetType","AssetMng","BaseComponent","ccclass","property","PanelPageButton","setPanelRank","_node","panelRank","setPanelPoint","panelPoint","start","active","onChangePanel","PageType","Point","toString","e","customEventData","waitStateCheck","console","log","convert","Number","Rank","changeState","spriteRank","spritePoint","_sprite","state","getSprtie","OnOffData","On","Off","spriteFrame","AssetClass","get","data"],"mappings":"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","sourcesContent":["import { Button, EventTouch, Node, Sprite, _decorator } from 'cc';\r\nimport { AssetType } from '../../../../Enum/AssetType';\r\nimport AssetMng from '../../../../Manager/AssetMng';\r\nimport BaseComponent from '../../../../Model/ComponentBase';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('PanelPageButton')\r\nexport default class PanelPageButton extends BaseComponent {\r\n    @property(Node)\r\n    panelRank: Node;\r\n    @property(Node)\r\n    panelPoint: Node;\r\n\r\n    @property(Button)\r\n    btnRank: Button;\r\n    @property(Button)\r\n    btnPoint: Button;\r\n\r\n\r\n    @property(Sprite)\r\n    spriteRank: Sprite;\r\n    @property(Sprite)\r\n    spritePoint: Sprite;\r\n    /**Prefab仔入用 */\r\n    setPanelRank(_node: Node) {\r\n        this.panelRank = _node\r\n    }\r\n    setPanelPoint(_node: Node) {\r\n        this.panelPoint = _node\r\n    }\r\n    start() {\r\n        this.panelRank.active = false;\r\n        this.panelPoint.active = false\r\n        this.onChangePanel(null, PageType.Point.toString());\r\n    }\r\n    async onChangePanel(e: EventTouch, customEventData?: string) {\r\n        await AssetMng.waitStateCheck(AssetType.Sprite)\r\n        console.log(customEventData);\r\n\r\n        let convert = Number(customEventData)\r\n        console.log(this.panelRank.active);\r\n        console.log(this.panelPoint.active);\r\n\r\n        switch (convert) {\r\n            case PageType.Rank:\r\n                if (this.panelRank.active) return\r\n                this.changeState(this.panelRank, this.spriteRank, true)\r\n                this.changeState(this.panelPoint, this.spritePoint, false)\r\n                break;\r\n            case PageType.Point:\r\n                if (this.panelPoint.active) return\r\n                this.changeState(this.panelRank, this.spriteRank, false)\r\n                this.changeState(this.panelPoint, this.spritePoint, true)\r\n                break;\r\n\r\n        }\r\n\r\n    }\r\n    changeState(_node: Node, _sprite: Sprite, state: boolean) {\r\n        _node.active = state\r\n        let getSprtie = state ? OnOffData.On : OnOffData.Off\r\n        _sprite.spriteFrame = AssetMng.AssetClass.get(AssetType.Sprite).data.get(getSprtie)\r\n    }\r\n}\r\nenum PageType {\r\n    Point,\r\n    Rank,\r\n}\r\nenum OnOffData {\r\n    On = \"integral_button01\",\r\n    Off = \"integral_button00\"\r\n}"]}
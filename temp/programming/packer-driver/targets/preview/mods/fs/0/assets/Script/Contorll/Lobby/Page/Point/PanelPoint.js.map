{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/Lobby/Page/Point/PanelPoint.ts"],"names":["instantiate","Node","Prefab","ScrollView","Vec3","_decorator","BaseComponent","PointItemData","AssetType","AssetMng","RequestGPG","Player","PublicModel","PanelLoading","ccclass","property","PanelPoint","start","waitStateCheck","Sprite","layoutContent","removeAllChildren","scrollview","node","on","EventType","SCROLL_TO_BOTTOM","onViewBottom","onEnable","children","length","maxCount","returnFunction","responseDrawHistory","response","currentCount","data","isDateMax","index","ClientData","_node","item","_class","getComponent","setPosition","ZERO","addChild","setLabelContent","labelContent","setOutlineContent","OutlineContent","setDayData","openDate","issueID","setOpenNumber","drawCode","init","_scrollview","isAsync","tryGet","pageCount","body","Body","NeedToken","DrawHistory","top","toString","sign","getInstance","convertSign","convert","URLSearchParams","Request","setToken","gpgToken","fetchData","APIUrl","playAPI","API","bind","console","error","instance","closeLoading"],"mappings":"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","sourcesContent":["import { instantiate, Node, Prefab, ScrollView, Vec3, ViewGroup, _decorator } from 'cc';\r\nimport BaseComponent from '../../../../Model/ComponentBase';\r\nimport PointItemData from '../../../../Model/PointItemData';\r\nimport { AssetType } from '../../../../Enum/AssetType';\r\nimport AssetMng from '../../../../Manager/AssetMng';\r\nimport { NotificationType } from '../../../../Enum/NotificationType';\r\nimport { RequestGPG } from '../../../Api/GPGAPI/RequestGPG';\r\nimport Player from '../../../../Model/Player';\r\nimport PublicModel from '../../../../Model/PublicModel';\r\nimport { ResponseGPG } from '../../../Api/GPGAPI/ResponseGPG';\r\nimport PanelLoading from '../../../NoClearNode/PanelLoading';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('PanelPoint')\r\nexport default class PanelPoint extends BaseComponent {\r\n    @property(Prefab)\r\n    item: Prefab\r\n    @property(Node)\r\n    layoutContent: Node;\r\n    @property(Node)\r\n    labelContent: Node;\r\n    @property(Node)\r\n    OutlineContent: Node;\r\n    maxCount: number = 30;\r\n    /**一次取得最多頁數 */\r\n    pageCount: number = 10;\r\n    currentCount: number = 0;\r\n    @property(ScrollView)\r\n    scrollview: ScrollView;\r\n    isAsync: boolean;\r\n    isDateMax: boolean;\r\n    async start() {\r\n        await AssetMng.waitStateCheck(AssetType.Sprite)\r\n        this.layoutContent.removeAllChildren()\r\n        this.scrollview.node.on(ScrollView.EventType.SCROLL_TO_BOTTOM, this.onViewBottom, this)\r\n    }\r\n    onEnable() {\r\n\r\n        if (this.layoutContent.children.length > this.maxCount) this.returnFunction()\r\n        if (this.layoutContent.children.length == 0) {\r\n            this.onViewBottom()\r\n        }\r\n        else this.returnFunction();\r\n    }\r\n    responseDrawHistory(response?: ResponseGPG.DrawHistory.DataClass) {\r\n        if (this.currentCount == response.data.length) {\r\n            this.isDateMax = true\r\n            return\r\n        }\r\n        for (let index = this.currentCount; index < response.data.length; index++) {\r\n            if (this.layoutContent.children.length > this.maxCount) break;\r\n            this.ClientData(response.data[index])\r\n        }\r\n        this.currentCount = response.data.length;\r\n    }\r\n    ClientData(data: ResponseGPG.DrawHistory.History) {\r\n        let _node = instantiate(this.item)\r\n        let _class = _node.getComponent(PointItemData)\r\n\r\n        _node.setPosition(Vec3.ZERO)\r\n        this.layoutContent.addChild(_node)\r\n        _class\r\n            .setLabelContent(this.labelContent)\r\n            .setOutlineContent(this.OutlineContent)\r\n            .setDayData(data.openDate, data.issueID)\r\n            .setOpenNumber(data.drawCode)\r\n            .init()\r\n\r\n    }\r\n    async onViewBottom(_scrollview?: ScrollView) {\r\n        if (this.currentCount >= this.maxCount) this.returnFunction()\r\n        if (this.isDateMax) this.returnFunction()\r\n        if (this.isAsync) this.returnFunction()\r\n        this.isAsync = true;\r\n        /**新增請求筆數 */\r\n        let tryGet = this.currentCount + this.pageCount\r\n        const body = new RequestGPG.Body.NeedToken.DrawHistory()\r\n        body.top = tryGet.toString()//目前固定10筆\r\n        body.sign = PublicModel.getInstance.convertSign(body, RequestGPG.Body.NeedToken.DrawHistory)\r\n        let convert = new URLSearchParams(body).toString()\r\n        await new RequestGPG.Request()\r\n            .setToken(Player.getInstance.gpgToken)\r\n            .fetchData(`${RequestGPG.APIUrl.playAPI}${RequestGPG.API.DrawHistory}?${convert}`, this.responseDrawHistory.bind(this))\r\n        console.error(\"超過會走這?\", this.currentCount);\r\n        PanelLoading.instance.closeLoading()\r\n        this.isAsync = false;\r\n    }\r\n    returnFunction() {\r\n        PanelLoading.instance.closeLoading()\r\n        return;\r\n    }\r\n}"]}
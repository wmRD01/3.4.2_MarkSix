{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/Lobby/Page/Point/PanelPoint.ts"],"names":["instantiate","Node","Prefab","ScrollView","Vec3","_decorator","BaseComponent","PointItemData","AssetType","AssetMng","RequestGPG","Player","PublicModel","PanelLoading","PublicData","LobbyStateEvent","ccclass","property","PanelPoint","Map","start","waitStateCheck","Sprite","reset","scrollview","node","on","EventType","SCROLL_TO_BOTTOM","onViewBottom","setEvent","NextIssueID","onEnable","layoutContent","children","length","maxCount","returnFunction","removeAllChildren","active","requestHistory","count","Promise","resolve","reject","body","Body","NeedToken","DrawHistory","top","toString","sign","getInstance","convertSign","convert","URLSearchParams","Request","setToken","gpgToken","fetchData","gpgUrlPlayApi","API","responseDrawHistory","bind","response","console","log","currentCount","data","isDateMax","index","mapDate","set","issueID","ClientData","_node","item","_class","getComponent","setPosition","ZERO","addChild","setLabelContent","labelContent","setOutlineContent","OutlineContent","setDayData","openDate","setOpenNumber","drawCode","init","requesBetlog","Betlog","getDate","convertDateDiff","today","sDate","getFullYear","getMonth","eDate","split","responseBetlog","has","get","setSelfNumber","betCode","setScore","score","_scrollview","isAsync","tryGet","pageCount","instance","closeLoading"],"mappings":"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","sourcesContent":["import { instantiate, Node, Prefab, ScrollView, Vec3, ViewGroup, _decorator } from 'cc';\r\nimport BaseComponent from '../../../../Model/ComponentBase';\r\nimport PointItemData from '../../../../Model/PointItemData';\r\nimport { AssetType } from '../../../../Enum/AssetType';\r\nimport AssetMng from '../../../../Manager/AssetMng';\r\nimport { NotificationType } from '../../../../Enum/NotificationType';\r\nimport { RequestGPG } from '../../../Api/GPGAPI/RequestGPG';\r\nimport Player from '../../../../Model/Player';\r\nimport PublicModel from '../../../../Model/PublicModel';\r\nimport { ResponseGPG } from '../../../Api/GPGAPI/ResponseGPG';\r\nimport PanelLoading from '../../../NoClearNode/PanelLoading';\r\nimport PublicData from '../../../../Model/PublicData';\r\nimport { LobbyStateEvent } from '../../../../Enum/LobbyStateEvent';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('PanelPoint')\r\nexport default class PanelPoint extends BaseComponent {\r\n    @property(Prefab)\r\n    item: Prefab\r\n    @property(Node)\r\n    layoutContent: Node;\r\n    @property(Node)\r\n    labelContent: Node;\r\n    @property(Node)\r\n    OutlineContent: Node;\r\n    maxCount: number = 30;\r\n    /**一次取得最多頁數 */\r\n    pageCount: number = 10;\r\n    currentCount: number = 0;\r\n    @property(ScrollView)\r\n    scrollview: ScrollView;\r\n    isAsync: boolean;\r\n    isDateMax: boolean;\r\n    mapDate: Map<number, PointItemData> = new Map()\r\n    async start() {\r\n        await AssetMng.waitStateCheck(AssetType.Sprite)\r\n        this.reset()\r\n\r\n        this.scrollview.node.on(ScrollView.EventType.SCROLL_TO_BOTTOM, this.onViewBottom, this)\r\n        this.setEvent(LobbyStateEvent.NextIssueID, this.reset)\r\n    }\r\n    onEnable() {\r\n\r\n        if (this.layoutContent.children.length > this.maxCount) this.returnFunction()\r\n        if (this.layoutContent.children.length == 0) {\r\n            this.onViewBottom()\r\n        }\r\n        else this.returnFunction();\r\n    }\r\n    reset() {\r\n        this.layoutContent.removeAllChildren()\r\n        if (this.node.active) {\r\n            this.onViewBottom()\r\n        }\r\n    }\r\n    //#region History\r\n    async requestHistory(count: number) {\r\n        return new Promise<void>(async (resolve, reject) => {\r\n            const body = new RequestGPG.Body.NeedToken.DrawHistory()\r\n            body.top = count.toString()//目前固定10筆\r\n            body.sign = PublicModel.getInstance.convertSign(body, RequestGPG.Body.NeedToken.DrawHistory)\r\n            let convert = new URLSearchParams(body).toString()\r\n            await new RequestGPG.Request()\r\n                .setToken(Player.getInstance.gpgToken)\r\n                .fetchData(`${PublicData.getInstance.gpgUrlPlayApi}${RequestGPG.API.DrawHistory}?${convert}`, this.responseDrawHistory.bind(this))\r\n            resolve()\r\n        })\r\n    }\r\n    responseDrawHistory(response?: ResponseGPG.DrawHistory.DataClass) {\r\n        console.log(\"開獎紀錄\", response);\r\n\r\n        if (this.currentCount == response.data.length) {\r\n            this.isDateMax = true\r\n            return\r\n        }\r\n        for (let index = this.currentCount; index < response.data.length; index++) {\r\n            if (this.layoutContent.children.length > this.maxCount) break;\r\n            this.mapDate.set(response.data[index].issueID, this.ClientData(response.data[index]))\r\n        }\r\n        this.currentCount = response.data.length;\r\n    }\r\n    ClientData(data: ResponseGPG.DrawHistory.History) {\r\n        let _node = instantiate(this.item)\r\n        let _class = _node.getComponent(PointItemData)\r\n\r\n        _node.setPosition(Vec3.ZERO)\r\n        this.layoutContent.addChild(_node)\r\n        _class\r\n            .setLabelContent(this.labelContent)\r\n            .setOutlineContent(this.OutlineContent)\r\n            .setDayData(data.openDate, data.issueID)\r\n            .setOpenNumber(data.drawCode)\r\n            .init()\r\n        return _class\r\n    }\r\n    //#endregion\r\n\r\n    //#region Betlog\r\n    async requesBetlog(count: number) {\r\n        return new Promise<void>(async (resolve, reject) => {\r\n            const body = new RequestGPG.Body.NeedToken.Betlog()\r\n            const getDate = PublicModel.getInstance.convertDateDiff(PublicData.getInstance.today, -(count))\r\n            body.sDate = `${getDate.getFullYear()}-${getDate.getMonth() + 1}-${getDate.getDate()}`\r\n            body.eDate = PublicData.getInstance.today.split(\"T\")[0]\r\n            body.sign = PublicModel.getInstance.convertSign(body, RequestGPG.Body.NeedToken.Betlog)\r\n            let convert = new URLSearchParams(body).toString()\r\n            await new RequestGPG.Request()\r\n                .setToken(Player.getInstance.gpgToken)\r\n                .fetchData(`${PublicData.getInstance.gpgUrlPlayApi}${RequestGPG.API.Betlog}?${convert}`, this.responseBetlog.bind(this))\r\n            resolve()\r\n        })\r\n    }\r\n    responseBetlog(response?: ResponseGPG.Betlog.DataClass) {\r\n        console.log(\"玩家紀錄\", response);\r\n        for (let index = 0; index < response.data.length; index++) {\r\n            if (!this.mapDate.has(response.data[index].issueID)) continue;\r\n            this.mapDate.get(response.data[index].issueID).setSelfNumber(response.data[index].betCode)\r\n            this.mapDate.get(response.data[index].issueID).setScore(response.data[index].score)\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n    async onViewBottom(_scrollview?: ScrollView) {\r\n        if (this.currentCount >= this.maxCount) this.returnFunction()\r\n        if (this.isDateMax) this.returnFunction()\r\n        if (this.isAsync) this.returnFunction()\r\n        this.isAsync = true;\r\n        /**新增請求筆數 */\r\n        let tryGet = this.currentCount + this.pageCount\r\n        await this.requestHistory(tryGet)\r\n        await this.requesBetlog(tryGet)\r\n\r\n        // console.error(\"超過會走這?\", this.currentCount);\r\n        PanelLoading.instance.closeLoading()\r\n        this.isAsync = false;\r\n    }\r\n\r\n    returnFunction() {\r\n        PanelLoading.instance.closeLoading()\r\n        return;\r\n    }\r\n}"]}
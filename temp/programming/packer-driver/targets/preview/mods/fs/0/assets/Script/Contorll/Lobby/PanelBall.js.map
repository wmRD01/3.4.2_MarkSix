{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/Lobby/PanelBall.ts"],"names":["instantiate","Label","Node","Prefab","_decorator","AssetType","AssetMng","ButtonMng","BallData","BaseComponent","ccclass","property","PanelBall","Map","onLoad","startLoad","waitStateCheck","Sprite","labelContent","removeAllChildren","spriteLayout","templabel","string","MaxCount","V","Valign","layout","layoutItem","addChild","H","Halign","count","temp","ballItem","_class","addComponent","mapBallNumber","set","init","cancel","addEvent","button","toString","label","node","onChooeseBall","e","customEventData","isConfirm","convert","Number","tempChoose","indexOf","isChoose","length","push","get","choose","onResetChooese","index","onConfirmAttack","shift","onRandemChooese"],"mappings":"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","sourcesContent":["import { Button, color, EventTouch, instantiate, Label, Node, Prefab, Sprite, Vec3, _decorator } from 'cc';\r\nimport { AssetType } from '../../Enum/AssetType';\r\nimport AssetMng from '../../Manager/AssetMng';\r\nimport ButtonMng from '../../Manager/ButtonMng';\r\nimport BallData from '../../Model/BallData';\r\nimport BaseComponent from '../../Model/ComponentBase';\r\nimport LabelAutoFollow from '../../Model/LabelAutoFollow';\r\n\r\nimport PublicModel from '../../Model/PublicModel';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('PanelBall')\r\nexport default class PanelBall extends BaseComponent {\r\n    @property(Node)\r\n    spriteLayout: Node;\r\n    @property(Node)\r\n    labelContent: Node;\r\n    @property(Prefab)\r\n    layoutItem: Prefab;\r\n    @property(Prefab)\r\n    ballItem: Prefab;\r\n    Halign: number = 7;\r\n    Valign: number = 7;\r\n    totalCount: number = 49\r\n    mapBallNumber: Map<number, BallData> = new Map()\r\n\r\n    isChoose: number[] = []\r\n    tempChoose: number[] = []\r\n    MaxCount: number = 6\r\n    isConfirm: boolean;\r\n\r\n    @property(Label)\r\n    templabel: Label\r\n    async onLoad() {\r\n        AssetMng.startLoad()\r\n        await AssetMng.waitStateCheck(AssetType.Sprite)\r\n        this.labelContent.removeAllChildren()\r\n        this.spriteLayout.removeAllChildren()\r\n        this.templabel.string = `已選擇 0 / ${this.MaxCount} 個數字`\r\n        for (let V = 0; V < this.Valign; V++) {\r\n            let layout = instantiate(this.layoutItem)\r\n            this.spriteLayout.addChild(layout)\r\n            for (let H = 1; H <= this.Halign; H++) {\r\n                let count = (V * this.Halign) + H\r\n                let temp = instantiate(this.ballItem)\r\n                let _class = temp.addComponent(BallData)\r\n                this.mapBallNumber.set(count, _class)\r\n                layout.addChild(temp)\r\n                _class.init(count).cancel()\r\n                ButtonMng.addEvent(this, \"onChooeseBall\", _class.button, count.toString())\r\n                this.labelContent.addChild(_class.label.node)\r\n            }\r\n        }\r\n    }\r\n    onChooeseBall(e: EventTouch, customEventData?: string) {\r\n        if (this.isConfirm) return\r\n        let convert = Number(customEventData)\r\n        if ((this.tempChoose.indexOf(convert) > -1 || this.isChoose.indexOf(convert) > -1) || this.tempChoose.length + this.isChoose.length >= this.MaxCount) return\r\n        this.tempChoose.push(convert)\r\n        this.mapBallNumber.get(convert).choose()\r\n        this.templabel.string = `已選擇 ${this.tempChoose.length} / ${this.MaxCount} 個數字`\r\n    }\r\n    onResetChooese(e: EventTouch, customEventData?: string) {\r\n        if (this.isConfirm) return\r\n        for (let index = 0; index < this.tempChoose.length; index++) {\r\n            this.mapBallNumber.get(this.tempChoose[index]).cancel()\r\n        }\r\n        this.tempChoose = []\r\n        this.templabel.string = `已選擇 0 / ${this.MaxCount} 個數字`\r\n    }\r\n    onConfirmAttack(e: EventTouch, customEventData?: string) {\r\n        if (this.isConfirm) return\r\n        if (this.tempChoose.length < this.MaxCount) {\r\n            return\r\n        }\r\n        for (let index = 0; index < this.tempChoose.length; index++) {\r\n            this.isChoose.push(this.tempChoose.shift())\r\n        }\r\n        this.tempChoose = []\r\n\r\n        this.isConfirm = true\r\n        /**推波訊息 */\r\n    }\r\n    onRandemChooese(e: EventTouch, customEventData?: string){\r\n        \r\n    }\r\n}\r\n"]}
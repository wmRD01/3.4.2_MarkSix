{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Contorll/NoClearNode/PanelLoading.ts"],"names":["find","Label","Tween","tween","_decorator","BaseSingletonComponent","ccclass","property","PanelLoading","onLoad","contentText","node","labelText","getComponent","labelDot","hide","openLoading","title","show","stopAllByTarget","string","dotAction","isloading","isLeftDicection","isLeftDicection_r","isLeftDicection_g","isLeftDicection_b","closeLoading","console","log","repeatForever","delay","call","length","start"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;AAAiBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,U,OAAAA,U;;AACvCC,MAAAA,sB;;;;;;;OACD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;yBAGTI,Y,WADpBF,OAAO,CAAC,cAAD,C,yBAAR,MACqBE,YADrB,SAC0C;AAAA;AAAA,6DAD1C,CACiF;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAS7EC,QAAAA,MAAM,GAAG;AACL,gBAAMA,MAAN;AACA,eAAKC,WAAL,GAAmBV,IAAI,CAAC,aAAD,EAAgB,KAAKW,IAArB,CAAvB;AACA,eAAKC,SAAL,GAAiBZ,IAAI,CAAC,WAAD,EAAc,KAAKU,WAAnB,CAAJ,CAAoCG,YAApC,CAAiDZ,KAAjD,CAAjB;AACA,eAAKa,QAAL,GAAgBd,IAAI,CAAC,UAAD,EAAa,KAAKU,WAAlB,CAAJ,CAAmCG,YAAnC,CAAgDZ,KAAhD,CAAhB;AACA,eAAKc,IAAL;AACH;;AACDC,QAAAA,WAAW,CAACC,KAAD,EAAiB;AACxB,eAAKC,IAAL,GADwB,CAExB;AACA;;AACAhB,UAAAA,KAAK,CAACiB,eAAN,CAAsB,KAAKL,QAA3B,EAJwB,CAKxB;;AACA,cAAIG,KAAJ,EACI,KAAKL,SAAL,CAAeQ,MAAf,GAAwBH,KAAxB,CADJ,KAGI,KAAKL,SAAL,CAAeQ,MAAf,GAAwB,SAAxB;AACJ,eAAKC,SAAL;AACA,eAAKC,SAAL,GAAiB,IAAjB;AACA,eAAKC,eAAL,GAAuB,KAAvB;AACA,eAAKC,iBAAL,GAAyB,KAAzB;AACA,eAAKC,iBAAL,GAAyB,KAAzB;AACA,eAAKC,iBAAL,GAAyB,KAAzB;AAEH;;AACDC,QAAAA,YAAY,GAAG;AACXC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEA,eAAKd,IAAL;AACH;;AACDM,QAAAA,SAAS,GAAG;AACRlB,UAAAA,KAAK,CAAC,KAAKW,QAAN,CAAL,CACKgB,aADL,CACmB3B,KAAK,GACf4B,KADU,CACJ,CADI,EAEVC,IAFU,CAEL,MAAM;AACR,gBAAI,KAAKlB,QAAL,CAAcM,MAAd,CAAqBa,MAArB,GAA8B,CAAlC,EAAqC,KAAKnB,QAAL,CAAcM,MAAd,GAAuB,EAAvB,CAArC,KACK,KAAKN,QAAL,CAAcM,MAAd,GAAuB,KAAKN,QAAL,CAAcM,MAAd,GAAuB,GAA9C;AACR,WALU,CADnB,EAOKc,KAPL;AAQH,SAhD4E,CAiD7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAhI6E,O","sourcesContent":["import { find, Label, Node, sp, Tween, tween, _decorator } from 'cc';\r\nimport BaseSingletonComponent from '../../../Patten/Singleton/BaseSingletonComponent';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PanelLoading')\r\nexport default class PanelLoading extends BaseSingletonComponent<PanelLoading>() {\r\n    contentText: Node;\r\n    labelText: Label;\r\n    labelDot: Label;\r\n    spineET: sp.Skeleton; isloading: boolean;\r\n    isLeftDicection: boolean;\r\n    isLeftDicection_r: boolean;\r\n    isLeftDicection_g: boolean;\r\n    isLeftDicection_b: boolean;\r\n    onLoad() {\r\n        super.onLoad()\r\n        this.contentText = find(\"ContentText\", this.node)\r\n        this.labelText = find(\"LabelText\", this.contentText).getComponent(Label)\r\n        this.labelDot = find(\"LabelDot\", this.contentText).getComponent(Label)\r\n        this.hide()\r\n    }\r\n    openLoading(title?: string) {\r\n        this.show()\r\n        // this.label_Dot.string = \"\"\r\n        // this.spineET.color = Color.WHITE;\r\n        Tween.stopAllByTarget(this.labelDot)\r\n        // Tween.stopAllByTarget(this.spineET)\r\n        if (title)\r\n            this.labelText.string = title\r\n        else\r\n            this.labelText.string = \"Loading\"\r\n        this.dotAction();\r\n        this.isloading = true\r\n        this.isLeftDicection = false\r\n        this.isLeftDicection_r = false\r\n        this.isLeftDicection_g = false;\r\n        this.isLeftDicection_b = false\r\n\r\n    }\r\n    closeLoading() {\r\n        console.log(\"?????\");\r\n\r\n        this.hide()\r\n    }\r\n    dotAction() {\r\n        tween(this.labelDot)\r\n            .repeatForever(tween()\r\n                .delay(1)\r\n                .call(() => {\r\n                    if (this.labelDot.string.length > 5) this.labelDot.string = \"\"\r\n                    else this.labelDot.string = this.labelDot.string + \".\"\r\n                }))\r\n            .start()\r\n    }\r\n    // colorAction() {\r\n    //     let getTarget = this.randonRGB()\r\n    //     tween(this.spine_ET)\r\n    //         .by(1, { color: getTarget })\r\n    //         // .call(this.colorAction.bind(this))\r\n    //         .start()\r\n    // }\r\n    // randonRGB() {\r\n    //     let r = Math.floor(Math.floor(random() * 255))\r\n    //     let g = Math.floor(Math.floor(random() * 255))\r\n    //     let b = Math.floor(Math.floor(random() * 255))\r\n    //     return new Color(r, g, b)\r\n    // }\r\n\r\n    // update(dt) {\r\n    //     // console.log(`R:${this.spine_ET.color.r},G:${this.spine_ET.color.g},B:${this.spine_ET.color.b}`);\r\n    //     if (this.isloading) {\r\n    //         //#region 顏色管理\r\n    //         //控管R\r\n    //         if (this.spine_ET.color.r <= 10 && this.isLeftDicection_r) {\r\n    //             this.isLeftDicection_r = false\r\n    //         }\r\n    //         if (this.spine_ET.color.r >= 250 && !this.isLeftDicection_r) {\r\n    //             this.isLeftDicection_r = true\r\n    //         }\r\n\r\n    //         if (this.isLeftDicection_r) {\r\n    //             this.changeColor(\"r\", \"<\", dt);\r\n    //         }\r\n    //         else {\r\n    //             this.changeColor(\"r\", \">\", dt);\r\n    //         }\r\n    //         //控管G\r\n    //         if (this.spine_ET.color.g <= 10 && this.isLeftDicection_g) {\r\n    //             this.isLeftDicection_g = false\r\n    //         }\r\n    //         if (this.spine_ET.color.g >= 250 && !this.isLeftDicection_g) {\r\n    //             this.isLeftDicection_g = true\r\n    //         }\r\n    //         if (this.isLeftDicection_g) {\r\n    //             this.changeColor(\"g\", \"<\", dt);\r\n    //         }\r\n    //         else {\r\n    //             this.changeColor(\"g\", \">\", dt);\r\n    //         }\r\n    //         //控管B\r\n    //         if (this.spine_ET.color.b <= 10 && this.isLeftDicection_b) {\r\n    //             this.isLeftDicection_b = false\r\n    //         }\r\n    //         if (this.spine_ET.color.b >= 250 && !this.isLeftDicection_b) {\r\n    //             this.isLeftDicection_b = true\r\n    //         }\r\n    //         if (this.isLeftDicection_b) {\r\n    //             this.changeColor(\"b\", \"<\", dt);\r\n    //         }\r\n    //         else {\r\n    //             this.changeColor(\"b\", \">\", dt);\r\n    //         }\r\n    //         //#endregion\r\n    //     }\r\n    //     // else if ()\r\n    // }\r\n    // changeColor(rgbString: string, direction: string, dt: number) {\r\n    //     let getValue = 0\r\n    //     switch (rgbString) {\r\n    //         case \"r\":\r\n    //             getValue = direction == \">\" ? MyMath.add(this.spine_ET.color.r, dt * 400) : MyMath.minus(this.spine_ET.color.r, dt * 400)\r\n    //             this.spine_ET.color = new Color(getValue, this.spine_ET.color.g, this.spine_ET.color.b)\r\n    //             break;\r\n    //         case \"g\":\r\n    //             getValue = direction == \">\" ? MyMath.add(this.spine_ET.color.g, dt * 200) : MyMath.minus(this.spine_ET.color.g, dt * 200)\r\n    //             this.spine_ET.color = new Color(this.spine_ET.color.r, getValue, this.spine_ET.color.b)\r\n    //             break;\r\n    //         case \"b\":\r\n    //             getValue = direction == \">\" ? MyMath.add(this.spine_ET.color.b, dt * 300) : MyMath.minus(this.spine_ET.color.b, dt * 300)\r\n    //             this.spine_ET.color = new Color(this.spine_ET.color.r, this.spine_ET.color.g, getValue)\r\n    //             break;\r\n    //     }\r\n\r\n    // }\r\n}"]}
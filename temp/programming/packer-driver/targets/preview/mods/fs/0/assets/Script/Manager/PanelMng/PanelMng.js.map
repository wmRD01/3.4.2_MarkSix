{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Manager/PanelMng/PanelMng.ts"],"names":["PanelData","assetManager","find","instantiate","Prefab","_decorator","ccclass","property","PanelMng","Map","initPanel","_node","bundleName","parent","Promise","resolve","reject","loadBundle","err","bundle","loadDir","data","forEach","_prefab","_panel","addChild","release","setPanel","str","_class","getComponent","mapPanel","set","tempBase","push","getPanel","get","initSetting","len","length","i","j","zIndex","temp","index","setZIndex"],"mappings":"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","sourcesContent":["import { assetManager, find, instantiate, Node, Prefab, _decorator } from 'cc';\r\nimport BaseComponent from '../../Model/ComponentBase';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('PanelMng')\r\nexport class PanelMng {\r\n    mapPanel: Map<string, BaseComponent> = new Map();\r\n    tempBase: BaseComponent[] = []\r\n    parent: Node;\r\n\r\n    async initPanel(_node: Node, bundleName: string) {\r\n        if (this.parent != _node) this.parent = _node\r\n        return new Promise<void>((resolve, reject) => {\r\n            // console.error(bundleName);\r\n\r\n            assetManager.loadBundle(bundleName, (err, bundle) => {\r\n                bundle.loadDir(\"\", Prefab, (err, data: Array<Prefab>) => {\r\n                    // console.log(data);\r\n                    data.forEach(_prefab => {\r\n                        let _panel = instantiate(_prefab)\r\n                        this.parent.addChild(_panel)\r\n                    });\r\n                    bundle.release(\"\")\r\n                    resolve()\r\n                })\r\n            });\r\n\r\n        })\r\n    }\r\n    setPanel(str: string) {\r\n        let _class = find(str, this.parent).getComponent(str) as BaseComponent\r\n        this.mapPanel.set(str, _class)\r\n        this.tempBase.push(_class)\r\n        return this\r\n    }\r\n    getPanel(str: string) {\r\n        return this.mapPanel.get(str)\r\n    }\r\n\r\n    initSetting() {\r\n        let len = this.tempBase.length;\r\n        //排序\r\n        for (let i = 0; i < len; i++) {\r\n            for (let j = 0; j < len - i - 1; j++) {\r\n                // 如果當前元素大於下一個元素，則交換它們\r\n                if (this.tempBase[j].zIndex > this.tempBase[j + 1].zIndex) {\r\n                    let temp = this.tempBase[j];\r\n                    this.tempBase[j] = this.tempBase[j + 1];\r\n                    this.tempBase[j + 1] = temp;\r\n                }\r\n            }\r\n        }\r\n        for (let index = 0; index < this.tempBase.length; index++) {\r\n            this.tempBase[index].setZIndex()\r\n        }\r\n        return this\r\n    }\r\n}\r\n\r\nclass PanelData {\r\n    comp: BaseComponent;\r\n    compName: string;\r\n}"]}
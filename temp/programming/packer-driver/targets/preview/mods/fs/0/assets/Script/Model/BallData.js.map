{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Model/BallData.ts"],"names":["Button","color","Label","Node","Sprite","Tween","tween","Vec3","_decorator","AssetType","AssetMng","BaseComponent","LabelAutoFollow","PublicModel","ccclass","property","BallData","init","_ballNumber","console","log","ballNumber","node","position","ZERO","type","label","addComponent","setTarget","string","toString","fromHEX","getColor","spriteBG","spriteFrame","AssetClass","get","data","getBGData","setEffect","choose","setScale","getInstance","oneSclaeVec3","repeatForever","set","angle","to","start","cancel","eulerAngles","stopAllByTarget","bool","nodeEffect","active","ColorType","綠","紅","藍","SpirteData"],"mappings":"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","sourcesContent":["import { Button, Color, color, Label, Node, Sprite, Tween, tween, Vec3, _decorator } from 'cc';\r\nimport { AssetType } from '../Enum/AssetType';\r\nimport AssetMng from '../Manager/AssetMng';\r\nimport BaseComponent from './ComponentBase';\r\nimport LabelAutoFollow from './LabelAutoFollow';\r\nimport PublicModel from './PublicModel';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('BallData')\r\nexport default class BallData extends BaseComponent {\r\n    /**comp */\r\n    @property(Label)\r\n    label: Label;\r\n    @property(Button)\r\n    button: Button;\r\n    @property(Sprite)\r\n    spriteBG: Sprite;\r\n    /**data */\r\n    @property(Node)\r\n    nodeEffect: Node;\r\n    ballNumber: number = 0;\r\n    type: number = 0;\r\n    init(_ballNumber: number) {\r\n        console.log(_ballNumber);\r\n\r\n        this.ballNumber = _ballNumber\r\n        this.node.position = Vec3.ZERO\r\n        this.type = _ballNumber % 6\r\n        this.label.addComponent(LabelAutoFollow).setTarget(this.node)\r\n        this.label.string = this.ballNumber.toString()\r\n        this.label.color = color().fromHEX(this.getColor())\r\n        this.spriteBG.spriteFrame = AssetMng.AssetClass.get(AssetType.Sprite).data.get(this.getBGData())\r\n        this.setEffect(false)\r\n        return this\r\n    }\r\n    // reset() {\r\n\r\n    // }\r\n    choose() {\r\n        // this.spriteBG.spriteFrame = AssetMng.AssetClass.get(AssetType.Sprite).data.get(this.getBGData())\r\n        // this.spriteBG.color = Color.WHITE\r\n        this.node.setScale(PublicModel.getInstance.oneSclaeVec3(1.2))\r\n        // let rotai = tween()\r\n        //     .set({ angle: 0 })\r\n        //     .to(5, { angle: -360 })\r\n        tween(this.node)\r\n            .repeatForever(tween()\r\n                .set({ angle: 0 })\r\n                .to(5, { angle: -360 }))\r\n            .start()\r\n    }\r\n    cancel() {\r\n        // this.spriteBG.spriteFrame = AssetMng.AssetClass.get(AssetType.Sprite).data.get(SpirteData.空白)\r\n        // this.spriteBG.color = color().fromHEX(this.getColor())\r\n        this.node.setScale(PublicModel.getInstance.oneSclaeVec3(1))\r\n        this.node.eulerAngles = Vec3.ZERO\r\n        Tween.stopAllByTarget(this.node)\r\n    }\r\n    setEffect(bool: boolean) {\r\n        this.nodeEffect.active = bool\r\n    }\r\n    private getColor() {\r\n        switch (this.type) {\r\n            case 0:\r\n            case 5:\r\n                return ColorType.綠\r\n            case 1:\r\n            case 2:\r\n                return ColorType.紅\r\n            case 3:\r\n            case 4:\r\n                return ColorType.藍\r\n        }\r\n    }\r\n    private getBGData() {\r\n        switch (this.type) {\r\n            case 0:\r\n            case 5:\r\n                return SpirteData.綠\r\n            case 1:\r\n            case 2:\r\n                return SpirteData.紅\r\n            case 3:\r\n            case 4:\r\n                return SpirteData.藍\r\n        }\r\n    }\r\n}\r\nenum ColorType {\r\n    紅 = \"#FF3D3D\",\r\n    藍 = \"#334BD3\",\r\n    綠 = \"#61BFAD\",\r\n    灰 = \"#969696\",\r\n}\r\nenum SpirteData {\r\n    紅 = \"Challenge_RedBall\",\r\n    藍 = \"Challenge_BlueBall\",\r\n    綠 = \"Challenge_GreenBall\",\r\n    空白 = \"Challenge_Frame\"\r\n}"]}
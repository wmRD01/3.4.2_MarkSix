{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/Model/PublicModel.ts"],"names":["PublicModel","director","dynamicAtlasManager","UITransform","Vec2","Vec3","BaseSingleton","MyMath","CryptoES","PublicData","to2DConvertOtherNodeSpaceAR","targetNode","moveToNode","worldPoint","parent","getComponent","convertToWorldSpaceAR","position","convertToNodeSpaceAR","convertVec2ToVec3","vec2","x","y","convertVec3ToVec2","vec3","oneSclaeVec3","num","changParent","undefined","getScene","getChildByName","addChild","orgPos","formatSecond","secs","isHR","hours","Math","floor","minutes","seconds","hrStr","toString","padStart","minStr","secStr","convertMilliToSecond","divide","checkNicknameCondition","str","rex","test","checkNameLen","name","len","word","split","filter","notWord","countLen","length","reName","count_name","index","count","cut_name","TwoClassCheckData","_self","_data","key","Object","prototype","hasOwnProperty","call","filterNumberDot","getStrArr","formatStr","_base64ToBytes","base64","binary_string","window","atob","bytes","Uint8Array","i","charCodeAt","convertByteToBinary","n","getBin","pokerNumberChange","baccaratCount","getLast","Number","changeKMB","digits","suffixes","isNaN","String","exp","log","format","pow","decimalIndex","indexOf","slice","endsWith","getEnumValueFromString","enumObject","enumValues","keys","k","value","toLowerCase","getEnumValue","openShader","enabled","convertSign","body","_class","isDelete","sign","getInstance","dataWithApiKey","sortObj","gpgApi","console","MD5","convertMD5","obj","apiKey","keyA","sort","querystring","convertDateDay","dateObj","Date","year","convertToROC","getFullYear","month","getMonth","day","getDate","daysOfWeek","dayOfWeek","getDay","convertDateTime","sec","getSeconds","min","getMinutes","getHours","yearAD","ROC_OFFSET","isLeapYear","yearROC"],"mappings":"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","sourcesContent":["import { director, dynamicAtlasManager, Node, UITransform, Vec2, Vec3, _decorator } from \"cc\";\r\nimport BaseSingleton from \"../../Patten/Singleton/BaseSingleton\";\r\nimport MyMath from \"../../Plug/MyMath\";\r\nimport CryptoES from 'crypto-es';\r\nimport { RequestGPG } from \"../Contorll/Api/GPGAPI/RequestGPG\";\r\nimport PublicData from \"./PublicData\";\r\nexport default class PublicModel extends BaseSingleton<PublicModel>() {\r\n    /**\r\n     * @param targetNode 需要移動的物件\r\n     * @param moveToNode 移動的目的地\r\n     * @returns \r\n     */\r\n    to2DConvertOtherNodeSpaceAR(targetNode: Node, moveToNode: Node) {\r\n        // console.log(pos);\r\n        //轉成世界座標\r\n        let worldPoint = moveToNode.parent.getComponent(UITransform).convertToWorldSpaceAR(moveToNode.position);\r\n        // console.log(worldPoint);\r\n        return targetNode.parent.getComponent(UITransform).convertToNodeSpaceAR(worldPoint);\r\n    }\r\n    convertVec2ToVec3(vec2: Vec2) {\r\n        return new Vec3(vec2.x, vec2.y, 0)\r\n    }\r\n    convertVec3ToVec2(vec3: Vec3) {\r\n        return new Vec2(vec3.x, vec3.y)\r\n    }\r\n    oneSclaeVec3(num: number) {\r\n        return new Vec3(num, num, num)\r\n    }\r\n\r\n\r\n    changParent(moveToNode: Node, targetNode: Node, parent: Node) {\r\n        // console.log(node.parent);\r\n        if (moveToNode.parent == null || moveToNode.parent == undefined)\r\n            director.getScene().getChildByName(\"Canvas\").addChild(moveToNode)\r\n        // console.log(node.parent);\r\n\r\n        let orgPos = this.to2DConvertOtherNodeSpaceAR(targetNode, moveToNode)\r\n        parent.addChild(moveToNode)\r\n        moveToNode.position = orgPos\r\n    }\r\n    /**秒數時間轉換 */\r\n    formatSecond(secs: number, isHR?: boolean) {\r\n        // if (isMilli) secs = this.convertMilliToSecond(secs);\r\n        // let min = Math.floor(secs / 60).toString()\r\n        // let sec = Math.floor((secs - (Number(min) * 60))).toString()\r\n        // while (min.length < 2) min = \"0\" + min\r\n        // while (sec.length < 2) sec = \"0\" + sec\r\n        // return min + \":\" + sec\r\n        const hours = isHR ? Math.floor(secs / 3600) : 0;\r\n        const minutes = Math.floor((secs - hours * 3600) / 60);\r\n        const seconds = Math.floor(secs - hours * 3600 - minutes * 60);\r\n\r\n        const hrStr = isHR ? hours.toString().padStart(2, '0') + ':' : '';\r\n        const minStr = minutes.toString().padStart(2, '0');\r\n        const secStr = seconds.toString().padStart(2, '0');\r\n\r\n        return hrStr + minStr + ':' + secStr;\r\n    }\r\n    convertMilliToSecond(num: number) {\r\n        return MyMath.divide(num, 1000)\r\n    }\r\n    /*\r\n    *確認匿名條件式是否在數字、分數、箭頭、數學運算符號、技術符號以及字母符號的 Unicode 字元\r\n    */\r\n    checkNicknameCondition(str: string) {\r\n        let rex = /[\\p{P}+\\u2100-\\u214F]/u\r\n        return rex.test(str)\r\n    }\r\n    /**確認名稱長度 */\r\n    checkNameLen(name: string, len: number) {\r\n        let word = name.split(/\\w*/).filter(x => x != \"\")\r\n        let notWord = name.split(/\\W*/).filter(x => x != \"\")\r\n        let countLen = word.length + (Math.floor(notWord.length / 2))//英文數字兩個字元=1個中文字長度\r\n        if (countLen > len)\r\n            name = this.reName(name, len);\r\n        return name\r\n    }\r\n    /** 將8位數之後的文字\"...\"化 */\r\n    private reName(name: string, len: number) {\r\n        let count_name = ''\r\n        let index = 0\r\n        let count = 0\r\n        let cut_name = name.split('');\r\n        while (count < len) {\r\n            count_name = count_name + cut_name[index]\r\n            if (/\\w/.test(cut_name[index])) //如果遇到英文 只+0.5\r\n                count += 0.5\r\n            else\r\n                count++\r\n            index++\r\n        }\r\n        name = count_name + \"...\"\r\n        return name\r\n    }\r\n    /**封包整合，自身封包如果與傳遞的封包有相同Key值，自身封包會更新制最新Value \r\n     * @param _self 需整合封包\r\n     * @param _data 傳遞封包\r\n     */\r\n    TwoClassCheckData(_self: Object, _data: Object) {\r\n        // console.log(_self);\r\n        // console.log(_data);\r\n\r\n        for (const key in _data) {\r\n            if (Object.prototype.hasOwnProperty.call(_self, key)) {\r\n                _self[key] = _data[key];\r\n            }\r\n        }\r\n    }\r\n    /**將,文字刪除 */\r\n    filterNumberDot(num: number | string) {\r\n        let getStrArr = num.toString().split(\"\").filter(x => x != \",\");\r\n        let formatStr = \"\"\r\n        for (let index = 0; index < getStrArr.length; index++) {\r\n            if (/^[0-9]*$/.test(getStrArr[index]))\r\n                formatStr += getStrArr[index]\r\n        }\r\n        return formatStr\r\n    }\r\n    /**將Server傳遞封包轉換成Byte */\r\n    _base64ToBytes(base64: string) {\r\n        var binary_string = window.atob(base64);\r\n        var len = binary_string.length;\r\n        var bytes = new Uint8Array(len);\r\n        for (var i = 0; i < len; i++) {\r\n            bytes[i] = binary_string.charCodeAt(i);\r\n        }\r\n\r\n        return bytes;\r\n    }\r\n    /**將Byte轉換成Binary */\r\n    convertByteToBinary(n: number) {\r\n        let getBin = n.toString(2)\r\n        // do getBin = \"0\" + getBin\r\n        // while (getBin.length < 8)\r\n        return getBin\r\n    }\r\n    /**從52號碼變換成撲克13 */\r\n    pokerNumberChange(num: number) {\r\n        return num = num % 13 == 0 ? 13 : num % 13\r\n\r\n    }\r\n    /**百家規則9之後就是0，因此不會計算*/\r\n    baccaratCount(count: number, num: number) {\r\n        num > 9 ? count += 0 : count += num\r\n        let getLast: string | string[] = count.toString().split(\"\")\r\n        getLast = getLast[getLast.length - 1]\r\n\r\n        return Number(getLast)\r\n    }\r\n    /**\r\n     * \r\n     * @param num 數字\r\n     * @param digits 小數點位數 預設0\r\n     * @returns string\r\n     */\r\n    changeKMB(num: number, digits: number = 0): string {\r\n        const suffixes = ['K', 'M', 'B', 'T', 'P', 'E'];\r\n        if (!num || Number.isNaN(num))\r\n            return String(0);\r\n        if (num < 10000)\r\n            return num.toString();\r\n        const exp = Math.floor(Math.log(num) / Math.log(1000));\r\n        let format = (num / Math.pow(1000, exp)).toString();\r\n        const decimalIndex = format.indexOf('.');\r\n        if (decimalIndex !== -1 && decimalIndex + digits + 1 < format.length)\r\n            format = format.slice(0, decimalIndex + digits + 1);\r\n        if (format.endsWith('.')) {\r\n            format = format.slice(0, -1);\r\n        }\r\n        // console.warn(format + suffixes[exp - 1]);\r\n        return format + suffixes[exp - 1]\r\n    }\r\n    /**只能回傳num */\r\n    getEnumValueFromString<T>(str: string, enumObject: T): T[keyof T] | undefined {\r\n        const enumValues = Object.keys(enumObject).filter(k => typeof enumObject[k as keyof T] === 'number');\r\n        for (const value of enumValues) {\r\n            if (value.toLowerCase() === str.toLowerCase()) {\r\n                return enumObject[value as keyof T];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    /*可回傳num與str(須測試) */\r\n    getEnumValue<T>(str: string, enumObject: T): T[keyof T] | undefined {\r\n        const enumValues = Object.keys(enumObject);\r\n        for (const value of enumValues) {\r\n            if (value.toLowerCase() === str.toLowerCase()) {\r\n                return enumObject[value as keyof T];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    openShader() {\r\n        dynamicAtlasManager.enabled = false//打開Shader合批(????)\r\n    }\r\n    convertSign<T extends RequestGPG.Body.NeedToken.base>(body: Object, _class: { new(): T }, isDelete: boolean = true) {\r\n        let sign = new _class();\r\n        PublicModel.getInstance.TwoClassCheckData(sign, body)\r\n        if (isDelete)\r\n            delete sign.sign\r\n        const dataWithApiKey = this.sortObj(sign, PublicData.getInstance.gpgApi);\r\n        console.log(dataWithApiKey);\r\n        return CryptoES.MD5(dataWithApiKey).toString()\r\n        // console.log(body);\r\n    }\r\n    convertMD5(str: string) {\r\n        return CryptoES.MD5(str).toString()\r\n    }\r\n    /**排序物件順序並且queryString */\r\n    private sortObj<T>(obj: T, apiKey: string) {\r\n        var keyA = Object.keys(obj).sort();\r\n        var querystring = \"\"\r\n        for (let index = 0; index < keyA.length; index++) {\r\n            querystring += `${keyA[index]}=${obj[keyA[index]]}`\r\n            if (index != keyA.length - 1) {\r\n                querystring += \"&\"\r\n            }\r\n        }\r\n        // for (var i in keyA) {\r\n        //encodeURIComponent是ASCII轉換\\，但是@也會被轉換所以不使用此方式\r\n        //     // sortObj[keyA[i]] = encodeURIComponent(obj[keyA[i]])\r\n\r\n        // }\r\n        querystring += apiKey\r\n        return querystring\r\n    }\r\n    convertDateDay(str: string) {\r\n        // 將字串轉換為Date物件\r\n        const dateObj = new Date(str);\r\n\r\n        // 取得日期資訊\r\n        const year = this.convertToROC(dateObj.getFullYear());\r\n        const month = dateObj.getMonth() + 1; // 月份是從0開始的，所以要加1\r\n        const day = dateObj.getDate();\r\n        const daysOfWeek = ['日', '一', '二', '三', '四', '五', '六'];\r\n        const dayOfWeek = daysOfWeek[dateObj.getDay()];\r\n        // 格式化日期\r\n        return `${year}/${month}/${day} (${dayOfWeek})`;\r\n\r\n    }\r\n    convertDateTime(str: string) {\r\n        // 將字串轉換為Date物件\r\n        const dateObj = new Date(str);\r\n        const sec = dateObj.getSeconds()\r\n        const min = dateObj.getMinutes()\r\n        const hours = dateObj.getHours()\r\n\r\n        // 格式化日期\r\n        return `${hours}:${min}:${sec}`;\r\n\r\n    }\r\n    convertToROC(yearAD) {\r\n        const ROC_OFFSET = 1911;\r\n        const isLeapYear = (year) => (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\r\n        const yearROC = yearAD - ROC_OFFSET + (isLeapYear(yearAD) ? 1 : 0);\r\n        return yearROC;\r\n    }\r\n}\r\n\r\n"]}
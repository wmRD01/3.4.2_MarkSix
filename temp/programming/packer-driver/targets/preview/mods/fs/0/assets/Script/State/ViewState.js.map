{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/assets/Script/State/ViewState.ts"],"names":["GetGameRoomData","PlayerInRoom","PlayerExitRoom","RefreshPlayerBetList","RefreshBankerBetList","LobbyCloseView","LobbyOpenView","GameCloseView","GameOpenView","RP","PublicData","State","DelayTime","CommandType","EventMng","MusicMng","WebSocketEvent","PanelLoading","PublicModel","GameEvent","RoomData","GameStateEvent","ServerGameSenceType","MyMath","GameSenceText","SocketSetting","LangType","CheckLoading","CheckLoadingType","EvnetType","changeState","data","getInstance","TwoClassCheckData","getbuffer","_base64ToBytes","records","index","length","console","log","isResetView","senceProcessing","mapEvnet","get","Pulic","emit","ReProcessing","changeData","nowStage","UpdataSence","change","gs1","ggs","time","roomTime","status","roomStatus","ControllSandCommend","gs8","gs9","gs10","gs11","betTime","divide","remainTime","gs13","gs14","gs15","gs16","gs17","gs18","gs19","gs20","gs21","gs22","gs23","warn","StopGameHeartrate","checkState","isWebSocketOpen","isGameSence","ResetView","effectStopAll","instance","openLoading","t","Game","isResetProcessing","StopAllDT","WebSocketSendCommand","gori"],"mappings":"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","sourcesContent":["import * as RP from \"../Contorll/Api/ResponeCommand\";\r\nimport PublicData from \"../Model/PublicData\";\r\nimport { State } from \"../../Patten/StatePatten\";\r\nimport DelayTime from \"../../Plug/DelayTime\";\r\nimport { CommandType } from \"../Enum/CommandType\";\r\nimport EventMng from \"../Manager/EventMng\";\r\nimport MusicMng from \"../Manager/MusicMng\";\r\nimport { WebSocketEvent } from \"../Enum/WebSocketEvent\";\r\nimport PanelLoading from \"../Contorll/NoClearNode/PanelLoading\";\r\nimport PublicModel from \"../Model/PublicModel\";\r\nimport { GameEvent } from \"../Enum/GameEvent\";\r\nimport RoomData from \"../Model/RoomData\";\r\nimport { GameStateEvent } from \"../Enum/GameStateEvent\";\r\nimport { ServerGameSenceType } from \"../Enum/ServerGameSenceType\";\r\nimport MyMath from \"../../Plug/MyMath\";\r\nimport { MainGame } from \"../View/MainGame\";\r\nimport GameSenceText from \"../Model/GameSenceText\";\r\nimport SocketSetting from \"../Socket/SocketSetting\";\r\nimport { LangType } from \"../Enum/LangType\";\r\nimport CheckLoading from \"../Model/CheckLoading\";\r\nimport { CheckLoadingType } from \"../Enum/CheckLoadingType\";\r\nimport Player from \"../Model/Player\";\r\nimport { EvnetType } from \"../Enum/EvnetType\";\r\n\r\n/**更新房間狀態 */\r\nexport class GetGameRoomData extends State {\r\n    public changeState(data: RP.gori): void {\r\n        PublicModel.getInstance.TwoClassCheckData(RoomData.getInstance, data)\r\n        let getbuffer = PublicModel.getInstance._base64ToBytes(data.records)\r\n        // // console.log(getbuffer);ㄐ\r\n\r\n        // let getbuffer = PublicModel.getInstance._base64ToBytes(\"AQMB\")\r\n        // let getbuffer = PublicModel.getInstance._base64ToBytes(\"AgECAwIDAgEBAgMDAQYDAwIBAwcBBQIJAgIBAgECAQEGAgECAgUBAQYCAQYBAgEBAgECAgEBAQECAQIC\")\r\n\r\n        // let map = new Map<number, GameRoundResult>()\r\n        // for (let index = 0; index < getbuffer.length; index++) {\r\n        //     /**先將Byte轉乘Binary，再判斷結果，最後把結果存起來 */\r\n        //     map.set(index, new GameRoundResult(PublicModel.getInstance.convertByteToBinary(getbuffer[index])))\r\n        // }\r\n        // console.log(map);\r\n        // console.log(byts);\r\n        RoomData.getInstance.records = []\r\n        for (let index = 0; index < getbuffer.length; index++) {\r\n        }\r\n\r\n        console.log(\"開始處理Sence\");\r\n        PublicData.getInstance.isResetView = false\r\n        this.senceProcessing(data)\r\n        EventMng.getInstance.mapEvnet.get(EvnetType.Pulic).emit(GameStateEvent.ReProcessing, data)\r\n        console.log(\"結束處理Sence\");\r\n        /**畫面更新完成，關閉重製畫面判斷 */\r\n\r\n    }\r\n\r\n    senceProcessing(data: RP.gori) {\r\n        /**避免推波事件時造成程序卡住，不可為Null與undifind */\r\n        let changeData: any = {};\r\n        console.log(`當前狀態：${data.nowStage}`);\r\n        EventMng.getInstance.mapEvnet.get(EvnetType.Pulic).emit(GameStateEvent.UpdataSence, new GameSenceText().change(data.nowStage))\r\n        switch (data.nowStage) {\r\n            case ServerGameSenceType.gs1:\r\n                changeData = new RP.ggs();\r\n                (changeData as RP.ggs).time = data.roomTime;\r\n                (changeData as RP.ggs).status = data.roomStatus\r\n                EventMng.getInstance.mapEvnet.get(EvnetType.Pulic).emit(GameEvent.ControllSandCommend, ServerGameSenceType.ggs, changeData)\r\n                EventMng.getInstance.mapEvnet.get(EvnetType.Pulic).emit(GameEvent.ControllSandCommend, data.nowStage, changeData)\r\n                break;\r\n            case ServerGameSenceType.gs8:\r\n            case ServerGameSenceType.gs9:\r\n            case ServerGameSenceType.gs10:\r\n                break;\r\n            case ServerGameSenceType.gs11:\r\n                changeData = new RP.gs11();\r\n                (changeData as RP.gs11).betTime = MyMath.divide(data.remainTime, 1000);\r\n                EventMng.getInstance.mapEvnet.get(EvnetType.Pulic).emit(GameEvent.ControllSandCommend, data.nowStage, changeData)\r\n                break;\r\n            case ServerGameSenceType.gs13:\r\n            case ServerGameSenceType.gs14:\r\n            case ServerGameSenceType.gs15:\r\n            case ServerGameSenceType.gs16:\r\n            case ServerGameSenceType.gs17:\r\n            case ServerGameSenceType.gs18:\r\n            case ServerGameSenceType.gs19:\r\n            case ServerGameSenceType.gs20:\r\n            case ServerGameSenceType.gs21:\r\n            case ServerGameSenceType.gs22:\r\n            case ServerGameSenceType.gs23:\r\n                // console.error(\"開始還原喔\");\r\n                break;\r\n            default:\r\n                console.log(`當前少處理到?：${data.nowStage}`);\r\n                break\r\n\r\n        }\r\n        console.warn(\"EventSence\", data.nowStage, changeData);\r\n\r\n        console.warn(\"推波結束\");\r\n\r\n    }\r\n\r\n}\r\n/**其他玩家入房 */\r\nexport class PlayerInRoom extends State {\r\n    public changeState(data: RP.grre): void {\r\n    }\r\n\r\n}\r\n/**其他玩家離開房 */\r\nexport class PlayerExitRoom extends State {\r\n    public changeState(data: RP.grrl): void {\r\n    }\r\n\r\n}\r\n/**更新閒家下注排行 */\r\nexport class RefreshPlayerBetList extends State {\r\n    public changeState(data: RP.gbop): void {\r\n    }\r\n\r\n}\r\n/**更新莊家下注排行 */\r\nexport class RefreshBankerBetList extends State {\r\n    public changeState(data: RP.gbob): void {\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class LobbyCloseView extends State {\r\n    public changeState(data: RP.gori): void {\r\n        // DelayTime.getInstance.StopGameHeartrate()\r\n        // if (PublicData.getInstance.isSystemDis || !PublicData.getInstance.isInGameRoom) return;\r\n        // EventMng.getInstance.mapEvnet.get(EvnetType.Pulic).emit(GameEvent.ResetView)\r\n        // MusicMng.effectStopAll();\r\n        // PanelLoading.instance.openLoading()\r\n        // PublicData.getInstance.isResetView = true;\r\n        // // console.log(\"跳窗\");\r\n        // DelayTime.getInstance.StopAllDT()\r\n        // //把所有計時器與畫面全部關掉\r\n    }\r\n\r\n}\r\n\r\nexport class LobbyOpenView extends State {\r\n    public async changeState(data: RP.gori): Promise<void> {\r\n        // if (PublicData.getInstance.isSystemDis || !PublicData.getInstance.isInGameRoom) return;\r\n        // console.log(\"載資料\")\r\n        // EventMng.getInstance.mapEvnet.get(EvnetType.Pulic).emit(WebSocketEvent.WebSocketSendCommand, CommandType.gori)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport class GameCloseView extends State {\r\n    public changeState(data: RP.gori): void {\r\n        DelayTime.getInstance.StopGameHeartrate()\r\n        if (!CheckLoading.getInstance.checkState(CheckLoadingType.isWebSocketOpen) || !CheckLoading.getInstance.checkState(CheckLoadingType.isGameSence)) return;\r\n        EventMng.getInstance.mapEvnet.get(EvnetType.Pulic).emit(GameEvent.ResetView)\r\n        MusicMng.effectStopAll();\r\n        PanelLoading.instance.openLoading(SocketSetting.t(\"E_0004\", LangType.Game))\r\n        PublicData.getInstance.isResetProcessing = true\r\n        PublicData.getInstance.isResetView = true;\r\n        // console.log(\"跳窗\");\r\n        DelayTime.getInstance.StopAllDT()\r\n        //把所有計時器與畫面全部關掉\r\n    }\r\n\r\n}\r\n\r\nexport class GameOpenView extends State {\r\n    public async changeState(data: RP.gori): Promise<void> {\r\n\r\n        if (!CheckLoading.getInstance.checkState(CheckLoadingType.isWebSocketOpen) || !CheckLoading.getInstance.checkState(CheckLoadingType.isGameSence)) return;\r\n        console.log(\"載資料\")\r\n        EventMng.getInstance.mapEvnet.get(EvnetType.Pulic).emit(WebSocketEvent.WebSocketSendCommand, CommandType.gori)\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}
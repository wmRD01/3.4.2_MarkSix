{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/node_modules/crypto-es/lib/mode-ofb.js"],"names":["OFB","BlockCipherMode","Encryptor","processBlock","words","offset","_words","cipher","_cipher","blockSize","iv","_iv","keystream","_keystream","slice","undefined","encryptBlock","i","Decryptor"],"mappings":";;;uBAOaA,G;;;;;;AANXC,MAAAA,e,gBAAAA,e;;;AAGF;AACA;AACA;qBACaD,G,GAAN,MAAMA,GAAN,SAAkBC,eAAlB,CAAkC,E;;AAEzCD,MAAAA,GAAG,CAACE,SAAJ,GAAgB,cAAcF,GAAd,CAAkB;AAChCG,QAAAA,YAAY,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC1B,cAAMC,MAAM,GAAGF,KAAf,CAD0B,CAG1B;;AACA,cAAMG,MAAM,GAAG,KAAKC,OAApB;AACA,cAAM;AAAEC,YAAAA;AAAF,cAAgBF,MAAtB;AACA,cAAMG,EAAE,GAAG,KAAKC,GAAhB;AACA,cAAIC,SAAS,GAAG,KAAKC,UAArB,CAP0B,CAS1B;;AACA,cAAIH,EAAJ,EAAQ;AACN,iBAAKG,UAAL,GAAkBH,EAAE,CAACI,KAAH,CAAS,CAAT,CAAlB;AACAF,YAAAA,SAAS,GAAG,KAAKC,UAAjB,CAFM,CAIN;;AACA,iBAAKF,GAAL,GAAWI,SAAX;AACD;;AACDR,UAAAA,MAAM,CAACS,YAAP,CAAoBJ,SAApB,EAA+B,CAA/B,EAjB0B,CAmB1B;;AACA,eAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,SAApB,EAA+BQ,CAAC,IAAI,CAApC,EAAuC;AACrCX,YAAAA,MAAM,CAACD,MAAM,GAAGY,CAAV,CAAN,IAAsBL,SAAS,CAACK,CAAD,CAA/B;AACD;AACF;;AAxB+B,OAAlC;AA0BAjB,MAAAA,GAAG,CAACkB,SAAJ,GAAgBlB,GAAG,CAACE,SAApB","sourcesContent":["import {\n  BlockCipherMode,\n} from './cipher-core.js';\n\n/**\n * Output Feedback block mode.\n */\nexport class OFB extends BlockCipherMode {\n}\nOFB.Encryptor = class extends OFB {\n  processBlock(words, offset) {\n    const _words = words;\n\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n    const iv = this._iv;\n    let keystream = this._keystream;\n\n    // Generate keystream\n    if (iv) {\n      this._keystream = iv.slice(0);\n      keystream = this._keystream;\n\n      // Remove IV for subsequent blocks\n      this._iv = undefined;\n    }\n    cipher.encryptBlock(keystream, 0);\n\n    // Encrypt\n    for (let i = 0; i < blockSize; i += 1) {\n      _words[offset + i] ^= keystream[i];\n    }\n  }\n};\nOFB.Decryptor = OFB.Encryptor;\n"]}
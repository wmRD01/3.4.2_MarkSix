{"version":3,"sources":["file:///C:/CocosProject/3.4.2_MarkSix/node_modules/crypto-es/lib/rc4.js"],"names":["RC4Algo","RC4DropAlgo","generateKeystreamWord","S","_S","i","_i","j","_j","keystreamWord","n","t","StreamCipher","_doReset","key","_key","keyWords","words","keySigBytes","sigBytes","keyByteIndex","keyByte","_doProcessBlock","M","offset","_M","call","keySize","ivSize","RC4","_createHelper","constructor","Object","assign","cfg","drop","RC4Drop"],"mappings":"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","sourcesContent":["import {\n  StreamCipher,\n} from './cipher-core.js';\n\nfunction generateKeystreamWord() {\n  // Shortcuts\n  const S = this._S;\n  let i = this._i;\n  let j = this._j;\n\n  // Generate keystream word\n  let keystreamWord = 0;\n  for (let n = 0; n < 4; n += 1) {\n    i = (i + 1) % 256;\n    j = (j + S[i]) % 256;\n\n    // Swap\n    const t = S[i];\n    S[i] = S[j];\n    S[j] = t;\n\n    keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n  }\n\n  // Update counters\n  this._i = i;\n  this._j = j;\n\n  return keystreamWord;\n}\n\n/**\n * RC4 stream cipher algorithm.\n */\nexport class RC4Algo extends StreamCipher {\n  _doReset() {\n    // Shortcuts\n    const key = this._key;\n    const keyWords = key.words;\n    const keySigBytes = key.sigBytes;\n\n    // Init sbox\n    this._S = [];\n    const S = this._S;\n    for (let i = 0; i < 256; i += 1) {\n      S[i] = i;\n    }\n\n    // Key setup\n    for (let i = 0, j = 0; i < 256; i += 1) {\n      const keyByteIndex = i % keySigBytes;\n      const keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n      j = (j + S[i] + keyByte) % 256;\n\n      // Swap\n      const t = S[i];\n      S[i] = S[j];\n      S[j] = t;\n    }\n\n    // Counters\n    this._j = 0;\n    this._i = this._j;\n  }\n\n  _doProcessBlock(M, offset) {\n    const _M = M;\n\n    _M[offset] ^= generateKeystreamWord.call(this);\n  }\n}\nRC4Algo.keySize = 256 / 32;\nRC4Algo.ivSize = 0;\n\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n */\nexport const RC4 = StreamCipher._createHelper(RC4Algo);\n\n/**\n * Modified RC4 stream cipher algorithm.\n */\nexport class RC4DropAlgo extends RC4Algo {\n  constructor(...args) {\n    super(...args);\n\n    /**\n     * Configuration options.\n     *\n     * @property {number} drop The number of keystream words to drop. Default 192\n     */\n    Object.assign(this.cfg, { drop: 192 });\n  }\n\n  _doReset() {\n    super._doReset.call(this);\n\n    // Drop\n    for (let i = this.cfg.drop; i > 0; i -= 1) {\n      generateKeystreamWord.call(this);\n    }\n  }\n}\n\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n */\nexport const RC4Drop = StreamCipher._createHelper(RC4DropAlgo);\n"]}